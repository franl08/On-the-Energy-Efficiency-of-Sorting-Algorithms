Language , Program , Input Size , Package , Core(s) , GPU , DRAM? , Time (sec)
C, bubblesort_25000.sh, 25000, 2.494019 , 1.140930 , 0.034729 , 0.000000 ,  0.113988 
C, cyclesort_25000.sh, 25000, 2.641052 , 1.316406 , 0.038696 , 0.000000 ,  0.109724 
C, heapsort_25000.sh, 25000, 2.735718 , 1.393188 , 0.041260 , 0.000000 ,  0.110408 
C, mergesort_25000.sh, 25000, 2.877380 , 1.476807 , 0.035461 , 0.000000 ,  0.118266 
C, oddevensort_25000.sh, 25000, 2.686462 , 1.295227 , 0.051208 , 0.000000 ,  0.115375 
C, quicksort_25000.sh, 25000, 2.653992 , 1.345215 , 0.028137 , 0.000000 ,  0.109788 
C, selectionsort_25000.sh, 25000, 2.331421 , 1.199890 , 0.030212 , 0.000000 ,  0.095131 
C++, bubblesort_25000.sh, 25000, 11.280823 , 5.960876 , 0.047974 , 0.000000 ,  0.456551 
C++, cyclesort_25000.sh, 25000, 11.486084 , 6.048157 , 0.031067 , 0.000000 ,  0.468087 
C++, heapsort_25000.sh, 25000, 11.788330 , 6.195068 , 0.062500 , 0.000000 ,  0.477913 
C++, mergesort_25000.sh, 25000, 12.601440 , 6.450989 , 0.163086 , 0.000000 ,  0.519657 
C++, oddevensort_25000.sh, 25000, 11.422729 , 6.022278 , 0.048706 , 0.000000 ,  0.46315 
C++, quicksort_25000.sh, 25000, 11.343750 , 5.958374 , 0.037354 , 0.000000 ,  0.460609 
C++, selectionsort_25000.sh, 25000, 11.614380 , 5.763977 , 0.197144 , 0.000000 ,  0.487659 
C#, bubblesort_25000.sh, 25000, 12.832275 , 6.611511 , 0.067261 , 0.000000 ,  0.531517 
C#, cyclesort_25000.sh, 25000, 12.765991 , 6.765076 , 0.032471 , 0.000000 ,  0.517137 
C#, heapsort_25000.sh, 25000, 12.691406 , 6.742310 , 0.022156 , 0.000000 ,  0.511766 
C#, mergesort_25000.sh, 25000, 12.873596 , 6.807129 , 0.030518 , 0.000000 ,  0.520693 
C#, oddevensort_25000.sh, 25000, 12.650024 , 6.753723 , 0.016541 , 0.000000 ,  0.509481 
C#, quicksort_25000.sh, 25000, 12.914551 , 6.820374 , 0.039978 , 0.000000 ,  0.522713 
C#, selectionsort_25000.sh, 25000, 12.825623 , 6.798950 , 0.024902 , 0.000000 ,  0.518528 
Go, bubblesort_25000.sh, 25000, 3.513794 , 1.683899 , 0.038757 , 0.000000 ,  0.153182 
Go, cyclesort_25000.sh, 25000, 3.251953 , 1.556030 , 0.023499 , 0.000000 ,  0.143453 
Go, heapsort_25000.sh, 25000, 3.845215 , 1.871643 , 0.115112 , 0.000000 ,  0.159346 
Go, mergesort_25000.sh, 25000, 3.330383 , 1.471802 , 0.021912 , 0.000000 ,  0.156751 
Go, oddevensort_25000.sh, 25000, 3.414978 , 1.652344 , 0.036255 , 0.000000 ,  0.146519 
Go, quicksort_25000.sh, 25000, 3.722839 , 1.816711 , 0.021790 , 0.000000 ,  0.16079 
Go, selectionsort_25000.sh, 25000, 3.153137 , 1.408325 , 0.028564 , 0.000000 ,  0.147035 
Haskell, bubblesort_25000.sh, 25000, 311.119995 , 162.584412 , 0.201294 , 0.000000 ,  12.5967 
Haskell, cyclesort_25000.sh, 25000, 586.076965 , 305.941284 , 0.174072 , 0.000000 ,  23.7409 
Haskell, heapsort_25000.sh, 25000, 307.809631 , 160.676147 , 0.112000 , 0.000000 ,  12.4693 
Haskell, mergesort_25000.sh, 25000, 307.073547 , 160.387146 , 0.152771 , 0.000000 ,  12.4309 
Haskell, oddevensort_25000.sh, 25000, 286.860962 , 149.753357 , 0.144592 , 0.000000 ,  11.6098 
Haskell, quicksort_25000.sh, 25000, 300.064087 , 157.179810 , 0.146545 , 0.000000 ,  12.1162 
Haskell, selectionsort_25000.sh, 25000, 321.143372 , 167.589966 , 0.299072 , 0.000000 ,  13.0025 
Rust, bubblesort_25000.sh, 25000, 233.594421 , 123.421814 , 0.087219 , 0.000000 ,  9.43616 
Rust, cyclesort_25000.sh, 25000, 230.056274 , 121.526978 , 0.085327 , 0.000000 ,  9.30433 
Rust, heapsort_25000.sh, 25000, 233.339966 , 122.916992 , 0.158508 , 0.000000 ,  9.45851 
Rust, mergesort_25000.sh, 25000, 220.881653 , 116.555603 , 0.079041 , 0.000000 ,  8.94125 
Rust, oddevensort_25000.sh, 25000, 228.802979 , 120.542908 , 0.189453 , 0.000000 ,  9.26193 
Rust, quicksort_25000.sh, 25000, 230.233643 , 121.408203 , 0.085022 , 0.000000 ,  9.32641 
Rust, selectionsort_25000.sh, 25000, 226.525574 , 119.557129 , 0.106262 , 0.000000 ,  9.16085 
Swift, bubblesort_25000.sh, 25000, 350.685303 , 185.783936 , 0.107910 , 0.000000 ,  14.2472 
Swift, cyclesort_25000.sh, 25000, 338.731812 , 179.238220 , 0.187256 , 0.000000 ,  13.7792 
Swift, heapsort_25000.sh, 25000, 371.869019 , 196.934387 , 0.189697 , 0.000000 ,  15.1085 
Swift, mergesort_25000.sh, 25000, 363.491760 , 192.407898 , 0.107239 , 0.000000 ,  14.7926 
Swift, oddevensort_25000.sh, 25000, 350.052551 , 185.416260 , 0.097534 , 0.000000 ,  14.2312 
Swift, quicksort_25000.sh, 25000, 362.359558 , 191.939148 , 0.100647 , 0.000000 ,  14.7377 
Swift, selectionsort_25000.sh, 25000, 350.815430 , 185.689697 , 0.111389 , 0.000000 ,  14.2791 
C, bubblesort_25000.sh, 25000, 2.495117 , 1.072571 , 0.035706 , 0.000000 ,  0.118695 
C, cyclesort_25000.sh, 25000, 2.898010 , 1.467041 , 0.043945 , 0.000000 ,  0.119155 
C, heapsort_25000.sh, 25000, 3.060730 , 1.399231 , 0.142944 , 0.000000 ,  0.129348 
C, mergesort_25000.sh, 25000, 2.813232 , 1.448364 , 0.033508 , 0.000000 ,  0.116561 
C, oddevensort_25000.sh, 25000, 2.823608 , 1.430237 , 0.036255 , 0.000000 ,  0.11758 
C, quicksort_25000.sh, 25000, 2.624756 , 1.228333 , 0.033081 , 0.000000 ,  0.116671 
C, selectionsort_25000.sh, 25000, 2.732178 , 1.391174 , 0.035706 , 0.000000 ,  0.112205 
C++, bubblesort_25000.sh, 25000, 11.236511 , 5.748474 , 0.044739 , 0.000000 ,  0.468382 
C++, cyclesort_25000.sh, 25000, 11.659851 , 6.041321 , 0.042847 , 0.000000 ,  0.480913 
C++, heapsort_25000.sh, 25000, 11.628113 , 6.059143 , 0.043884 , 0.000000 ,  0.475518 
C++, mergesort_25000.sh, 25000, 12.741394 , 6.665039 , 0.041199 , 0.000000 ,  0.521029 
C++, oddevensort_25000.sh, 25000, 11.357361 , 5.952209 , 0.040894 , 0.000000 ,  0.462773 
C++, quicksort_25000.sh, 25000, 11.540039 , 6.016724 , 0.042664 , 0.000000 ,  0.474592 
C++, selectionsort_25000.sh, 25000, 11.769470 , 6.080383 , 0.071350 , 0.000000 ,  0.486438 
C#, bubblesort_25000.sh, 25000, 13.093750 , 6.761292 , 0.070984 , 0.000000 ,  0.542099 
C#, cyclesort_25000.sh, 25000, 13.094482 , 6.840271 , 0.030334 , 0.000000 ,  0.538061 
C#, heapsort_25000.sh, 25000, 13.012512 , 6.813599 , 0.016785 , 0.000000 ,  0.534735 
C#, mergesort_25000.sh, 25000, 13.122742 , 6.910950 , 0.040161 , 0.000000 ,  0.534199 
C#, oddevensort_25000.sh, 25000, 13.025085 , 6.885071 , 0.025269 , 0.000000 ,  0.528891 
C#, quicksort_25000.sh, 25000, 13.021362 , 6.864563 , 0.030762 , 0.000000 ,  0.530858 
C#, selectionsort_25000.sh, 25000, 13.201843 , 6.881775 , 0.097473 , 0.000000 ,  0.539345 
Go, bubblesort_25000.sh, 25000, 3.600281 , 1.652649 , 0.031067 , 0.000000 ,  0.16439 
Go, cyclesort_25000.sh, 25000, 3.450073 , 1.603577 , 0.085205 , 0.000000 ,  0.149525 
Go, heapsort_25000.sh, 25000, 3.715576 , 1.753235 , 0.036682 , 0.000000 ,  0.163594 
Go, mergesort_25000.sh, 25000, 3.365723 , 1.638184 , 0.025818 , 0.000000 ,  0.14541 
Go, oddevensort_25000.sh, 25000, 3.475525 , 1.627014 , 0.022156 , 0.000000 ,  0.154468 
Go, quicksort_25000.sh, 25000, 3.765259 , 1.827881 , 0.086487 , 0.000000 ,  0.158091 
Go, selectionsort_25000.sh, 25000, 3.627014 , 1.658875 , 0.097595 , 0.000000 ,  0.158344 
Haskell, bubblesort_25000.sh, 25000, 306.000732 , 159.030640 , 0.131958 , 0.000000 ,  12.4531 
Haskell, cyclesort_25000.sh, 25000, 589.374878 , 307.365234 , 0.310791 , 0.000000 ,  23.8847 
Haskell, heapsort_25000.sh, 25000, 309.009949 , 161.070435 , 0.246948 , 0.000000 ,  12.5273 
Haskell, mergesort_25000.sh, 25000, 308.189148 , 160.508240 , 0.261780 , 0.000000 ,  12.499 
Haskell, oddevensort_25000.sh, 25000, 287.518250 , 149.945068 , 0.233154 , 0.000000 ,  11.6458 
Haskell, quicksort_25000.sh, 25000, 304.358765 , 159.002625 , 0.191406 , 0.000000 ,  12.3155 
Haskell, selectionsort_25000.sh, 25000, 330.815491 , 173.155579 , 0.166016 , 0.000000 ,  13.3528 
Rust, bubblesort_25000.sh, 25000, 224.553894 , 119.282532 , 0.117615 , 0.000000 ,  9.01237 
Rust, cyclesort_25000.sh, 25000, 237.473450 , 125.090759 , 0.094299 , 0.000000 ,  9.62952 
Rust, heapsort_25000.sh, 25000, 223.930298 , 118.325989 , 0.105042 , 0.000000 ,  9.04407 
Rust, mergesort_25000.sh, 25000, 231.320496 , 121.895081 , 0.079651 , 0.000000 ,  9.3781 
Rust, oddevensort_25000.sh, 25000, 230.163086 , 122.233154 , 0.086670 , 0.000000 ,  9.24042 
Rust, quicksort_25000.sh, 25000, 225.187622 , 118.750854 , 0.094299 , 0.000000 ,  9.111 
Rust, selectionsort_25000.sh, 25000, 236.623108 , 124.610840 , 0.096130 , 0.000000 ,  9.58762 
Swift, bubblesort_25000.sh, 25000, 343.314514 , 181.480591 , 0.206421 , 0.000000 ,  13.9657 
Swift, cyclesort_25000.sh, 25000, 342.653564 , 181.683960 , 0.106628 , 0.000000 ,  13.8926 
Swift, heapsort_25000.sh, 25000, 363.740295 , 192.607910 , 0.118530 , 0.000000 ,  14.7767 
Swift, mergesort_25000.sh, 25000, 372.668030 , 197.384277 , 0.126099 , 0.000000 ,  15.1353 
Swift, oddevensort_25000.sh, 25000, 343.754028 , 182.031372 , 0.097900 , 0.000000 ,  13.9807 
Swift, quicksort_25000.sh, 25000, 357.246582 , 189.090515 , 0.109863 , 0.000000 ,  14.5314 
Swift, selectionsort_25000.sh, 25000, 342.433716 , 181.032593 , 0.166199 , 0.000000 ,  13.951 
C, bubblesort_25000.sh, 25000, 2.630981 , 1.349243 , 0.040649 , 0.000000 ,  0.105594 
C, cyclesort_25000.sh, 25000, 2.614441 , 1.290039 , 0.036438 , 0.000000 ,  0.110965 
C, heapsort_25000.sh, 25000, 2.852051 , 1.441284 , 0.036926 , 0.000000 ,  0.11629 
C, mergesort_25000.sh, 25000, 2.956909 , 1.424072 , 0.035645 , 0.000000 ,  0.127346 
C, oddevensort_25000.sh, 25000, 2.585144 , 1.316895 , 0.033508 , 0.000000 ,  0.10421 
C, quicksort_25000.sh, 25000, 2.843323 , 1.399841 , 0.036377 , 0.000000 ,  0.121172 
C, selectionsort_25000.sh, 25000, 2.428894 , 1.191650 , 0.033325 , 0.000000 ,  0.104451 
C++, bubblesort_25000.sh, 25000, 11.334167 , 5.894409 , 0.034424 , 0.000000 ,  0.466961 
C++, cyclesort_25000.sh, 25000, 11.820618 , 6.137146 , 0.036743 , 0.000000 ,  0.486117 
C++, heapsort_25000.sh, 25000, 11.634094 , 6.034607 , 0.043213 , 0.000000 ,  0.480522 
C++, mergesort_25000.sh, 25000, 12.726685 , 6.502625 , 0.164917 , 0.000000 ,  0.522509 
C++, oddevensort_25000.sh, 25000, 11.655823 , 6.147949 , 0.050720 , 0.000000 ,  0.469265 
C++, quicksort_25000.sh, 25000, 11.698181 , 6.181885 , 0.037048 , 0.000000 ,  0.472677 
C++, selectionsort_25000.sh, 25000, 11.535950 , 6.040833 , 0.041809 , 0.000000 ,  0.471164 
C#, bubblesort_25000.sh, 25000, 13.059326 , 6.778625 , 0.115601 , 0.000000 ,  0.533057 
C#, cyclesort_25000.sh, 25000, 13.068481 , 6.933228 , 0.027344 , 0.000000 ,  0.528029 
C#, heapsort_25000.sh, 25000, 13.062134 , 6.872925 , 0.032837 , 0.000000 ,  0.531768 
C#, mergesort_25000.sh, 25000, 12.938721 , 6.761108 , 0.022949 , 0.000000 ,  0.531335 
C#, oddevensort_25000.sh, 25000, 12.980957 , 6.675354 , 0.114807 , 0.000000 ,  0.536095 
C#, quicksort_25000.sh, 25000, 13.148865 , 6.972107 , 0.040161 , 0.000000 ,  0.530001 
C#, selectionsort_25000.sh, 25000, 13.139648 , 6.930786 , 0.031677 , 0.000000 ,  0.533315 
Go, bubblesort_25000.sh, 25000, 3.207336 , 1.511169 , 0.022339 , 0.000000 ,  0.142924 
Go, cyclesort_25000.sh, 25000, 3.567383 , 1.745178 , 0.018005 , 0.000000 ,  0.153864 
Go, heapsort_25000.sh, 25000, 3.785339 , 1.852417 , 0.055969 , 0.000000 ,  0.159854 
Go, mergesort_25000.sh, 25000, 3.203247 , 1.484375 , 0.033264 , 0.000000 ,  0.143848 
Go, oddevensort_25000.sh, 25000, 3.642395 , 1.743408 , 0.084351 , 0.000000 ,  0.15535 
Go, quicksort_25000.sh, 25000, 3.825562 , 1.942383 , 0.031921 , 0.000000 ,  0.157917 
Go, selectionsort_25000.sh, 25000, 3.155334 , 1.445374 , 0.025757 , 0.000000 ,  0.143948 
Haskell, bubblesort_25000.sh, 25000, 307.418518 , 160.783081 , 0.227600 , 0.000000 ,  12.4186 
Haskell, cyclesort_25000.sh, 25000, 581.750122 , 304.278137 , 0.185364 , 0.000000 ,  23.4916 
Haskell, heapsort_25000.sh, 25000, 307.109375 , 161.644775 , 0.139771 , 0.000000 ,  12.418 
Haskell, mergesort_25000.sh, 25000, 304.312561 , 160.342285 , 0.139709 , 0.000000 ,  12.3166 
Haskell, oddevensort_25000.sh, 25000, 278.585449 , 146.761353 , 0.142578 , 0.000000 ,  11.2755 
Haskell, quicksort_25000.sh, 25000, 304.632935 , 160.323669 , 0.128845 , 0.000000 ,  12.3659 
Haskell, selectionsort_25000.sh, 25000, 323.682617 , 170.731812 , 0.137024 , 0.000000 ,  13.0959 
Rust, bubblesort_25000.sh, 25000, 230.901428 , 123.122559 , 0.114563 , 0.000000 ,  9.32227 
Rust, cyclesort_25000.sh, 25000, 229.012939 , 121.837463 , 0.100891 , 0.000000 ,  9.27136 
Rust, heapsort_25000.sh, 25000, 223.803589 , 119.138672 , 0.097290 , 0.000000 ,  9.05758 
Rust, mergesort_25000.sh, 25000, 230.756653 , 122.483887 , 0.100830 , 0.000000 ,  9.37518 
Rust, oddevensort_25000.sh, 25000, 227.769531 , 120.966614 , 0.102844 , 0.000000 ,  9.23316 
Rust, quicksort_25000.sh, 25000, 224.081116 , 119.350708 , 0.102600 , 0.000000 ,  9.06103 
Rust, selectionsort_25000.sh, 25000, 227.472595 , 120.994019 , 0.096252 , 0.000000 ,  9.21267 
Swift, bubblesort_25000.sh, 25000, 338.473999 , 180.919861 , 0.130737 , 0.000000 ,  13.7548 
Swift, cyclesort_25000.sh, 25000, 341.514221 , 181.980896 , 0.129883 , 0.000000 ,  13.9204 
Swift, heapsort_25000.sh, 25000, 372.054504 , 198.834106 , 0.145386 , 0.000000 ,  15.1214 
Swift, mergesort_25000.sh, 25000, 357.656250 , 191.161194 , 0.124329 , 0.000000 ,  14.5439 
Swift, oddevensort_25000.sh, 25000, 335.588074 , 179.281738 , 0.131531 , 0.000000 ,  13.6472 
Swift, quicksort_25000.sh, 25000, 360.508728 , 192.512512 , 0.126587 , 0.000000 ,  14.6746 
Swift, selectionsort_25000.sh, 25000, 337.183105 , 180.380615 , 0.132019 , 0.000000 ,  13.692 
C, bubblesort_25000.sh, 25000, 2.566406 , 1.268494 , 0.013062 , 0.000000 ,  0.113856 
C, cyclesort_25000.sh, 25000, 2.325806 , 1.192749 , 0.015930 , 0.000000 ,  0.098525 
C, heapsort_25000.sh, 25000, 2.739807 , 1.422852 , 0.009949 , 0.000000 ,  0.112595 
C, mergesort_25000.sh, 25000, 2.581238 , 1.351196 , 0.021179 , 0.000000 ,  0.10439 
C, oddevensort_25000.sh, 25000, 2.664673 , 1.324219 , 0.015381 , 0.000000 ,  0.113386 
C, quicksort_25000.sh, 25000, 2.493530 , 1.306702 , 0.022400 , 0.000000 ,  0.10229 
C, selectionsort_25000.sh, 25000, 2.586060 , 1.317932 , 0.017822 , 0.000000 ,  0.109207 
C++, bubblesort_25000.sh, 25000, 11.189941 , 5.928833 , 0.014221 , 0.000000 ,  0.458555 
C++, cyclesort_25000.sh, 25000, 11.628174 , 6.157227 , 0.028992 , 0.000000 ,  0.473994 
C++, heapsort_25000.sh, 25000, 11.232178 , 5.933350 , 0.017273 , 0.000000 ,  0.459849 
C++, mergesort_25000.sh, 25000, 12.509521 , 6.609375 , 0.027527 , 0.000000 ,  0.510702 
C++, oddevensort_25000.sh, 25000, 10.959351 , 5.752197 , 0.011536 , 0.000000 ,  0.454662 
C++, quicksort_25000.sh, 25000, 11.297791 , 5.911255 , 0.018982 , 0.000000 ,  0.467982 
C++, selectionsort_25000.sh, 25000, 11.250854 , 5.982361 , 0.013367 , 0.000000 ,  0.45619 
C#, bubblesort_25000.sh, 25000, 12.846313 , 6.800293 , 0.022461 , 0.000000 ,  0.525973 
C#, cyclesort_25000.sh, 25000, 12.867126 , 6.832764 , 0.011414 , 0.000000 ,  0.526127 
C#, heapsort_25000.sh, 25000, 12.851318 , 6.856995 , 0.016907 , 0.000000 ,  0.52156 
C#, mergesort_25000.sh, 25000, 12.844604 , 6.803955 , 0.016663 , 0.000000 ,  0.525617 
C#, oddevensort_25000.sh, 25000, 12.893738 , 6.862427 , 0.006042 , 0.000000 ,  0.526721 
C#, quicksort_25000.sh, 25000, 12.813110 , 6.848938 , 0.009583 , 0.000000 ,  0.520751 
C#, selectionsort_25000.sh, 25000, 12.942810 , 6.878723 , 0.030212 , 0.000000 ,  0.526087 
Go, bubblesort_25000.sh, 25000, 3.656250 , 1.892944 , 0.009460 , 0.000000 ,  0.149358 
Go, cyclesort_25000.sh, 25000, 3.085205 , 1.463989 , 0.012329 , 0.000000 ,  0.139009 
Go, heapsort_25000.sh, 25000, 3.357056 , 1.647766 , 0.009277 , 0.000000 ,  0.145652 
Go, mergesort_25000.sh, 25000, 3.554138 , 1.680115 , 0.008667 , 0.000000 ,  0.160799 
Go, oddevensort_25000.sh, 25000, 3.083008 , 1.301514 , 0.018311 , 0.000000 ,  0.151916 
Go, quicksort_25000.sh, 25000, 3.460632 , 1.761414 , 0.010864 , 0.000000 ,  0.144565 
Go, selectionsort_25000.sh, 25000, 3.326233 , 1.594910 , 0.009521 , 0.000000 ,  0.149109 
Haskell, bubblesort_25000.sh, 25000, 305.271790 , 160.832031 , 0.138489 , 0.000000 ,  12.3678 
Haskell, cyclesort_25000.sh, 25000, 575.119934 , 302.956482 , 0.234680 , 0.000000 ,  23.274 
Haskell, heapsort_25000.sh, 25000, 305.467407 , 161.381042 , 0.138916 , 0.000000 ,  12.3283 
Haskell, mergesort_25000.sh, 25000, 304.516663 , 160.599121 , 0.137939 , 0.000000 ,  12.306 
Haskell, oddevensort_25000.sh, 25000, 281.339294 , 147.869080 , 0.139038 , 0.000000 ,  11.4095 
Haskell, quicksort_25000.sh, 25000, 301.933838 , 159.060608 , 0.142944 , 0.000000 ,  12.2261 
Haskell, selectionsort_25000.sh, 25000, 314.864624 , 165.920471 , 0.152283 , 0.000000 ,  12.7338 
Rust, bubblesort_25000.sh, 25000, 226.492859 , 120.719788 , 0.096130 , 0.000000 ,  9.14947 
Rust, cyclesort_25000.sh, 25000, 224.555969 , 119.623535 , 0.100098 , 0.000000 ,  9.07799 
Rust, heapsort_25000.sh, 25000, 220.606506 , 117.622498 , 0.094055 , 0.000000 ,  8.91324 
Rust, mergesort_25000.sh, 25000, 226.974792 , 120.718567 , 0.111145 , 0.000000 ,  9.18036 
Rust, oddevensort_25000.sh, 25000, 226.745056 , 120.588379 , 0.096924 , 0.000000 ,  9.17998 
Rust, quicksort_25000.sh, 25000, 223.570312 , 118.792908 , 0.104553 , 0.000000 ,  9.0603 
Rust, selectionsort_25000.sh, 25000, 227.062622 , 120.618225 , 0.108459 , 0.000000 ,  9.19969 
Swift, bubblesort_25000.sh, 25000, 336.563660 , 179.428650 , 0.134338 , 0.000000 ,  13.7145 
Swift, cyclesort_25000.sh, 25000, 350.437317 , 187.151855 , 0.138367 , 0.000000 ,  14.2475 
Swift, heapsort_25000.sh, 25000, 360.119019 , 192.521790 , 0.126221 , 0.000000 ,  14.6287 
Swift, mergesort_25000.sh, 25000, 370.592957 , 198.038025 , 0.137756 , 0.000000 ,  15.0622 
Swift, oddevensort_25000.sh, 25000, 336.093933 , 179.500488 , 0.120667 , 0.000000 ,  13.6773 
Swift, quicksort_25000.sh, 25000, 370.055481 , 197.257935 , 0.146484 , 0.000000 ,  15.0817 
Swift, selectionsort_25000.sh, 25000, 350.391968 , 186.914673 , 0.130676 , 0.000000 ,  14.2725 
C, bubblesort_25000.sh, 25000, 2.309021 , 1.184326 , 0.017090 , 0.000000 ,  0.095689 
C, cyclesort_25000.sh, 25000, 2.298523 , 1.121399 , 0.013489 , 0.000000 ,  0.102148 
C, heapsort_25000.sh, 25000, 2.816528 , 1.483582 , 0.017578 , 0.000000 ,  0.113916 
C, mergesort_25000.sh, 25000, 2.562378 , 1.328430 , 0.013489 , 0.000000 ,  0.105793 
C, oddevensort_25000.sh, 25000, 2.774353 , 1.435303 , 0.018433 , 0.000000 ,  0.113432 
C, quicksort_25000.sh, 25000, 2.425171 , 1.218994 , 0.011292 , 0.000000 ,  0.10529 
C, selectionsort_25000.sh, 25000, 2.639587 , 1.401489 , 0.012695 , 0.000000 ,  0.105524 
C++, bubblesort_25000.sh, 25000, 11.187439 , 5.950012 , 0.017273 , 0.000000 ,  0.456641 
C++, cyclesort_25000.sh, 25000, 11.049927 , 5.879456 , 0.018311 , 0.000000 ,  0.44897 
C++, heapsort_25000.sh, 25000, 11.080811 , 5.890686 , 0.014893 , 0.000000 ,  0.451612 
C++, mergesort_25000.sh, 25000, 12.278015 , 6.531067 , 0.018738 , 0.000000 ,  0.500296 
C++, oddevensort_25000.sh, 25000, 11.294739 , 6.054199 , 0.017273 , 0.000000 ,  0.454316 
C++, quicksort_25000.sh, 25000, 11.393799 , 6.078491 , 0.021118 , 0.000000 ,  0.460833 
C++, selectionsort_25000.sh, 25000, 11.064087 , 5.861572 , 0.016479 , 0.000000 ,  0.454559 
C#, bubblesort_25000.sh, 25000, 12.859253 , 6.851624 , 0.013550 , 0.000000 ,  0.52468 
C#, cyclesort_25000.sh, 25000, 12.754272 , 6.880798 , 0.014526 , 0.000000 ,  0.513416 
C#, heapsort_25000.sh, 25000, 12.876404 , 6.883118 , 0.018494 , 0.000000 ,  0.522225 
C#, mergesort_25000.sh, 25000, 12.712585 , 6.823853 , 0.010376 , 0.000000 ,  0.513625 
C#, oddevensort_25000.sh, 25000, 12.816772 , 6.868652 , 0.014343 , 0.000000 ,  0.519297 
C#, quicksort_25000.sh, 25000, 12.755127 , 6.824585 , 0.012329 , 0.000000 ,  0.518041 
C#, selectionsort_25000.sh, 25000, 12.778442 , 6.879395 , 0.017761 , 0.000000 ,  0.514113 
Go, bubblesort_25000.sh, 25000, 3.593445 , 1.704956 , 0.008057 , 0.000000 ,  0.160534 
Go, cyclesort_25000.sh, 25000, 2.982300 , 1.318420 , 0.009705 , 0.000000 ,  0.14337 
Go, heapsort_25000.sh, 25000, 3.572388 , 1.884705 , 0.011841 , 0.000000 ,  0.1437 
Go, mergesort_25000.sh, 25000, 3.362976 , 1.640503 , 0.012512 , 0.000000 ,  0.146401 
Go, oddevensort_25000.sh, 25000, 3.190796 , 1.481628 , 0.011963 , 0.000000 ,  0.146157 
Go, quicksort_25000.sh, 25000, 3.613464 , 1.783081 , 0.008484 , 0.000000 ,  0.156629 
Go, selectionsort_25000.sh, 25000, 3.197205 , 1.432129 , 0.012817 , 0.000000 ,  0.151886 
Haskell, bubblesort_25000.sh, 25000, 305.878784 , 161.342163 , 0.129883 , 0.000000 ,  12.383 
Haskell, cyclesort_25000.sh, 25000, 577.288757 , 304.356934 , 0.224121 , 0.000000 ,  23.3528 
Haskell, heapsort_25000.sh, 25000, 305.858459 , 161.255493 , 0.144104 , 0.000000 ,  12.3728 
Haskell, mergesort_25000.sh, 25000, 305.639404 , 161.059998 , 0.149963 , 0.000000 ,  12.3679 
Haskell, oddevensort_25000.sh, 25000, 283.281921 , 149.144470 , 0.126404 , 0.000000 ,  11.4768 
Haskell, quicksort_25000.sh, 25000, 302.586426 , 159.315002 , 0.142029 , 0.000000 ,  12.2644 
Haskell, selectionsort_25000.sh, 25000, 315.203186 , 165.901184 , 0.140259 , 0.000000 ,  12.7716 
Rust, bubblesort_25000.sh, 25000, 226.446777 , 120.466919 , 0.100891 , 0.000000 ,  9.164 
Rust, cyclesort_25000.sh, 25000, 237.251404 , 126.469299 , 0.112488 , 0.000000 ,  9.58528 
Rust, heapsort_25000.sh, 25000, 231.137207 , 123.342834 , 0.097900 , 0.000000 ,  9.33004 
Rust, mergesort_25000.sh, 25000, 229.680786 , 122.463806 , 0.102722 , 0.000000 ,  9.28291 
Rust, oddevensort_25000.sh, 25000, 235.142822 , 125.546570 , 0.096680 , 0.000000 ,  9.48396 
Rust, quicksort_25000.sh, 25000, 224.211975 , 119.434753 , 0.092773 , 0.000000 ,  9.06597 
Rust, selectionsort_25000.sh, 25000, 229.405884 , 121.935364 , 0.108948 , 0.000000 ,  9.2968 
Swift, bubblesort_25000.sh, 25000, 341.979370 , 182.770935 , 0.135681 , 0.000000 ,  13.8985 
Swift, cyclesort_25000.sh, 25000, 337.519104 , 180.430481 , 0.137878 , 0.000000 ,  13.7126 
Swift, heapsort_25000.sh, 25000, 369.505493 , 197.250610 , 0.140381 , 0.000000 ,  15.0412 
Swift, mergesort_25000.sh, 25000, 362.756348 , 193.861206 , 0.138733 , 0.000000 ,  14.7455 
Swift, oddevensort_25000.sh, 25000, 336.821045 , 180.139343 , 0.122253 , 0.000000 ,  13.6836 
Swift, quicksort_25000.sh, 25000, 357.890686 , 191.000427 , 0.131897 , 0.000000 ,  14.5594 
Swift, selectionsort_25000.sh, 25000, 349.333984 , 186.548950 , 0.128784 , 0.000000 ,  14.2153 
C, bubblesort_25000.sh, 25000, 2.309021 , 1.184326 , 0.017090 , 0.000000 ,  0.095689 
C, bubblesort_50000.sh, 50000, 3.458557 , 1.717590 , 0.018005 , 0.000000 ,  0.14975 
C, cyclesort_25000.sh, 25000, 2.298523 , 1.121399 , 0.013489 , 0.000000 ,  0.102148 
C, cyclesort_50000.sh, 50000, 3.681274 , 1.934875 , 0.017578 , 0.000000 ,  0.148228 
C, heapsort_25000.sh, 25000, 2.816528 , 1.483582 , 0.017578 , 0.000000 ,  0.113916 
C, heapsort_50000.sh, 50000, 3.094482 , 1.602478 , 0.015137 , 0.000000 ,  0.129099 
C, mergesort_25000.sh, 25000, 2.562378 , 1.328430 , 0.013489 , 0.000000 ,  0.105793 
C, mergesort_50000.sh, 50000, 3.967773 , 2.091492 , 0.022034 , 0.000000 ,  0.162629 
C, oddevensort_25000.sh, 25000, 2.774353 , 1.435303 , 0.018433 , 0.000000 ,  0.113432 
C, oddevensort_50000.sh, 50000, 3.136902 , 1.595703 , 0.015076 , 0.000000 ,  0.134849 
C, quicksort_25000.sh, 25000, 2.425171 , 1.218994 , 0.011292 , 0.000000 ,  0.10529 
C, quicksort_50000.sh, 50000, 3.583313 , 1.853638 , 0.014587 , 0.000000 ,  0.148991 
C, selectionsort_25000.sh, 25000, 2.639587 , 1.401489 , 0.012695 , 0.000000 ,  0.105524 
C, selectionsort_50000.sh, 50000, 3.444092 , 1.685730 , 0.017578 , 0.000000 ,  0.150915 
C++, bubblesort_25000.sh, 25000, 11.187439 , 5.950012 , 0.017273 , 0.000000 ,  0.456641 
C++, bubblesort_50000.sh, 50000, 12.070374 , 6.386108 , 0.014465 , 0.000000 ,  0.495121 
C++, cyclesort_25000.sh, 25000, 11.049927 , 5.879456 , 0.018311 , 0.000000 ,  0.44897 
C++, cyclesort_50000.sh, 50000, 12.495117 , 6.682983 , 0.025330 , 0.000000 ,  0.504139 
C++, heapsort_25000.sh, 25000, 11.080811 , 5.890686 , 0.014893 , 0.000000 ,  0.451612 
C++, heapsort_50000.sh, 50000, 12.541870 , 6.689697 , 0.018433 , 0.000000 ,  0.510283 
C++, mergesort_25000.sh, 25000, 12.278015 , 6.531067 , 0.018738 , 0.000000 ,  0.500296 
C++, mergesort_50000.sh, 50000, 13.047852 , 6.850464 , 0.018066 , 0.000000 ,  0.539353 
C++, oddevensort_25000.sh, 25000, 11.294739 , 6.054199 , 0.017273 , 0.000000 ,  0.454316 
C++, oddevensort_50000.sh, 50000, 12.103760 , 6.388000 , 0.019836 , 0.000000 ,  0.49718 
C++, quicksort_25000.sh, 25000, 11.393799 , 6.078491 , 0.021118 , 0.000000 ,  0.460833 
C++, quicksort_50000.sh, 50000, 12.540100 , 6.628052 , 0.019226 , 0.000000 ,  0.513772 
C++, selectionsort_25000.sh, 25000, 11.064087 , 5.861572 , 0.016479 , 0.000000 ,  0.454559 
C++, selectionsort_50000.sh, 50000, 12.762207 , 6.800720 , 0.029602 , 0.000000 ,  0.515565 
C#, bubblesort_25000.sh, 25000, 12.859253 , 6.851624 , 0.013550 , 0.000000 ,  0.52468 
C#, bubblesort_50000.sh, 50000, 13.574158 , 7.254333 , 0.010376 , 0.000000 ,  0.549452 
C#, cyclesort_25000.sh, 25000, 12.754272 , 6.880798 , 0.014526 , 0.000000 ,  0.513416 
C#, cyclesort_50000.sh, 50000, 13.607300 , 7.239502 , 0.023376 , 0.000000 ,  0.554195 
C#, heapsort_25000.sh, 25000, 12.876404 , 6.883118 , 0.018494 , 0.000000 ,  0.522225 
C#, heapsort_50000.sh, 50000, 13.677856 , 7.293518 , 0.015686 , 0.000000 ,  0.555947 
C#, mergesort_25000.sh, 25000, 12.712585 , 6.823853 , 0.010376 , 0.000000 ,  0.513625 
C#, mergesort_50000.sh, 50000, 13.686890 , 7.286987 , 0.007324 , 0.000000 ,  0.55902 
C#, oddevensort_25000.sh, 25000, 12.816772 , 6.868652 , 0.014343 , 0.000000 ,  0.519297 
C#, oddevensort_50000.sh, 50000, 13.440002 , 7.126099 , 0.012024 , 0.000000 ,  0.550464 
C#, quicksort_25000.sh, 25000, 12.755127 , 6.824585 , 0.012329 , 0.000000 ,  0.518041 
C#, quicksort_50000.sh, 50000, 13.688965 , 7.303589 , 0.025391 , 0.000000 ,  0.555277 
C#, selectionsort_25000.sh, 25000, 12.778442 , 6.879395 , 0.017761 , 0.000000 ,  0.514113 
C#, selectionsort_50000.sh, 50000, 13.811890 , 7.410767 , 0.013611 , 0.000000 ,  0.557776 
Go, bubblesort_25000.sh, 25000, 3.593445 , 1.704956 , 0.008057 , 0.000000 ,  0.160534 
Go, bubblesort_50000.sh, 50000, 3.005432 , 1.470398 , 0.011841 , 0.000000 ,  0.1325 
Go, cyclesort_25000.sh, 25000, 2.982300 , 1.318420 , 0.009705 , 0.000000 ,  0.14337 
Go, cyclesort_50000.sh, 50000, 3.615112 , 1.737549 , 0.009644 , 0.000000 ,  0.161109 
Go, heapsort_25000.sh, 25000, 3.572388 , 1.884705 , 0.011841 , 0.000000 ,  0.1437 
Go, heapsort_50000.sh, 50000, 3.521973 , 1.643005 , 0.011108 , 0.000000 ,  0.160509 
Go, mergesort_25000.sh, 25000, 3.362976 , 1.640503 , 0.012512 , 0.000000 ,  0.146401 
Go, mergesort_50000.sh, 50000, 3.006104 , 1.399414 , 0.008850 , 0.000000 ,  0.138118 
Go, oddevensort_25000.sh, 25000, 3.190796 , 1.481628 , 0.011963 , 0.000000 ,  0.146157 
Go, oddevensort_50000.sh, 50000, 3.560913 , 1.866760 , 0.008667 , 0.000000 ,  0.144799 
Go, quicksort_25000.sh, 25000, 3.613464 , 1.783081 , 0.008484 , 0.000000 ,  0.156629 
Go, quicksort_50000.sh, 50000, 3.501099 , 1.598022 , 0.014038 , 0.000000 ,  0.16132 
Go, selectionsort_25000.sh, 25000, 3.197205 , 1.432129 , 0.012817 , 0.000000 ,  0.151886 
Go, selectionsort_50000.sh, 50000, 3.266418 , 1.622559 , 0.012146 , 0.000000 ,  0.139645 
Haskell, bubblesort_25000.sh, 25000, 305.878784 , 161.342163 , 0.129883 , 0.000000 ,  12.383 
Haskell, bubblesort_50000.sh, 50000, 605.495483 , 318.769348 , 0.245850 , 0.000000 ,  24.5409 
Haskell, cyclesort_25000.sh, 25000, 577.288757 , 304.356934 , 0.224121 , 0.000000 ,  23.3528 
Haskell, cyclesort_50000.sh, 50000, 1178.985535 , 621.287476 , 0.431885 , 0.000000 ,  47.6879 
Haskell, heapsort_25000.sh, 25000, 305.858459 , 161.255493 , 0.144104 , 0.000000 ,  12.3728 
Haskell, heapsort_50000.sh, 50000, 607.538818 , 320.106323 , 0.219971 , 0.000000 ,  24.5966 
Haskell, mergesort_25000.sh, 25000, 305.639404 , 161.059998 , 0.149963 , 0.000000 ,  12.3679 
Haskell, mergesort_50000.sh, 50000, 598.570374 , 315.170044 , 0.242371 , 0.000000 ,  24.2308 
Haskell, oddevensort_25000.sh, 25000, 283.281921 , 149.144470 , 0.126404 , 0.000000 ,  11.4768 
Haskell, oddevensort_50000.sh, 50000, 567.211426 , 298.705872 , 0.218262 , 0.000000 ,  22.9607 
Haskell, quicksort_25000.sh, 25000, 302.586426 , 159.315002 , 0.142029 , 0.000000 ,  12.2644 
Haskell, quicksort_50000.sh, 50000, 592.985535 , 311.896301 , 0.238525 , 0.000000 ,  24.0388 
Haskell, selectionsort_25000.sh, 25000, 315.203186 , 165.901184 , 0.140259 , 0.000000 ,  12.7716 
Haskell, selectionsort_50000.sh, 50000, 645.094360 , 340.204346 , 0.253906 , 0.000000 ,  26.1052 
Rust, bubblesort_25000.sh, 25000, 226.446777 , 120.466919 , 0.100891 , 0.000000 ,  9.164 
Rust, bubblesort_50000.sh, 50000, 489.978088 , 261.205627 , 0.169739 , 0.000000 ,  19.795 
Rust, cyclesort_25000.sh, 25000, 237.251404 , 126.469299 , 0.112488 , 0.000000 ,  9.58528 
Rust, cyclesort_50000.sh, 50000, 487.632446 , 258.596008 , 0.192627 , 0.000000 ,  19.802 
Rust, heapsort_25000.sh, 25000, 231.137207 , 123.342834 , 0.097900 , 0.000000 ,  9.33004 
Rust, heapsort_50000.sh, 50000, 472.822510 , 250.822571 , 0.187622 , 0.000000 ,  19.1926 
Rust, mergesort_25000.sh, 25000, 229.680786 , 122.463806 , 0.102722 , 0.000000 ,  9.28291 
Rust, mergesort_50000.sh, 50000, 467.355530 , 246.961121 , 0.204834 , 0.000000 ,  19.0295 
Rust, oddevensort_25000.sh, 25000, 235.142822 , 125.546570 , 0.096680 , 0.000000 ,  9.48396 
Rust, oddevensort_50000.sh, 50000, 475.925659 , 252.615967 , 0.207031 , 0.000000 ,  19.2765 
Rust, quicksort_25000.sh, 25000, 224.211975 , 119.434753 , 0.092773 , 0.000000 ,  9.06597 
Rust, quicksort_50000.sh, 50000, 456.432312 , 243.154541 , 0.188171 , 0.000000 ,  18.4364 
Rust, selectionsort_25000.sh, 25000, 229.405884 , 121.935364 , 0.108948 , 0.000000 ,  9.2968 
Rust, selectionsort_50000.sh, 50000, 480.322266 , 255.614075 , 0.193787 , 0.000000 ,  19.417 
Swift, bubblesort_25000.sh, 25000, 341.979370 , 182.770935 , 0.135681 , 0.000000 ,  13.8985 
Swift, bubblesort_50000.sh, 50000, 1233.558105 , 660.188110 , 0.414307 , 0.000000 ,  50.0528 
Swift, cyclesort_25000.sh, 25000, 337.519104 , 180.430481 , 0.137878 , 0.000000 ,  13.7126 
Swift, cyclesort_50000.sh, 50000, 1220.130188 , 654.087219 , 0.421021 , 0.000000 ,  49.4503 
Swift, heapsort_25000.sh, 25000, 369.505493 , 197.250610 , 0.140381 , 0.000000 ,  15.0412 
Swift, heapsort_50000.sh, 50000, 1259.385620 , 673.948059 , 0.432495 , 0.000000 ,  51.1495 
Swift, mergesort_25000.sh, 25000, 362.756348 , 193.861206 , 0.138733 , 0.000000 ,  14.7455 
Swift, mergesort_50000.sh, 50000, 1217.870422 , 652.947815 , 0.371033 , 0.000000 ,  49.3785 
Swift, oddevensort_25000.sh, 25000, 336.821045 , 180.139343 , 0.122253 , 0.000000 ,  13.6836 
Swift, oddevensort_50000.sh, 50000, 6.385071 , 3.335449 , 0.017090 , 0.000000 ,  0.262594 
Swift, quicksort_25000.sh, 25000, 357.890686 , 191.000427 , 0.131897 , 0.000000 ,  14.5594 
Swift, quicksort_50000.sh, 50000, 1227.154907 , 657.266541 , 0.371643 , 0.000000 ,  49.8043 
Swift, selectionsort_25000.sh, 25000, 349.333984 , 186.548950 , 0.128784 , 0.000000 ,  14.2153 
Swift, selectionsort_50000.sh, 50000, 1173.797302 , 630.091553 , 0.358765 , 0.000000 ,  47.5397 
C, bubblesort_50000.sh, 50000, 2.947510 , 1.551147 , 0.021973 , 0.000000 ,  0.119818 
C, cyclesort_50000.sh, 50000, 3.722778 , 1.822815 , 0.013977 , 0.000000 ,  0.165695 
C, heapsort_50000.sh, 50000, 3.114685 , 1.579407 , 0.014832 , 0.000000 ,  0.131586 
C, mergesort_50000.sh, 50000, 3.724304 , 1.970947 , 0.010681 , 0.000000 ,  0.153585 
C, oddevensort_50000.sh, 50000, 3.484314 , 1.784973 , 0.010010 , 0.000000 ,  0.146838 
C, quicksort_50000.sh, 50000, 3.441895 , 1.808167 , 0.029968 , 0.000000 ,  0.138636 
C, selectionsort_50000.sh, 50000, 3.439453 , 1.791626 , 0.010803 , 0.000000 ,  0.141513 
C++, bubblesort_50000.sh, 50000, 12.104065 , 6.428406 , 0.014648 , 0.000000 ,  0.494916 
C++, cyclesort_50000.sh, 50000, 12.758850 , 6.679016 , 0.032837 , 0.000000 ,  0.525446 
C++, heapsort_50000.sh, 50000, 12.494263 , 6.639160 , 0.013672 , 0.000000 ,  0.511077 
C++, mergesort_50000.sh, 50000, 13.276062 , 7.003601 , 0.028320 , 0.000000 ,  0.542943 
C++, oddevensort_50000.sh, 50000, 12.474548 , 6.690674 , 0.014771 , 0.000000 ,  0.503944 
C++, quicksort_50000.sh, 50000, 12.840210 , 6.824463 , 0.032715 , 0.000000 ,  0.520848 
C++, selectionsort_50000.sh, 50000, 12.385925 , 6.653442 , 0.014587 , 0.000000 ,  0.500467 
C#, bubblesort_50000.sh, 50000, 13.494873 , 7.178162 , 0.022217 , 0.000000 ,  0.549941 
C#, cyclesort_50000.sh, 50000, 13.610535 , 7.283386 , 0.018555 , 0.000000 ,  0.552181 
C#, heapsort_50000.sh, 50000, 13.449890 , 7.070740 , 0.012512 , 0.000000 ,  0.556954 
C#, mergesort_50000.sh, 50000, 13.840027 , 7.455200 , 0.012573 , 0.000000 ,  0.556805 
C#, oddevensort_50000.sh, 50000, 13.509644 , 7.172546 , 0.008667 , 0.000000 ,  0.554058 
C#, quicksort_50000.sh, 50000, 13.549561 , 7.261597 , 0.024902 , 0.000000 ,  0.546698 
C#, selectionsort_50000.sh, 50000, 13.576721 , 7.213074 , 0.012207 , 0.000000 ,  0.554455 
Go, bubblesort_50000.sh, 50000, 3.329895 , 1.659912 , 0.013977 , 0.000000 ,  0.141666 
Go, cyclesort_50000.sh, 50000, 3.649963 , 1.796631 , 0.012695 , 0.000000 ,  0.157171 
Go, heapsort_50000.sh, 50000, 3.082947 , 1.370239 , 0.009094 , 0.000000 ,  0.147125 
Go, mergesort_50000.sh, 50000, 3.445251 , 1.718811 , 0.008667 , 0.000000 ,  0.147558 
Go, oddevensort_50000.sh, 50000, 3.502808 , 1.699036 , 0.008484 , 0.000000 ,  0.154644 
Go, quicksort_50000.sh, 50000, 2.949646 , 1.323303 , 0.008179 , 0.000000 ,  0.137807 
Go, selectionsort_50000.sh, 50000, 3.596436 , 1.730530 , 0.009277 , 0.000000 ,  0.159951 
Haskell, bubblesort_50000.sh, 50000, 610.310303 , 321.776550 , 0.244019 , 0.000000 ,  24.7167 
Haskell, cyclesort_50000.sh, 50000, 1178.262817 , 621.455383 , 0.440735 , 0.000000 ,  47.6285 
Haskell, heapsort_50000.sh, 50000, 606.677612 , 319.960876 , 0.227478 , 0.000000 ,  24.5475 
Haskell, mergesort_50000.sh, 50000, 624.751831 , 329.229370 , 0.233215 , 0.000000 ,  25.2886 
Haskell, oddevensort_50000.sh, 50000, 574.752502 , 302.931091 , 0.218323 , 0.000000 ,  23.2488 
Haskell, quicksort_50000.sh, 50000, 605.839294 , 319.338989 , 0.220032 , 0.000000 ,  24.516 
Haskell, selectionsort_50000.sh, 50000, 633.367188 , 332.996399 , 0.237854 , 0.000000 ,  25.6794 
Rust, bubblesort_50000.sh, 50000, 470.698792 , 250.071960 , 0.211914 , 0.000000 ,  19.048 
Rust, cyclesort_50000.sh, 50000, 490.896667 , 261.412720 , 0.189514 , 0.000000 ,  19.8399 
Rust, heapsort_50000.sh, 50000, 465.376038 , 247.963989 , 0.193298 , 0.000000 ,  18.7881 
Rust, mergesort_50000.sh, 50000, 480.039124 , 255.412292 , 0.188477 , 0.000000 ,  19.3978 
Rust, oddevensort_50000.sh, 50000, 489.763367 , 259.903931 , 0.201660 , 0.000000 ,  19.8518 
Rust, quicksort_50000.sh, 50000, 461.368713 , 245.164246 , 0.196350 , 0.000000 ,  18.6778 
Rust, selectionsort_50000.sh, 50000, 466.103149 , 248.118530 , 0.173889 , 0.000000 ,  18.8367 
Swift, bubblesort_50000.sh, 50000, 1220.297668 , 652.604065 , 0.394409 , 0.000000 ,  49.6059 
Swift, cyclesort_50000.sh, 50000, 1216.641968 , 651.771240 , 0.422791 , 0.000000 ,  49.3369 
Swift, heapsort_50000.sh, 50000, 1298.956177 , 695.573853 , 0.452454 , 0.000000 ,  52.6484 
Swift, mergesort_50000.sh, 50000, 1217.807312 , 652.143738 , 0.374390 , 0.000000 ,  49.4307 
Swift, oddevensort_50000.sh, 50000, 6.322815 , 3.206116 , 0.008057 , 0.000000 ,  0.271183 
Swift, quicksort_50000.sh, 50000, 1266.685608 , 677.960876 , 0.415466 , 0.000000 ,  51.4335 
Swift, selectionsort_50000.sh, 50000, 1174.119568 , 628.968567 , 0.377869 , 0.000000 ,  47.6165 
C, bubblesort_50000.sh, 50000, 3.640198 , 1.666260 , 0.018860 , 0.000000 ,  0.169305 
C, cyclesort_50000.sh, 50000, 3.586182 , 1.816528 , 0.017883 , 0.000000 ,  0.151604 
C, heapsort_50000.sh, 50000, 3.097229 , 1.620483 , 0.011841 , 0.000000 ,  0.126458 
C, mergesort_50000.sh, 50000, 3.942566 , 2.051514 , 0.011475 , 0.000000 ,  0.164291 
C, oddevensort_50000.sh, 50000, 3.066956 , 1.596130 , 0.017334 , 0.000000 ,  0.125577 
C, quicksort_50000.sh, 50000, 3.825623 , 2.018677 , 0.016174 , 0.000000 ,  0.156335 
C, selectionsort_50000.sh, 50000, 3.503601 , 1.830261 , 0.010803 , 0.000000 ,  0.145285 
C++, bubblesort_50000.sh, 50000, 12.384766 , 6.620239 , 0.017639 , 0.000000 ,  0.499091 
C++, cyclesort_50000.sh, 50000, 12.537292 , 6.661865 , 0.031250 , 0.000000 ,  0.508822 
C++, heapsort_50000.sh, 50000, 12.628906 , 6.745300 , 0.015503 , 0.000000 ,  0.510685 
C++, mergesort_50000.sh, 50000, 13.557861 , 7.239258 , 0.013245 , 0.000000 ,  0.549281 
C++, oddevensort_50000.sh, 50000, 12.144226 , 6.464417 , 0.028870 , 0.000000 ,  0.491559 
C++, quicksort_50000.sh, 50000, 12.187073 , 6.480652 , 0.014954 , 0.000000 ,  0.497006 
C++, selectionsort_50000.sh, 50000, 12.246887 , 6.532532 , 0.021240 , 0.000000 ,  0.495988 
C#, bubblesort_50000.sh, 50000, 13.349792 , 7.127075 , 0.008606 , 0.000000 ,  0.543054 
C#, cyclesort_50000.sh, 50000, 13.547852 , 7.266785 , 0.005371 , 0.000000 ,  0.549198 
C#, heapsort_50000.sh, 50000, 13.512390 , 7.127380 , 0.015259 , 0.000000 ,  0.554706 
C#, mergesort_50000.sh, 50000, 13.919067 , 7.448975 , 0.023254 , 0.000000 ,  0.561619 
C#, oddevensort_50000.sh, 50000, 13.470154 , 7.211670 , 0.014160 , 0.000000 ,  0.546582 
C#, quicksort_50000.sh, 50000, 13.604919 , 7.162964 , 0.026062 , 0.000000 ,  0.560225 
C#, selectionsort_50000.sh, 50000, 14.119873 , 7.524719 , 0.027344 , 0.000000 ,  0.573107 
Go, bubblesort_50000.sh, 50000, 3.071350 , 1.322998 , 0.009460 , 0.000000 ,  0.150481 
Go, cyclesort_50000.sh, 50000, 3.569641 , 1.767456 , 0.010010 , 0.000000 ,  0.153832 
Go, heapsort_50000.sh, 50000, 3.807556 , 2.022644 , 0.009705 , 0.000000 ,  0.152719 
Go, mergesort_50000.sh, 50000, 3.168640 , 1.582336 , 0.012329 , 0.000000 ,  0.13461 
Go, oddevensort_50000.sh, 50000, 3.688721 , 1.926697 , 0.008789 , 0.000000 ,  0.151025 
Go, quicksort_50000.sh, 50000, 3.232910 , 1.510254 , 0.023804 , 0.000000 ,  0.14628 
Go, selectionsort_50000.sh, 50000, 3.358398 , 1.725830 , 0.009399 , 0.000000 ,  0.138677 
Haskell, bubblesort_50000.sh, 50000, 600.812927 , 316.740295 , 0.235474 , 0.000000 ,  24.3006 
Haskell, cyclesort_50000.sh, 50000, 1176.412903 , 620.111572 , 0.431213 , 0.000000 ,  47.5469 
Haskell, heapsort_50000.sh, 50000, 606.785034 , 319.945190 , 0.225525 , 0.000000 ,  24.5358 
Haskell, mergesort_50000.sh, 50000, 613.123474 , 322.876526 , 0.230713 , 0.000000 ,  24.8266 
Haskell, oddevensort_50000.sh, 50000, 573.379883 , 302.216492 , 0.219238 , 0.000000 ,  23.2072 
Haskell, quicksort_50000.sh, 50000, 614.206909 , 323.620544 , 0.224365 , 0.000000 ,  24.8773 
Haskell, selectionsort_50000.sh, 50000, 640.510803 , 337.301025 , 0.248108 , 0.000000 ,  25.9369 
Rust, bubblesort_50000.sh, 50000, 472.815247 , 251.612488 , 0.168945 , 0.000000 ,  19.1193 
Rust, cyclesort_50000.sh, 50000, 484.101868 , 257.568909 , 0.197021 , 0.000000 ,  19.5825 
Rust, heapsort_50000.sh, 50000, 478.711975 , 254.838684 , 0.171021 , 0.000000 ,  19.3711 
Rust, mergesort_50000.sh, 50000, 468.077820 , 248.403320 , 0.179749 , 0.000000 ,  18.975 
Rust, oddevensort_50000.sh, 50000, 477.299011 , 252.527832 , 0.191650 , 0.000000 ,  19.4092 
Rust, quicksort_50000.sh, 50000, 458.715698 , 244.199463 , 0.181030 , 0.000000 ,  18.5465 
Rust, selectionsort_50000.sh, 50000, 470.713989 , 250.122864 , 0.164612 , 0.000000 ,  19.0751 
Swift, bubblesort_50000.sh, 50000, 1184.890381 , 635.636963 , 0.410095 , 0.000000 ,  48.0016 
Swift, cyclesort_50000.sh, 50000, 1190.667419 , 638.851807 , 0.379333 , 0.000000 ,  48.2573 
Swift, heapsort_50000.sh, 50000, 1286.622253 , 688.799377 , 0.435364 , 0.000000 ,  52.2138 
Swift, mergesort_50000.sh, 50000, 1216.681763 , 650.775635 , 0.366577 , 0.000000 ,  49.3332 
Swift, oddevensort_50000.sh, 50000, 6.464539 , 3.342529 , 0.024292 , 0.000000 ,  0.266727 
Swift, quicksort_50000.sh, 50000, 1225.953064 , 651.240662 , 0.405029 , 0.000000 ,  49.6711 
Swift, selectionsort_50000.sh, 50000, 1206.692749 , 641.193481 , 0.276733 , 0.000000 ,  48.8875 
C, bubblesort_50000.sh, 50000, 3.151306 , 1.571594 , 0.044739 , 0.000000 ,  0.13348 
C, cyclesort_50000.sh, 50000, 3.834839 , 2.014526 , 0.028809 , 0.000000 ,  0.155299 
C, heapsort_50000.sh, 50000, 3.930786 , 1.793701 , 0.105164 , 0.000000 ,  0.174164 
C, mergesort_50000.sh, 50000, 3.554565 , 1.767395 , 0.030701 , 0.000000 ,  0.15038 
C, oddevensort_50000.sh, 50000, 3.603577 , 1.867004 , 0.035583 , 0.000000 ,  0.147518 
C, quicksort_50000.sh, 50000, 3.933472 , 2.034424 , 0.024353 , 0.000000 ,  0.161853 
C, selectionsort_50000.sh, 50000, 3.163452 , 1.582031 , 0.039734 , 0.000000 ,  0.131598 
C++, bubblesort_50000.sh, 50000, 12.809998 , 6.760437 , 0.046631 , 0.000000 ,  0.517943 
C++, cyclesort_50000.sh, 50000, 13.161865 , 6.994690 , 0.034546 , 0.000000 ,  0.529267 
C++, heapsort_50000.sh, 50000, 12.854004 , 6.794373 , 0.038513 , 0.000000 ,  0.520053 
C++, mergesort_50000.sh, 50000, 13.630066 , 7.217163 , 0.059631 , 0.000000 ,  0.549171 
C++, oddevensort_50000.sh, 50000, 12.797485 , 6.462585 , 0.174316 , 0.000000 ,  0.530174 
C++, quicksort_50000.sh, 50000, 13.148499 , 6.746582 , 0.175232 , 0.000000 ,  0.53849 
C++, selectionsort_50000.sh, 50000, 12.502441 , 6.538025 , 0.101379 , 0.000000 ,  0.506282 
C#, bubblesort_50000.sh, 50000, 13.900818 , 7.363281 , 0.022339 , 0.000000 ,  0.562739 
C#, cyclesort_50000.sh, 50000, 13.863953 , 7.139832 , 0.121399 , 0.000000 ,  0.571192 
C#, heapsort_50000.sh, 50000, 13.672424 , 7.184753 , 0.030151 , 0.000000 ,  0.558208 
C#, mergesort_50000.sh, 50000, 14.092041 , 7.485107 , 0.031555 , 0.000000 ,  0.566641 
C#, oddevensort_50000.sh, 50000, 13.594421 , 7.217041 , 0.031128 , 0.000000 ,  0.549288 
C#, quicksort_50000.sh, 50000, 13.713013 , 7.259094 , 0.025208 , 0.000000 ,  0.554463 
C#, selectionsort_50000.sh, 50000, 13.858643 , 7.286682 , 0.055237 , 0.000000 ,  0.561213 
Go, bubblesort_50000.sh, 50000, 3.674072 , 1.821167 , 0.003723 , 0.000000 ,  0.158101 
Go, cyclesort_50000.sh, 50000, 3.670532 , 1.643860 , 0.014465 , 0.000000 ,  0.173681 
Go, heapsort_50000.sh, 50000, 3.162476 , 1.490234 , 0.020203 , 0.000000 ,  0.14049 
Go, mergesort_50000.sh, 50000, 3.915222 , 1.941528 , 0.055664 , 0.000000 ,  0.16466 
Go, oddevensort_50000.sh, 50000, 3.752014 , 1.700989 , 0.038208 , 0.000000 ,  0.171775 
Go, quicksort_50000.sh, 50000, 3.313354 , 1.423645 , 0.097778 , 0.000000 ,  0.152112 
Go, selectionsort_50000.sh, 50000, 3.863098 , 1.834290 , 0.046326 , 0.000000 ,  0.168907 
Haskell, bubblesort_50000.sh, 50000, 612.612305 , 319.920288 , 0.196838 , 0.000000 ,  24.8004 
Haskell, cyclesort_50000.sh, 50000, 1172.978210 , 611.852478 , 0.333862 , 0.000000 ,  47.4917 
Haskell, heapsort_50000.sh, 50000, 622.438416 , 325.159546 , 0.276123 , 0.000000 ,  25.164 
Haskell, mergesort_50000.sh, 50000, 615.041626 , 319.476746 , 0.200256 , 0.000000 ,  25.0193 
Haskell, oddevensort_50000.sh, 50000, 585.137695 , 305.802734 , 0.308044 , 0.000000 ,  23.6507 
Haskell, quicksort_50000.sh, 50000, 604.457642 , 316.068726 , 0.166077 , 0.000000 ,  24.4359 
Haskell, selectionsort_50000.sh, 50000, 644.313721 , 336.602600 , 0.316345 , 0.000000 ,  26.0422 
Rust, bubblesort_50000.sh, 50000, 478.113586 , 251.955566 , 0.169922 , 0.000000 ,  19.3498 
Rust, cyclesort_50000.sh, 50000, 476.195312 , 250.559570 , 0.166382 , 0.000000 ,  19.3139 
Rust, heapsort_50000.sh, 50000, 476.842102 , 251.447510 , 0.174194 , 0.000000 ,  19.2878 
Rust, mergesort_50000.sh, 50000, 466.141968 , 246.234497 , 0.147827 , 0.000000 ,  18.8087 
Rust, oddevensort_50000.sh, 50000, 481.438965 , 254.151672 , 0.164795 , 0.000000 ,  19.438 
Rust, quicksort_50000.sh, 50000, 458.404053 , 241.109558 , 0.246826 , 0.000000 ,  18.5893 
Rust, selectionsort_50000.sh, 50000, 491.397461 , 258.700989 , 0.257629 , 0.000000 ,  19.8878 
Swift, bubblesort_50000.sh, 50000, 1176.767578 , 624.639954 , 0.247986 , 0.000000 ,  47.71 
Swift, cyclesort_50000.sh, 50000, 1169.175232 , 621.038818 , 0.298645 , 0.000000 ,  47.3648 
Swift, heapsort_50000.sh, 50000, 1247.346680 , 662.987793 , 0.295837 , 0.000000 ,  50.5275 
Swift, mergesort_50000.sh, 50000, 1231.257263 , 659.507019 , 0.405029 , 0.000000 ,  49.941 
Swift, oddevensort_50000.sh, 50000, 6.273560 , 3.237549 , 0.011230 , 0.000000 ,  0.264076 
Swift, quicksort_50000.sh, 50000, 1234.136047 , 661.408386 , 0.393311 , 0.000000 ,  50.0063 
Swift, selectionsort_50000.sh, 50000, 1218.721252 , 652.763855 , 0.408997 , 0.000000 ,  49.4269 
C, bubblesort_50000.sh, 50000, 2.913391 , 1.487549 , 0.015015 , 0.000000 ,  0.122875 
C, cyclesort_50000.sh, 50000, 3.676819 , 1.954468 , 0.016541 , 0.000000 ,  0.149361 
C, heapsort_50000.sh, 50000, 3.568848 , 1.810852 , 0.014893 , 0.000000 ,  0.151937 
C, mergesort_50000.sh, 50000, 3.360229 , 1.771729 , 0.014587 , 0.000000 ,  0.138501 
C, oddevensort_50000.sh, 50000, 3.515381 , 1.787292 , 0.013367 , 0.000000 ,  0.150675 
C, quicksort_50000.sh, 50000, 3.622070 , 1.897339 , 0.013672 , 0.000000 ,  0.147048 
C, selectionsort_50000.sh, 50000, 2.995422 , 1.492188 , 0.019592 , 0.000000 ,  0.128646 
C++, bubblesort_50000.sh, 50000, 12.441711 , 6.617737 , 0.015503 , 0.000000 ,  0.506758 
C++, cyclesort_50000.sh, 50000, 12.895630 , 6.843018 , 0.023132 , 0.000000 ,  0.526309 
C++, heapsort_50000.sh, 50000, 12.825378 , 6.855347 , 0.016663 , 0.000000 ,  0.52019 
C++, mergesort_50000.sh, 50000, 13.781494 , 7.334473 , 0.035095 , 0.000000 ,  0.55772 
C++, oddevensort_50000.sh, 50000, 12.490417 , 6.680542 , 0.012268 , 0.000000 ,  0.507366 
C++, quicksort_50000.sh, 50000, 12.254639 , 6.536621 , 0.025269 , 0.000000 ,  0.49588 
C++, selectionsort_50000.sh, 50000, 12.326050 , 6.529785 , 0.016907 , 0.000000 ,  0.504848 
C#, bubblesort_50000.sh, 50000, 13.402954 , 7.141052 , 0.012878 , 0.000000 ,  0.545996 
C#, cyclesort_50000.sh, 50000, 13.917297 , 7.477722 , 0.012207 , 0.000000 ,  0.560694 
C#, heapsort_50000.sh, 50000, 13.529114 , 7.189880 , 0.014038 , 0.000000 ,  0.552431 
C#, mergesort_50000.sh, 50000, 13.373108 , 7.121094 , 0.017639 , 0.000000 ,  0.54495 
C#, oddevensort_50000.sh, 50000, 13.551147 , 7.314270 , 0.011108 , 0.000000 ,  0.54341 
C#, quicksort_50000.sh, 50000, 14.073303 , 7.523254 , 0.013184 , 0.000000 ,  0.570579 
C#, selectionsort_50000.sh, 50000, 13.524658 , 7.293213 , 0.010132 , 0.000000 ,  0.543827 
Go, bubblesort_50000.sh, 50000, 3.619812 , 1.872864 , 0.004150 , 0.000000 ,  0.148113 
Go, cyclesort_50000.sh, 50000, 3.574463 , 1.632996 , 0.013977 , 0.000000 ,  0.166049 
Go, heapsort_50000.sh, 50000, 3.130188 , 1.539490 , 0.010193 , 0.000000 ,  0.135459 
Go, mergesort_50000.sh, 50000, 3.652893 , 1.811584 , 0.012878 , 0.000000 ,  0.156768 
Go, oddevensort_50000.sh, 50000, 3.197998 , 1.497925 , 0.009949 , 0.000000 ,  0.145788 
Go, quicksort_50000.sh, 50000, 3.388184 , 1.770569 , 0.008850 , 0.000000 ,  0.137762 
Go, selectionsort_50000.sh, 50000, 3.502441 , 1.731812 , 0.009827 , 0.000000 ,  0.151841 
Haskell, bubblesort_50000.sh, 50000, 600.098145 , 316.450195 , 0.235901 , 0.000000 ,  24.2764 
Haskell, cyclesort_50000.sh, 50000, 1184.085449 , 623.899902 , 0.426453 , 0.000000 ,  47.9128 
Haskell, heapsort_50000.sh, 50000, 608.824829 , 321.114746 , 0.210449 , 0.000000 ,  24.6389 
Haskell, mergesort_50000.sh, 50000, 602.841797 , 318.005188 , 0.211914 , 0.000000 ,  24.3765 
Haskell, oddevensort_50000.sh, 50000, 560.285522 , 295.105103 , 0.214233 , 0.000000 ,  22.6929 
Haskell, quicksort_50000.sh, 50000, 592.583008 , 312.219055 , 0.230347 , 0.000000 ,  23.9894 
Haskell, selectionsort_50000.sh, 50000, 641.684570 , 338.179810 , 0.248535 , 0.000000 ,  25.9478 
Rust, bubblesort_50000.sh, 50000, 473.228455 , 252.246460 , 0.192261 , 0.000000 ,  19.0972 
Rust, cyclesort_50000.sh, 50000, 488.801025 , 259.907349 , 0.196228 , 0.000000 ,  19.8 
Rust, heapsort_50000.sh, 50000, 458.753723 , 244.000732 , 0.192444 , 0.000000 ,  18.5571 
Rust, mergesort_50000.sh, 50000, 478.326904 , 254.179993 , 0.201843 , 0.000000 ,  19.365 
Rust, oddevensort_50000.sh, 50000, 484.811584 , 258.209961 , 0.184753 , 0.000000 ,  19.5897 
Rust, quicksort_50000.sh, 50000, 452.461182 , 241.039001 , 0.188232 , 0.000000 ,  18.2656 
Rust, selectionsort_50000.sh, 50000, 478.612671 , 254.465637 , 0.204285 , 0.000000 ,  19.3634 
Swift, bubblesort_50000.sh, 50000, 1215.185242 , 651.335754 , 0.396484 , 0.000000 ,  49.2599 
Swift, cyclesort_50000.sh, 50000, 1185.675049 , 635.421936 , 0.369263 , 0.000000 ,  48.0641 
Swift, heapsort_50000.sh, 50000, 1215.478699 , 651.473755 , 0.369019 , 0.000000 ,  49.2758 
Swift, mergesort_50000.sh, 50000, 1257.153992 , 673.536316 , 0.410522 , 0.000000 ,  50.983 
Swift, oddevensort_50000.sh, 50000, 6.272156 , 3.281921 , 0.014587 , 0.000000 ,  0.258477 
Swift, quicksort_50000.sh, 50000, 1234.266113 , 660.866089 , 0.409729 , 0.000000 ,  50.089 
Swift, selectionsort_50000.sh, 50000, 1169.363770 , 626.157043 , 0.381836 , 0.000000 ,  47.4425 
C, bubblesort_50000.sh, 50000, 2.913391 , 1.487549 , 0.015015 , 0.000000 ,  0.122875 
C, bubblesort_100000.sh, 100000, 4.966492 , 2.584106 , 0.018433 , 0.000000 ,  0.204202 
C, cyclesort_50000.sh, 50000, 3.676819 , 1.954468 , 0.016541 , 0.000000 ,  0.149361 
C, cyclesort_100000.sh, 100000, 5.253906 , 2.780334 , 0.020752 , 0.000000 ,  0.214454 
C, heapsort_50000.sh, 50000, 3.568848 , 1.810852 , 0.014893 , 0.000000 ,  0.151937 
C, heapsort_100000.sh, 100000, 4.907104 , 2.606323 , 0.011780 , 0.000000 ,  0.200055 
C, mergesort_50000.sh, 50000, 3.360229 , 1.771729 , 0.014587 , 0.000000 ,  0.138501 
C, mergesort_100000.sh, 100000, 5.575623 , 2.965271 , 0.014343 , 0.000000 ,  0.225506 
C, oddevensort_50000.sh, 50000, 3.515381 , 1.787292 , 0.013367 , 0.000000 ,  0.150675 
C, oddevensort_100000.sh, 100000, 5.214661 , 2.745850 , 0.015442 , 0.000000 ,  0.213937 
C, quicksort_50000.sh, 50000, 3.622070 , 1.897339 , 0.013672 , 0.000000 ,  0.147048 
C, quicksort_100000.sh, 100000, 5.526306 , 2.911194 , 0.016235 , 0.000000 ,  0.227122 
C, selectionsort_50000.sh, 50000, 2.995422 , 1.492188 , 0.019592 , 0.000000 ,  0.128646 
C, selectionsort_100000.sh, 100000, 5.189331 , 2.758667 , 0.023865 , 0.000000 ,  0.211915 
C++, bubblesort_50000.sh, 50000, 12.441711 , 6.617737 , 0.015503 , 0.000000 ,  0.506758 
C++, bubblesort_100000.sh, 100000, 15.548096 , 8.188538 , 0.023804 , 0.000000 ,  0.639165 
C++, cyclesort_50000.sh, 50000, 12.895630 , 6.843018 , 0.023132 , 0.000000 ,  0.526309 
C++, cyclesort_100000.sh, 100000, 15.134460 , 8.015564 , 0.017822 , 0.000000 ,  0.619988 
C++, heapsort_50000.sh, 50000, 12.825378 , 6.855347 , 0.016663 , 0.000000 ,  0.52019 
C++, heapsort_100000.sh, 100000, 15.409119 , 8.165649 , 0.023071 , 0.000000 ,  0.627147 
C++, mergesort_50000.sh, 50000, 13.781494 , 7.334473 , 0.035095 , 0.000000 ,  0.55772 
C++, mergesort_100000.sh, 100000, 16.348206 , 8.718506 , 0.021545 , 0.000000 ,  0.66275 
C++, oddevensort_50000.sh, 50000, 12.490417 , 6.680542 , 0.012268 , 0.000000 ,  0.507366 
C++, oddevensort_100000.sh, 100000, 14.702454 , 7.752380 , 0.016785 , 0.000000 ,  0.603437 
C++, quicksort_50000.sh, 50000, 12.254639 , 6.536621 , 0.025269 , 0.000000 ,  0.49588 
C++, quicksort_100000.sh, 100000, 15.018433 , 8.004517 , 0.010864 , 0.000000 ,  0.610883 
C++, selectionsort_50000.sh, 50000, 12.326050 , 6.529785 , 0.016907 , 0.000000 ,  0.504848 
C++, selectionsort_100000.sh, 100000, 15.242981 , 8.078979 , 0.020508 , 0.000000 ,  0.621317 
C#, bubblesort_50000.sh, 50000, 13.402954 , 7.141052 , 0.012878 , 0.000000 ,  0.545996 
C#, bubblesort_100000.sh, 100000, 14.669983 , 7.858765 , 0.020508 , 0.000000 ,  0.594677 
C#, cyclesort_50000.sh, 50000, 13.917297 , 7.477722 , 0.012207 , 0.000000 ,  0.560694 
C#, cyclesort_100000.sh, 100000, 15.355347 , 8.149414 , 0.016541 , 0.000000 ,  0.625599 
C#, heapsort_50000.sh, 50000, 13.529114 , 7.189880 , 0.014038 , 0.000000 ,  0.552431 
C#, heapsort_100000.sh, 100000, 14.764648 , 7.843445 , 0.012512 , 0.000000 ,  0.602395 
C#, mergesort_50000.sh, 50000, 13.373108 , 7.121094 , 0.017639 , 0.000000 ,  0.54495 
C#, mergesort_100000.sh, 100000, 15.317505 , 8.142090 , 0.022278 , 0.000000 ,  0.623807 
C#, oddevensort_50000.sh, 50000, 13.551147 , 7.314270 , 0.011108 , 0.000000 ,  0.54341 
C#, oddevensort_100000.sh, 100000, 14.854248 , 7.988953 , 0.009399 , 0.000000 ,  0.600821 
C#, quicksort_50000.sh, 50000, 14.073303 , 7.523254 , 0.013184 , 0.000000 ,  0.570579 
C#, quicksort_100000.sh, 100000, 15.048828 , 8.088989 , 0.011353 , 0.000000 ,  0.60665 
C#, selectionsort_50000.sh, 50000, 13.524658 , 7.293213 , 0.010132 , 0.000000 ,  0.543827 
C#, selectionsort_100000.sh, 100000, 15.206848 , 8.124268 , 0.005737 , 0.000000 ,  0.617866 
Go, bubblesort_50000.sh, 50000, 3.619812 , 1.872864 , 0.004150 , 0.000000 ,  0.148113 
Go, bubblesort_100000.sh, 100000, 3.572205 , 1.679871 , 0.012329 , 0.000000 ,  0.16237 
Go, cyclesort_50000.sh, 50000, 3.574463 , 1.632996 , 0.013977 , 0.000000 ,  0.166049 
Go, cyclesort_100000.sh, 100000, 3.127808 , 1.416748 , 0.009155 , 0.000000 ,  0.14726 
Go, heapsort_50000.sh, 50000, 3.130188 , 1.539490 , 0.010193 , 0.000000 ,  0.135459 
Go, heapsort_100000.sh, 100000, 3.677490 , 1.841431 , 0.012268 , 0.000000 ,  0.157419 
Go, mergesort_50000.sh, 50000, 3.652893 , 1.811584 , 0.012878 , 0.000000 ,  0.156768 
Go, mergesort_100000.sh, 100000, 3.520325 , 1.581787 , 0.011841 , 0.000000 ,  0.165185 
Go, oddevensort_50000.sh, 50000, 3.197998 , 1.497925 , 0.009949 , 0.000000 ,  0.145788 
Go, oddevensort_100000.sh, 100000, 3.223083 , 1.380371 , 0.009827 , 0.000000 ,  0.15604 
Go, quicksort_50000.sh, 50000, 3.388184 , 1.770569 , 0.008850 , 0.000000 ,  0.137762 
Go, quicksort_100000.sh, 100000, 3.702148 , 1.939148 , 0.009460 , 0.000000 ,  0.150921 
Go, selectionsort_50000.sh, 50000, 3.502441 , 1.731812 , 0.009827 , 0.000000 ,  0.151841 
Go, selectionsort_100000.sh, 100000, 3.334839 , 1.560547 , 0.013123 , 0.000000 ,  0.152097 
Haskell, bubblesort_50000.sh, 50000, 600.098145 , 316.450195 , 0.235901 , 0.000000 ,  24.2764 
Haskell, bubblesort_100000.sh, 100000, 1199.562439 , 632.510620 , 0.432373 , 0.000000 ,  48.5005 
Haskell, cyclesort_50000.sh, 50000, 1184.085449 , 623.899902 , 0.426453 , 0.000000 ,  47.9128 
Haskell, cyclesort_100000.sh, 100000, 2438.149658 , 1284.701172 , 0.834717 , 0.000000 ,  98.653 
Haskell, heapsort_50000.sh, 50000, 608.824829 , 321.114746 , 0.210449 , 0.000000 ,  24.6389 
Haskell, heapsort_100000.sh, 100000, 1226.577026 , 646.155457 , 0.428650 , 0.000000 ,  49.6511 
Haskell, mergesort_50000.sh, 50000, 602.841797 , 318.005188 , 0.211914 , 0.000000 ,  24.3765 
Haskell, mergesort_100000.sh, 100000, 1235.579468 , 651.123779 , 0.470154 , 0.000000 ,  49.9756 
Haskell, oddevensort_50000.sh, 50000, 560.285522 , 295.105103 , 0.214233 , 0.000000 ,  22.6929 
Haskell, oddevensort_100000.sh, 100000, 1136.889893 , 599.296509 , 0.406250 , 0.000000 ,  45.9593 
Haskell, quicksort_50000.sh, 50000, 592.583008 , 312.219055 , 0.230347 , 0.000000 ,  23.9894 
Haskell, quicksort_100000.sh, 100000, 1207.231018 , 636.812256 , 0.419739 , 0.000000 ,  48.8082 
Haskell, selectionsort_50000.sh, 50000, 641.684570 , 338.179810 , 0.248535 , 0.000000 ,  25.9478 
Haskell, selectionsort_100000.sh, 100000, 1296.679993 , 683.073120 , 0.452393 , 0.000000 ,  52.4612 
Rust, bubblesort_50000.sh, 50000, 473.228455 , 252.246460 , 0.192261 , 0.000000 ,  19.0972 
Rust, bubblesort_100000.sh, 100000, 949.720581 , 504.989929 , 0.361938 , 0.000000 ,  38.4068 
Rust, cyclesort_50000.sh, 50000, 488.801025 , 259.907349 , 0.196228 , 0.000000 ,  19.8 
Rust, cyclesort_100000.sh, 100000, 949.886047 , 504.560730 , 0.370667 , 0.000000 ,  38.4598 
Rust, heapsort_50000.sh, 50000, 458.753723 , 244.000732 , 0.192444 , 0.000000 ,  18.5571 
Rust, heapsort_100000.sh, 100000, 932.766418 , 495.193970 , 0.355225 , 0.000000 ,  37.8074 
Rust, mergesort_50000.sh, 50000, 478.326904 , 254.179993 , 0.201843 , 0.000000 ,  19.365 
Rust, mergesort_100000.sh, 100000, 904.304016 , 479.919739 , 0.361450 , 0.000000 ,  36.6466 
Rust, oddevensort_50000.sh, 50000, 484.811584 , 258.209961 , 0.184753 , 0.000000 ,  19.5897 
Rust, oddevensort_100000.sh, 100000, 934.769470 , 497.051453 , 0.377441 , 0.000000 ,  37.7865 
Rust, quicksort_50000.sh, 50000, 452.461182 , 241.039001 , 0.188232 , 0.000000 ,  18.2656 
Rust, quicksort_100000.sh, 100000, 909.583435 , 483.752014 , 0.351196 , 0.000000 ,  36.7897 
Rust, selectionsort_50000.sh, 50000, 478.612671 , 254.465637 , 0.204285 , 0.000000 ,  19.3634 
Rust, selectionsort_100000.sh, 100000, 931.290222 , 495.040527 , 0.366333 , 0.000000 ,  37.6635 
Swift, bubblesort_50000.sh, 50000, 1215.185242 , 651.335754 , 0.396484 , 0.000000 ,  49.2599 
Swift, bubblesort_100000.sh, 100000, 314.703735 , 161.238159 , 0.133423 , 0.000000 ,  13.1944 
Swift, cyclesort_50000.sh, 50000, 1185.675049 , 635.421936 , 0.369263 , 0.000000 ,  48.0641 
Swift, cyclesort_100000.sh, 100000, 320.929626 , 164.049561 , 0.131836 , 0.000000 ,  13.4963 
Swift, heapsort_50000.sh, 50000, 1215.478699 , 651.473755 , 0.369019 , 0.000000 ,  49.2758 
Swift, heapsort_100000.sh, 100000, 351.935242 , 180.973267 , 0.123718 , 0.000000 ,  14.7064 
Swift, mergesort_50000.sh, 50000, 1257.153992 , 673.536316 , 0.410522 , 0.000000 ,  50.983 
Swift, mergesort_100000.sh, 100000, 350.768860 , 180.385925 , 0.165771 , 0.000000 ,  14.6447 
Swift, oddevensort_50000.sh, 50000, 6.272156 , 3.281921 , 0.014587 , 0.000000 ,  0.258477 
Swift, oddevensort_100000.sh, 100000, 314.577148 , 161.059021 , 0.131592 , 0.000000 ,  13.196 
Swift, quicksort_50000.sh, 50000, 1234.266113 , 660.866089 , 0.409729 , 0.000000 ,  50.089 
Swift, quicksort_100000.sh, 100000, 349.977173 , 179.459961 , 0.156677 , 0.000000 ,  14.6602 
Swift, selectionsort_50000.sh, 50000, 1169.363770 , 626.157043 , 0.381836 , 0.000000 ,  47.4425 
Swift, selectionsort_100000.sh, 100000, 314.508179 , 160.877380 , 0.113770 , 0.000000 ,  13.2125 
C, bubblesort_100000.sh, 100000, 4.525269 , 2.359131 , 0.012573 , 0.000000 ,  0.187878 
C, cyclesort_100000.sh, 100000, 5.189758 , 2.776794 , 0.014648 , 0.000000 ,  0.210572 
C, heapsort_100000.sh, 100000, 5.411316 , 2.748474 , 0.019348 , 0.000000 ,  0.229133 
C, mergesort_100000.sh, 100000, 5.681152 , 2.968872 , 0.017639 , 0.000000 ,  0.234902 
C, oddevensort_100000.sh, 100000, 5.330383 , 2.800964 , 0.018555 , 0.000000 ,  0.218965 
C, quicksort_100000.sh, 100000, 5.556641 , 2.875916 , 0.010254 , 0.000000 ,  0.232943 
C, selectionsort_100000.sh, 100000, 5.125854 , 2.589844 , 0.014282 , 0.000000 ,  0.220081 
C++, bubblesort_100000.sh, 100000, 15.262634 , 8.025024 , 0.025208 , 0.000000 ,  0.629158 
C++, cyclesort_100000.sh, 100000, 15.069397 , 7.953979 , 0.027527 , 0.000000 ,  0.617811 
C++, heapsort_100000.sh, 100000, 15.560852 , 8.336609 , 0.017151 , 0.000000 ,  0.628885 
C++, mergesort_100000.sh, 100000, 16.004089 , 8.550354 , 0.032654 , 0.000000 ,  0.64563 
C++, oddevensort_100000.sh, 100000, 15.486084 , 8.255615 , 0.024902 , 0.000000 ,  0.627932 
C++, quicksort_100000.sh, 100000, 14.847656 , 7.945496 , 0.016602 , 0.000000 ,  0.600631 
C++, selectionsort_100000.sh, 100000, 15.557678 , 8.278687 , 0.028442 , 0.000000 ,  0.631289 
C#, bubblesort_100000.sh, 100000, 14.622437 , 7.845764 , 0.011475 , 0.000000 ,  0.590358 
C#, cyclesort_100000.sh, 100000, 15.333313 , 8.217529 , 0.011475 , 0.000000 ,  0.621419 
C#, heapsort_100000.sh, 100000, 14.803345 , 7.916809 , 0.026367 , 0.000000 ,  0.59914 
C#, mergesort_100000.sh, 100000, 15.249023 , 8.222595 , 0.009705 , 0.000000 ,  0.614187 
C#, oddevensort_100000.sh, 100000, 14.777771 , 7.920532 , 0.027222 , 0.000000 ,  0.596 
C#, quicksort_100000.sh, 100000, 15.221985 , 8.158569 , 0.023743 , 0.000000 ,  0.613823 
C#, selectionsort_100000.sh, 100000, 14.661499 , 7.881653 , 0.016724 , 0.000000 ,  0.590986 
Go, bubblesort_100000.sh, 100000, 3.740967 , 1.858948 , 0.010437 , 0.000000 ,  0.161143 
Go, cyclesort_100000.sh, 100000, 3.758301 , 1.761047 , 0.021606 , 0.000000 ,  0.170052 
Go, heapsort_100000.sh, 100000, 3.029968 , 1.457214 , 0.009155 , 0.000000 ,  0.135304 
Go, mergesort_100000.sh, 100000, 3.662354 , 1.825317 , 0.011047 , 0.000000 ,  0.156861 
Go, oddevensort_100000.sh, 100000, 3.319031 , 1.481873 , 0.010620 , 0.000000 ,  0.158188 
Go, quicksort_100000.sh, 100000, 3.319397 , 1.585938 , 0.009583 , 0.000000 ,  0.147205 
Go, selectionsort_100000.sh, 100000, 3.647522 , 1.836975 , 0.008911 , 0.000000 ,  0.15424 
Haskell, bubblesort_100000.sh, 100000, 1210.991821 , 637.775940 , 0.451355 , 0.000000 ,  49.0361 
Haskell, cyclesort_100000.sh, 100000, 2406.111389 , 1266.586060 , 0.855225 , 0.000000 ,  97.4066 
Haskell, heapsort_100000.sh, 100000, 1218.668945 , 641.872559 , 0.477356 , 0.000000 ,  49.3302 
Haskell, mergesort_100000.sh, 100000, 1256.677185 , 661.704041 , 0.461304 , 0.000000 ,  50.8942 
Haskell, oddevensort_100000.sh, 100000, 1139.634949 , 600.439209 , 0.396729 , 0.000000 ,  46.0899 
Haskell, quicksort_100000.sh, 100000, 1209.513611 , 636.873718 , 0.441040 , 0.000000 ,  48.9876 
Haskell, selectionsort_100000.sh, 100000, 1279.005798 , 674.186707 , 0.461182 , 0.000000 ,  51.7264 
Rust, bubblesort_100000.sh, 100000, 948.076721 , 503.672241 , 0.374939 , 0.000000 ,  38.3771 
Rust, cyclesort_100000.sh, 100000, 938.716797 , 498.594727 , 0.364746 , 0.000000 ,  37.9885 
Rust, heapsort_100000.sh, 100000, 925.072021 , 492.063782 , 0.371033 , 0.000000 ,  37.3876 
Rust, mergesort_100000.sh, 100000, 897.707336 , 476.942932 , 0.335510 , 0.000000 ,  36.3462 
Rust, oddevensort_100000.sh, 100000, 944.505737 , 501.949890 , 0.364685 , 0.000000 ,  38.2085 
Rust, quicksort_100000.sh, 100000, 919.080505 , 489.061340 , 0.356628 , 0.000000 ,  37.1569 
Rust, selectionsort_100000.sh, 100000, 931.178223 , 494.820740 , 0.345825 , 0.000000 ,  37.6773 
Swift, bubblesort_100000.sh, 100000, 318.301453 , 163.575867 , 0.141235 , 0.000000 ,  13.3016 
Swift, cyclesort_100000.sh, 100000, 320.720703 , 164.747620 , 0.124817 , 0.000000 ,  13.4148 
Swift, heapsort_100000.sh, 100000, 349.356995 , 179.455933 , 0.133545 , 0.000000 ,  14.6167 
Swift, mergesort_100000.sh, 100000, 350.468018 , 180.247192 , 0.138550 , 0.000000 ,  14.6414 
Swift, oddevensort_100000.sh, 100000, 314.190918 , 160.871216 , 0.130737 , 0.000000 ,  13.189 
Swift, quicksort_100000.sh, 100000, 348.718445 , 178.443298 , 0.151428 , 0.000000 ,  14.6435 
Swift, selectionsort_100000.sh, 100000, 315.790710 , 162.053833 , 0.142273 , 0.000000 ,  13.2095 
C, bubblesort_100000.sh, 100000, 4.962524 , 2.513733 , 0.017212 , 0.000000 ,  0.211741 
C, cyclesort_100000.sh, 100000, 4.968140 , 2.593445 , 0.014954 , 0.000000 ,  0.204451 
C, heapsort_100000.sh, 100000, 5.192993 , 2.733521 , 0.028015 , 0.000000 ,  0.210623 
C, mergesort_100000.sh, 100000, 5.580872 , 2.978394 , 0.011597 , 0.000000 ,  0.225766 
C, oddevensort_100000.sh, 100000, 5.255005 , 2.783875 , 0.012085 , 0.000000 ,  0.215151 
C, quicksort_100000.sh, 100000, 5.342102 , 2.869263 , 0.006104 , 0.000000 ,  0.214368 
C, selectionsort_100000.sh, 100000, 5.330627 , 2.743530 , 0.031128 , 0.000000 ,  0.220623 
C++, bubblesort_100000.sh, 100000, 15.224487 , 8.154419 , 0.018311 , 0.000000 ,  0.615807 
C++, cyclesort_100000.sh, 100000, 15.422668 , 8.210266 , 0.030212 , 0.000000 ,  0.62468 
C++, heapsort_100000.sh, 100000, 15.441650 , 8.232849 , 0.021545 , 0.000000 ,  0.626448 
C++, mergesort_100000.sh, 100000, 16.411377 , 8.610352 , 0.017151 , 0.000000 ,  0.679915 
C++, oddevensort_100000.sh, 100000, 15.229614 , 8.040466 , 0.025146 , 0.000000 ,  0.623579 
C++, quicksort_100000.sh, 100000, 15.161499 , 8.058838 , 0.015808 , 0.000000 ,  0.617132 
C++, selectionsort_100000.sh, 100000, 15.575623 , 8.322510 , 0.015381 , 0.000000 ,  0.630799 
C#, bubblesort_100000.sh, 100000, 14.914429 , 7.949158 , 0.026123 , 0.000000 ,  0.604931 
C#, cyclesort_100000.sh, 100000, 15.363708 , 8.244141 , 0.009094 , 0.000000 ,  0.622516 
C#, heapsort_100000.sh, 100000, 15.128357 , 8.139771 , 0.006775 , 0.000000 ,  0.609841 
C#, mergesort_100000.sh, 100000, 15.022766 , 7.983459 , 0.024292 , 0.000000 ,  0.611971 
C#, oddevensort_100000.sh, 100000, 15.139954 , 8.092529 , 0.008484 , 0.000000 ,  0.613454 
C#, quicksort_100000.sh, 100000, 14.871216 , 7.937195 , 0.023560 , 0.000000 ,  0.603179 
C#, selectionsort_100000.sh, 100000, 15.365051 , 8.203613 , 0.017883 , 0.000000 ,  0.624419 
Go, bubblesort_100000.sh, 100000, 3.304138 , 1.568909 , 0.014099 , 0.000000 ,  0.148007 
Go, cyclesort_100000.sh, 100000, 3.384521 , 1.749146 , 0.009338 , 0.000000 ,  0.140041 
Go, heapsort_100000.sh, 100000, 3.638550 , 1.781311 , 0.011292 , 0.000000 ,  0.158804 
Go, mergesort_100000.sh, 100000, 3.159546 , 1.350586 , 0.009216 , 0.000000 ,  0.156457 
Go, oddevensort_100000.sh, 100000, 3.469849 , 1.734558 , 0.009338 , 0.000000 ,  0.14743 
Go, quicksort_100000.sh, 100000, 3.607971 , 1.668640 , 0.014282 , 0.000000 ,  0.165928 
Go, selectionsort_100000.sh, 100000, 3.390137 , 1.480286 , 0.013245 , 0.000000 ,  0.162957 
Haskell, bubblesort_100000.sh, 100000, 1195.439331 , 628.400513 , 0.425842 , 0.000000 ,  48.4993 
Haskell, cyclesort_100000.sh, 100000, 2415.730469 , 1272.746826 , 0.826111 , 0.000000 ,  97.7312 
Haskell, heapsort_100000.sh, 100000, 1211.432251 , 638.202942 , 0.458923 , 0.000000 ,  49.0229 
Haskell, mergesort_100000.sh, 100000, 1229.591797 , 647.396729 , 0.414185 , 0.000000 ,  49.7858 
Haskell, oddevensort_100000.sh, 100000, 1140.401367 , 600.736023 , 0.419312 , 0.000000 ,  46.1243 
Haskell, quicksort_100000.sh, 100000, 1207.163330 , 636.270447 , 0.421936 , 0.000000 ,  48.8664 
Haskell, selectionsort_100000.sh, 100000, 1280.193542 , 674.307007 , 0.485046 , 0.000000 ,  51.8149 
Rust, bubblesort_100000.sh, 100000, 932.705566 , 495.135559 , 0.347961 , 0.000000 ,  37.7561 
Rust, cyclesort_100000.sh, 100000, 982.639404 , 522.270874 , 0.378601 , 0.000000 ,  39.7312 
Rust, heapsort_100000.sh, 100000, 951.048035 , 506.029785 , 0.347961 , 0.000000 ,  38.4749 
Rust, mergesort_100000.sh, 100000, 946.716797 , 503.723206 , 0.351318 , 0.000000 ,  38.2867 
Rust, oddevensort_100000.sh, 100000, 995.779846 , 529.118958 , 0.381653 , 0.000000 ,  40.3082 
Rust, quicksort_100000.sh, 100000, 945.504089 , 503.454163 , 0.357849 , 0.000000 ,  38.2044 
Rust, selectionsort_100000.sh, 100000, 965.524841 , 511.638977 , 0.395386 , 0.000000 ,  39.1873 
Swift, bubblesort_100000.sh, 100000, 316.603394 , 162.609192 , 0.111877 , 0.000000 ,  13.2421 
Swift, cyclesort_100000.sh, 100000, 315.762024 , 162.034851 , 0.140991 , 0.000000 ,  13.2164 
Swift, heapsort_100000.sh, 100000, 358.940552 , 184.570496 , 0.138489 , 0.000000 ,  15.0043 
Swift, mergesort_100000.sh, 100000, 349.832642 , 179.641907 , 0.166321 , 0.000000 ,  14.6275 
Swift, oddevensort_100000.sh, 100000, 314.876892 , 161.166382 , 0.123718 , 0.000000 ,  13.2171 
Swift, quicksort_100000.sh, 100000, 354.965210 , 181.089172 , 0.158386 , 0.000000 ,  14.9552 
Swift, selectionsort_100000.sh, 100000, 319.793335 , 164.265381 , 0.147949 , 0.000000 ,  13.3689 
C, bubblesort_100000.sh, 100000, 4.784729 , 2.543640 , 0.016541 , 0.000000 ,  0.194126 
C, cyclesort_100000.sh, 100000, 5.544983 , 2.794556 , 0.028748 , 0.000000 ,  0.23585 
C, heapsort_100000.sh, 100000, 5.310364 , 2.810303 , 0.012024 , 0.000000 ,  0.216948 
C, mergesort_100000.sh, 100000, 5.641541 , 2.795349 , 0.014160 , 0.000000 ,  0.248526 
C, oddevensort_100000.sh, 100000, 5.210571 , 2.733826 , 0.014954 , 0.000000 ,  0.213698 
C, quicksort_100000.sh, 100000, 5.661987 , 2.964172 , 0.024292 , 0.000000 ,  0.233283 
C, selectionsort_100000.sh, 100000, 5.242859 , 2.746338 , 0.019470 , 0.000000 ,  0.214355 
C++, bubblesort_100000.sh, 100000, 14.609680 , 7.676086 , 0.014160 , 0.000000 ,  0.603575 
C++, cyclesort_100000.sh, 100000, 15.409546 , 8.206787 , 0.025146 , 0.000000 ,  0.623441 
C++, heapsort_100000.sh, 100000, 14.929993 , 7.914429 , 0.024841 , 0.000000 ,  0.608651 
C++, mergesort_100000.sh, 100000, 16.121277 , 8.604309 , 0.017822 , 0.000000 ,  0.653457 
C++, oddevensort_100000.sh, 100000, 15.171265 , 8.064819 , 0.027832 , 0.000000 ,  0.615867 
C++, quicksort_100000.sh, 100000, 14.966309 , 8.000427 , 0.021240 , 0.000000 ,  0.604476 
C++, selectionsort_100000.sh, 100000, 14.766479 , 7.889954 , 0.018066 , 0.000000 ,  0.59752 
C#, bubblesort_100000.sh, 100000, 15.048828 , 8.070496 , 0.009216 , 0.000000 ,  0.607421 
C#, cyclesort_100000.sh, 100000, 14.791382 , 7.976685 , 0.011292 , 0.000000 ,  0.596412 
C#, heapsort_100000.sh, 100000, 15.122070 , 8.092529 , 0.006470 , 0.000000 ,  0.612845 
C#, mergesort_100000.sh, 100000, 15.053650 , 8.042664 , 0.027954 , 0.000000 ,  0.608945 
C#, oddevensort_100000.sh, 100000, 14.980774 , 8.048950 , 0.012756 , 0.000000 ,  0.60368 
C#, quicksort_100000.sh, 100000, 15.239563 , 8.127869 , 0.030090 , 0.000000 ,  0.617175 
C#, selectionsort_100000.sh, 100000, 14.839661 , 7.934692 , 0.013794 , 0.000000 ,  0.601838 
Go, bubblesort_100000.sh, 100000, 3.710266 , 1.893494 , 0.012756 , 0.000000 ,  0.155027 
Go, cyclesort_100000.sh, 100000, 3.145203 , 1.432190 , 0.011658 , 0.000000 ,  0.146953 
Go, heapsort_100000.sh, 100000, 3.566101 , 1.727417 , 0.009399 , 0.000000 ,  0.154917 
Go, mergesort_100000.sh, 100000, 3.673767 , 1.869690 , 0.009460 , 0.000000 ,  0.156774 
Go, oddevensort_100000.sh, 100000, 3.256836 , 1.378418 , 0.008972 , 0.000000 ,  0.160121 
Go, quicksort_100000.sh, 100000, 3.509949 , 1.696411 , 0.013367 , 0.000000 ,  0.153562 
Go, selectionsort_100000.sh, 100000, 3.616272 , 1.833435 , 0.010620 , 0.000000 ,  0.153293 
Haskell, bubblesort_100000.sh, 100000, 1203.887756 , 631.542603 , 0.421814 , 0.000000 ,  48.951 
Haskell, cyclesort_100000.sh, 100000, 2454.840820 , 1293.169617 , 0.874573 , 0.000000 ,  99.3325 
Haskell, heapsort_100000.sh, 100000, 1220.918945 , 643.131653 , 0.419922 , 0.000000 ,  49.4292 
Haskell, mergesort_100000.sh, 100000, 1230.496826 , 648.541870 , 0.424805 , 0.000000 ,  49.7454 
Haskell, oddevensort_100000.sh, 100000, 1132.593262 , 597.210388 , 0.416138 , 0.000000 ,  45.7748 
Haskell, quicksort_100000.sh, 100000, 1223.606201 , 639.666443 , 0.431152 , 0.000000 ,  49.5053 
Haskell, selectionsort_100000.sh, 100000, 1312.196411 , 685.242615 , 0.534668 , 0.000000 ,  53.0344 
Rust, bubblesort_100000.sh, 100000, 936.722656 , 492.887329 , 0.292175 , 0.000000 ,  37.9265 
Rust, cyclesort_100000.sh, 100000, 959.411194 , 504.615540 , 0.272278 , 0.000000 ,  38.875 
Rust, heapsort_100000.sh, 100000, 929.848694 , 488.099182 , 0.311646 , 0.000000 ,  37.7683 
Rust, mergesort_100000.sh, 100000, 954.892212 , 503.040100 , 0.308777 , 0.000000 ,  38.6419 
Rust, oddevensort_100000.sh, 100000, 957.660339 , 504.940491 , 0.277527 , 0.000000 ,  38.7007 
Rust, quicksort_100000.sh, 100000, 904.874878 , 476.338745 , 0.275635 , 0.000000 ,  36.6256 
Rust, selectionsort_100000.sh, 100000, 986.139343 , 519.512756 , 0.286011 , 0.000000 ,  39.88 
Swift, bubblesort_100000.sh, 100000, 320.953796 , 163.256592 , 0.093018 , 0.000000 ,  13.4228 
Swift, cyclesort_100000.sh, 100000, 326.298340 , 166.150513 , 0.088806 , 0.000000 ,  13.631 
Swift, heapsort_100000.sh, 100000, 359.396057 , 183.410400 , 0.120605 , 0.000000 ,  14.9744 
Swift, mergesort_100000.sh, 100000, 354.306946 , 180.226990 , 0.111633 , 0.000000 ,  14.8127 
Swift, oddevensort_100000.sh, 100000, 318.708252 , 162.035522 , 0.146545 , 0.000000 ,  13.327 
Swift, quicksort_100000.sh, 100000, 353.813721 , 180.028625 , 0.091187 , 0.000000 ,  14.7891 
Swift, selectionsort_100000.sh, 100000, 324.937988 , 165.569763 , 0.130310 , 0.000000 ,  13.5576 
C, bubblesort_100000.sh, 100000, 5.310913 , 2.745544 , 0.037537 , 0.000000 ,  0.217899 
C, cyclesort_100000.sh, 100000, 5.712646 , 2.942993 , 0.039490 , 0.000000 ,  0.233 
C, heapsort_100000.sh, 100000, 5.478333 , 2.741882 , 0.033508 , 0.000000 ,  0.232682 
C, mergesort_100000.sh, 100000, 6.113403 , 3.168945 , 0.043762 , 0.000000 ,  0.251251 
C, oddevensort_100000.sh, 100000, 5.445801 , 2.809509 , 0.043823 , 0.000000 ,  0.223969 
C, quicksort_100000.sh, 100000, 5.726013 , 2.975464 , 0.037048 , 0.000000 ,  0.234055 
C, selectionsort_100000.sh, 100000, 5.344055 , 2.720459 , 0.038452 , 0.000000 ,  0.22317 
C++, bubblesort_100000.sh, 100000, 15.167603 , 8.029907 , 0.043091 , 0.000000 ,  0.611609 
C++, cyclesort_100000.sh, 100000, 15.997681 , 8.449097 , 0.051941 , 0.000000 ,  0.645951 
C++, heapsort_100000.sh, 100000, 15.371460 , 8.078186 , 0.070984 , 0.000000 ,  0.622789 
C++, mergesort_100000.sh, 100000, 16.650635 , 8.848938 , 0.023132 , 0.000000 ,  0.67366 
C++, oddevensort_100000.sh, 100000, 15.892517 , 8.398682 , 0.050293 , 0.000000 ,  0.641985 
C++, quicksort_100000.sh, 100000, 15.214172 , 8.021729 , 0.038208 , 0.000000 ,  0.617372 
C++, selectionsort_100000.sh, 100000, 15.779297 , 8.354187 , 0.047424 , 0.000000 ,  0.635856 
C#, bubblesort_100000.sh, 100000, 14.906921 , 7.830139 , 0.036865 , 0.000000 ,  0.609312 
C#, cyclesort_100000.sh, 100000, 15.539124 , 8.261597 , 0.063721 , 0.000000 ,  0.624747 
C#, heapsort_100000.sh, 100000, 14.782471 , 7.874634 , 0.003967 , 0.000000 ,  0.598417 
C#, mergesort_100000.sh, 100000, 15.594788 , 8.284912 , 0.036499 , 0.000000 ,  0.628323 
C#, oddevensort_100000.sh, 100000, 14.779419 , 7.886841 , 0.007568 , 0.000000 ,  0.595979 
C#, quicksort_100000.sh, 100000, 15.596375 , 8.184082 , 0.097290 , 0.000000 ,  0.630469 
C#, selectionsort_100000.sh, 100000, 14.910828 , 7.887817 , 0.026428 , 0.000000 ,  0.603509 
Go, bubblesort_100000.sh, 100000, 3.931152 , 2.074585 , 0.023315 , 0.000000 ,  0.156749 
Go, cyclesort_100000.sh, 100000, 3.994873 , 1.901855 , 0.123840 , 0.000000 ,  0.168467 
Go, heapsort_100000.sh, 100000, 3.197815 , 1.430908 , 0.035522 , 0.000000 ,  0.148553 
Go, mergesort_100000.sh, 100000, 3.936890 , 1.871094 , 0.032837 , 0.000000 ,  0.173036 
Go, oddevensort_100000.sh, 100000, 3.860107 , 1.774719 , 0.022827 , 0.000000 ,  0.175465 
Go, quicksort_100000.sh, 100000, 3.256409 , 1.421936 , 0.024475 , 0.000000 ,  0.153364 
Go, selectionsort_100000.sh, 100000, 3.842407 , 1.897400 , 0.036255 , 0.000000 ,  0.161743 
Haskell, bubblesort_100000.sh, 100000, 1246.875854 , 640.576233 , 0.411499 , 0.000000 ,  51.3608 
Haskell, cyclesort_100000.sh, 100000, 2419.381348 , 1267.926331 , 0.663086 , 0.000000 ,  97.8194 
Haskell, heapsort_100000.sh, 100000, 1211.240295 , 638.930664 , 0.434509 , 0.000000 ,  48.9433 
Haskell, mergesort_100000.sh, 100000, 1219.334534 , 641.915771 , 0.445862 , 0.000000 ,  49.355 
Haskell, oddevensort_100000.sh, 100000, 1124.354797 , 592.399048 , 0.405823 , 0.000000 ,  45.4622 
Haskell, quicksort_100000.sh, 100000, 1200.023743 , 632.502502 , 0.447815 , 0.000000 ,  48.5449 
Haskell, selectionsort_100000.sh, 100000, 1297.211304 , 683.930176 , 0.456665 , 0.000000 ,  52.4422 
Rust, bubblesort_100000.sh, 100000, 947.266418 , 503.860901 , 0.364380 , 0.000000 ,  38.2963 
Rust, cyclesort_100000.sh, 100000, 939.397339 , 499.030945 , 0.350220 , 0.000000 ,  38.0078 
Rust, heapsort_100000.sh, 100000, 933.988220 , 496.194946 , 0.344055 , 0.000000 ,  37.8276 
Rust, mergesort_100000.sh, 100000, 918.382751 , 488.463318 , 0.342590 , 0.000000 ,  37.1235 
Rust, oddevensort_100000.sh, 100000, 955.266479 , 507.485168 , 0.358459 , 0.000000 ,  38.6359 
Rust, quicksort_100000.sh, 100000, 896.994202 , 477.016357 , 0.318298 , 0.000000 ,  36.2705 
Rust, selectionsort_100000.sh, 100000, 938.781006 , 499.226685 , 0.359314 , 0.000000 ,  37.9173 
Swift, bubblesort_100000.sh, 100000, 316.211792 , 161.997131 , 0.133606 , 0.000000 ,  13.2543 
Swift, cyclesort_100000.sh, 100000, 320.527344 , 164.118408 , 0.130737 , 0.000000 ,  13.45 
Swift, heapsort_100000.sh, 100000, 352.100952 , 180.773376 , 0.145569 , 0.000000 ,  14.7294 
Swift, mergesort_100000.sh, 100000, 353.729248 , 181.465149 , 0.144043 , 0.000000 ,  14.8148 
Swift, oddevensort_100000.sh, 100000, 315.400574 , 161.283081 , 0.139465 , 0.000000 ,  13.1877 
Swift, quicksort_100000.sh, 100000, 353.385071 , 178.988525 , 0.124268 , 0.000000 ,  14.8432 
Swift, selectionsort_100000.sh, 100000, 317.649658 , 160.403809 , 0.107727 , 0.000000 ,  13.3839 
