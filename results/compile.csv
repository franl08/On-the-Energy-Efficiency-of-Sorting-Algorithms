Language , Program , Input Size , Package , Core(s) , GPU , DRAM? , Time (sec)
C, bubblesort_25000.sh, 25000, 3.301941 , 1.116028 , 0.063599 , 0.000000 ,  0.182224 
C, cyclesort_25000.sh, 25000, 2.803162 , 1.095947 , 0.033936 , 0.000000 ,  0.143751 
C, heapsort_25000.sh, 25000, 2.758911 , 1.394958 , 0.035828 , 0.000000 ,  0.115702 
C, insertionsort_25000.sh, 25000, 2.239014 , 1.126282 , 0.030518 , 0.000000 ,  0.092962 
C, mergesort_25000.sh, 25000, 4.406067 , 1.695129 , 0.036011 , 0.000000 ,  0.231102 
C, oddevensort_25000.sh, 25000, 2.964844 , 1.252930 , 0.165466 , 0.000000 ,  0.132846 
C, quicksort_25000.sh, 25000, 2.716003 , 1.263000 , 0.095520 , 0.000000 ,  0.116772 
C, selectionsort_25000.sh, 25000, 3.345886 , 1.223633 , 0.034607 , 0.000000 ,  0.178609 
C++, bubblesort_25000.sh, 25000, 111.374634 , 19.594604 , 0.122314 , 0.000000 ,  7.95741 
C++, cyclesort_25000.sh, 25000, 12.402405 , 6.508057 , 0.057617 , 0.000000 ,  0.502713 
C++, heapsort_25000.sh, 25000, 11.977356 , 6.284119 , 0.040161 , 0.000000 ,  0.488031 
C++, insertionsort_25000.sh, 25000, 11.609253 , 6.136353 , 0.044128 , 0.000000 ,  0.469674 
C++, mergesort_25000.sh, 25000, 13.950317 , 6.741394 , 0.046082 , 0.000000 ,  0.619586 
C++, oddevensort_25000.sh, 25000, 13.886841 , 6.126953 , 0.051514 , 0.000000 ,  0.667506 
C++, quicksort_25000.sh, 25000, 15.141174 , 6.341125 , 0.049011 , 0.000000 ,  0.758883 
C++, selectionsort_25000.sh, 25000, 12.416626 , 5.924194 , 0.048584 , 0.000000 ,  0.556509 
C#, bubblesort_25000.sh, 25000, 24.099976 , 8.119080 , 0.042542 , 0.000000 ,  1.38282 
C#, cyclesort_25000.sh, 25000, 13.384216 , 6.589478 , 0.025879 , 0.000000 ,  0.588073 
C#, heapsort_25000.sh, 25000, 13.380371 , 6.586182 , 0.031250 , 0.000000 ,  0.583649 
C#, insertionsort_25000.sh, 25000, 12.857361 , 6.775024 , 0.083496 , 0.000000 ,  0.519746 
C#, mergesort_25000.sh, 25000, 12.797668 , 6.750671 , 0.067993 , 0.000000 ,  0.517112 
C#, oddevensort_25000.sh, 25000, 13.566772 , 7.099243 , 0.042603 , 0.000000 ,  0.554592 
C#, quicksort_25000.sh, 25000, 12.787415 , 6.792175 , 0.027222 , 0.000000 ,  0.517788 
C#, selectionsort_25000.sh, 25000, 13.272766 , 6.541138 , 0.037903 , 0.000000 ,  0.579317 
Go, bubblesort_25000.sh, 25000, 48.437256 , 8.398682 , 0.054138 , 0.000000 ,  3.46887 
Go, cyclesort_25000.sh, 25000, 3.991028 , 1.456970 , 0.022766 , 0.000000 ,  0.215511 
Go, heapsort_25000.sh, 25000, 3.695923 , 1.634033 , 0.033325 , 0.000000 ,  0.173135 
Go, insertionsort_25000.sh, 25000, 4.365173 , 1.739380 , 0.024597 , 0.000000 ,  0.222612 
Go, mergesort_25000.sh, 25000, 4.086853 , 1.700928 , 0.022156 , 0.000000 ,  0.203232 
Go, oddevensort_25000.sh, 25000, 3.999695 , 1.692810 , 0.024231 , 0.000000 ,  0.195042 
Go, quicksort_25000.sh, 25000, 3.568115 , 1.355469 , 0.034180 , 0.000000 ,  0.185755 
Go, selectionsort_25000.sh, 25000, 4.963135 , 1.595276 , 0.032288 , 0.000000 ,  0.287571 
Haskell, bubblesort_25000.sh, 25000, 416.096619 , 175.849792 , 0.296143 , 0.000000 ,  20.5585 
Haskell, cyclesort_25000.sh, 25000, 588.488586 , 306.991455 , 0.279114 , 0.000000 ,  23.838 
Haskell, heapsort_25000.sh, 25000, 308.932312 , 159.592468 , 0.206055 , 0.000000 ,  12.6492 
Haskell, insertionsort_25000.sh, 25000, 308.043396 , 161.188171 , 0.110352 , 0.000000 ,  12.4411 
Haskell, mergesort_25000.sh, 25000, 312.030090 , 162.753235 , 0.284119 , 0.000000 ,  12.6276 
Haskell, oddevensort_25000.sh, 25000, 292.491638 , 151.922485 , 0.272644 , 0.000000 ,  11.9004 
Haskell, quicksort_25000.sh, 25000, 305.963989 , 159.755432 , 0.141235 , 0.000000 ,  12.3934 
Haskell, selectionsort_25000.sh, 25000, 333.361084 , 171.938293 , 0.338379 , 0.000000 ,  13.6642 
Rust, bubblesort_25000.sh, 25000, 274.959045 , 129.581787 , 0.161926 , 0.000000 ,  12.4716 
Rust, cyclesort_25000.sh, 25000, 229.841736 , 121.235596 , 0.094238 , 0.000000 ,  9.30421 
Rust, heapsort_25000.sh, 25000, 229.481934 , 120.985168 , 0.067688 , 0.000000 ,  9.29442 
Rust, insertionsort_25000.sh, 25000, 228.709717 , 120.550781 , 0.189209 , 0.000000 ,  9.253 
Rust, mergesort_25000.sh, 25000, 221.418457 , 116.963196 , 0.080566 , 0.000000 ,  8.94981 
Rust, oddevensort_25000.sh, 25000, 228.453491 , 119.150879 , 0.173096 , 0.000000 ,  9.35457 
Rust, quicksort_25000.sh, 25000, 221.254761 , 116.323792 , 0.090576 , 0.000000 ,  8.98509 
Rust, selectionsort_25000.sh, 25000, 237.248352 , 125.110535 , 0.089661 , 0.000000 ,  9.60188 
Swift, bubblesort_25000.sh, 25000, 386.679016 , 190.653259 , 0.168457 , 0.000000 ,  16.9248 
Swift, cyclesort_25000.sh, 25000, 353.152710 , 185.710999 , 0.100586 , 0.000000 ,  14.4588 
Swift, heapsort_25000.sh, 25000, 363.368835 , 191.211731 , 0.118225 , 0.000000 ,  14.8583 
Swift, insertionsort_25000.sh, 25000, 352.433838 , 186.422546 , 0.066895 , 0.000000 ,  14.3413 
Swift, mergesort_25000.sh, 25000, 363.323547 , 192.407715 , 0.155701 , 0.000000 ,  14.7541 
Swift, oddevensort_25000.sh, 25000, 353.093201 , 186.993164 , 0.134094 , 0.000000 ,  14.338 
Swift, quicksort_25000.sh, 25000, 372.872864 , 197.150757 , 0.155884 , 0.000000 ,  15.1639 
Swift, selectionsort_25000.sh, 25000, 339.877380 , 179.335205 , 0.097229 , 0.000000 ,  13.8615 
C, bubblesort_25000.sh, 25000, 2.602783 , 1.299683 , 0.040527 , 0.000000 ,  0.106083 
C, cyclesort_25000.sh, 25000, 3.189514 , 1.343018 , 0.192932 , 0.000000 ,  0.143836 
C, heapsort_25000.sh, 25000, 2.433533 , 1.135864 , 0.100952 , 0.000000 ,  0.103215 
C, insertionsort_25000.sh, 25000, 2.606445 , 1.340820 , 0.036072 , 0.000000 ,  0.104922 
C, mergesort_25000.sh, 25000, 2.919861 , 1.471985 , 0.029785 , 0.000000 ,  0.123515 
C, oddevensort_25000.sh, 25000, 2.791931 , 1.374939 , 0.050293 , 0.000000 ,  0.116951 
C, quicksort_25000.sh, 25000, 2.884033 , 1.442810 , 0.051697 , 0.000000 ,  0.118672 
C, selectionsort_25000.sh, 25000, 2.563721 , 1.308289 , 0.032471 , 0.000000 ,  0.106852 
C++, bubblesort_25000.sh, 25000, 12.199097 , 6.195740 , 0.150085 , 0.000000 ,  0.503984 
C++, cyclesort_25000.sh, 25000, 11.889526 , 6.240479 , 0.039490 , 0.000000 ,  0.484223 
C++, heapsort_25000.sh, 25000, 11.917542 , 6.146240 , 0.053223 , 0.000000 ,  0.491834 
C++, insertionsort_25000.sh, 25000, 11.913635 , 6.205444 , 0.037720 , 0.000000 ,  0.487934 
C++, mergesort_25000.sh, 25000, 13.210022 , 6.928162 , 0.063171 , 0.000000 ,  0.536386 
C++, oddevensort_25000.sh, 25000, 11.695129 , 6.044800 , 0.045288 , 0.000000 ,  0.483185 
C++, quicksort_25000.sh, 25000, 12.049133 , 6.196960 , 0.158020 , 0.000000 ,  0.491906 
C++, selectionsort_25000.sh, 25000, 11.694031 , 5.996033 , 0.044128 , 0.000000 ,  0.488915 
C#, bubblesort_25000.sh, 25000, 13.045715 , 6.768982 , 0.058472 , 0.000000 ,  0.538556 
C#, cyclesort_25000.sh, 25000, 13.285339 , 6.975525 , 0.033813 , 0.000000 ,  0.542063 
C#, heapsort_25000.sh, 25000, 13.247192 , 6.795349 , 0.122925 , 0.000000 ,  0.547602 
C#, insertionsort_25000.sh, 25000, 13.381958 , 6.894165 , 0.115601 , 0.000000 ,  0.549788 
C#, mergesort_25000.sh, 25000, 13.172974 , 6.938965 , 0.002991 , 0.000000 ,  0.539272 
C#, oddevensort_25000.sh, 25000, 13.161011 , 6.876221 , 0.036621 , 0.000000 ,  0.538659 
C#, quicksort_25000.sh, 25000, 13.058777 , 6.892273 , 0.003174 , 0.000000 ,  0.533127 
C#, selectionsort_25000.sh, 25000, 13.203796 , 6.979126 , 0.026550 , 0.000000 ,  0.533645 
Go, bubblesort_25000.sh, 25000, 3.329346 , 1.624451 , 0.016052 , 0.000000 ,  0.143911 
Go, cyclesort_25000.sh, 25000, 3.643860 , 1.576904 , 0.120911 , 0.000000 ,  0.166086 
Go, heapsort_25000.sh, 25000, 3.583679 , 1.717285 , 0.024658 , 0.000000 ,  0.156686 
Go, insertionsort_25000.sh, 25000, 3.589172 , 1.649780 , 0.036621 , 0.000000 ,  0.160101 
Go, mergesort_25000.sh, 25000, 3.489319 , 1.553650 , 0.094788 , 0.000000 ,  0.156819 
Go, oddevensort_25000.sh, 25000, 3.830017 , 1.920471 , 0.076843 , 0.000000 ,  0.155811 
Go, quicksort_25000.sh, 25000, 3.555298 , 1.723145 , 0.037231 , 0.000000 ,  0.153567 
Go, selectionsort_25000.sh, 25000, 3.522095 , 1.553223 , 0.096924 , 0.000000 ,  0.160414 
Haskell, bubblesort_25000.sh, 25000, 309.197144 , 160.546570 , 0.148926 , 0.000000 ,  12.5985 
Haskell, cyclesort_25000.sh, 25000, 588.828430 , 305.188904 , 0.233398 , 0.000000 ,  24.0146 
Haskell, heapsort_25000.sh, 25000, 309.865173 , 161.131042 , 0.090393 , 0.000000 ,  12.6071 
Haskell, insertionsort_25000.sh, 25000, 305.651245 , 159.138977 , 0.125854 , 0.000000 ,  12.4068 
Haskell, mergesort_25000.sh, 25000, 308.372925 , 160.215515 , 0.183105 , 0.000000 ,  12.5398 
Haskell, oddevensort_25000.sh, 25000, 292.586426 , 151.712341 , 0.225952 , 0.000000 ,  11.9192 
Haskell, quicksort_25000.sh, 25000, 302.753662 , 157.050293 , 0.214111 , 0.000000 ,  12.3368 
Haskell, selectionsort_25000.sh, 25000, 329.336121 , 172.372559 , 0.107361 , 0.000000 ,  13.2911 
Rust, bubblesort_25000.sh, 25000, 227.881775 , 119.627869 , 0.187012 , 0.000000 ,  9.25985 
Rust, cyclesort_25000.sh, 25000, 230.377441 , 121.156006 , 0.099243 , 0.000000 ,  9.34892 
Rust, heapsort_25000.sh, 25000, 233.674805 , 123.408264 , 0.059143 , 0.000000 ,  9.45748 
Rust, insertionsort_25000.sh, 25000, 233.310791 , 123.186829 , 0.059326 , 0.000000 ,  9.43209 
Rust, mergesort_25000.sh, 25000, 232.612549 , 122.735840 , 0.081238 , 0.000000 ,  9.41195 
Rust, oddevensort_25000.sh, 25000, 231.227539 , 122.748596 , 0.092346 , 0.000000 ,  9.28413 
Rust, quicksort_25000.sh, 25000, 222.086365 , 117.171997 , 0.191956 , 0.000000 ,  8.97809 
Rust, selectionsort_25000.sh, 25000, 227.955872 , 120.404785 , 0.066223 , 0.000000 ,  9.2354 
Swift, bubblesort_25000.sh, 25000, 342.399536 , 182.778442 , 0.139832 , 0.000000 ,  13.9181 
Swift, cyclesort_25000.sh, 25000, 340.170227 , 181.488220 , 0.144653 , 0.000000 ,  13.8355 
Swift, heapsort_25000.sh, 25000, 374.731934 , 200.223572 , 0.160583 , 0.000000 ,  15.2204 
Swift, insertionsort_25000.sh, 25000, 340.098816 , 181.898743 , 0.137085 , 0.000000 ,  13.7993 
Swift, mergesort_25000.sh, 25000, 372.535645 , 199.110535 , 0.145996 , 0.000000 ,  15.1326 
Swift, oddevensort_25000.sh, 25000, 337.304077 , 179.987000 , 0.110962 , 0.000000 ,  13.7308 
Swift, quicksort_25000.sh, 25000, 363.440796 , 194.038940 , 0.133606 , 0.000000 ,  14.776 
Swift, selectionsort_25000.sh, 25000, 344.801941 , 183.232361 , 0.120667 , 0.000000 ,  14.0961 
C, bubblesort_25000.sh, 25000, 2.081787 , 0.977783 , 0.016968 , 0.000000 ,  0.093395 
C, cyclesort_25000.sh, 25000, 2.877014 , 1.440247 , 0.014038 , 0.000000 ,  0.124505 
C, heapsort_25000.sh, 25000, 2.038208 , 1.019592 , 0.017395 , 0.000000 ,  0.088285 
C, insertionsort_25000.sh, 25000, 2.430664 , 1.202881 , 0.018494 , 0.000000 ,  0.106766 
C, mergesort_25000.sh, 25000, 2.602478 , 1.315857 , 0.015869 , 0.000000 ,  0.109665 
C, oddevensort_25000.sh, 25000, 2.560181 , 1.278625 , 0.012024 , 0.000000 ,  0.109652 
C, quicksort_25000.sh, 25000, 2.501709 , 1.238281 , 0.012512 , 0.000000 ,  0.107318 
C, selectionsort_25000.sh, 25000, 2.409851 , 1.253723 , 0.016113 , 0.000000 ,  0.100908 
C++, bubblesort_25000.sh, 25000, 11.244446 , 6.009155 , 0.018616 , 0.000000 ,  0.453823 
C++, cyclesort_25000.sh, 25000, 11.785217 , 6.257629 , 0.020630 , 0.000000 ,  0.480366 
C++, heapsort_25000.sh, 25000, 11.730347 , 6.278137 , 0.015198 , 0.000000 ,  0.473337 
C++, insertionsort_25000.sh, 25000, 11.515259 , 6.118347 , 0.032288 , 0.000000 ,  0.467219 
C++, mergesort_25000.sh, 25000, 12.999634 , 6.924316 , 0.018066 , 0.000000 ,  0.528402 
C++, oddevensort_25000.sh, 25000, 11.386108 , 6.035156 , 0.020081 , 0.000000 ,  0.465734 
C++, quicksort_25000.sh, 25000, 11.600830 , 6.149719 , 0.009949 , 0.000000 ,  0.475831 
C++, selectionsort_25000.sh, 25000, 11.585754 , 6.126770 , 0.028625 , 0.000000 ,  0.473868 
C#, bubblesort_25000.sh, 25000, 12.874023 , 6.812988 , 0.009094 , 0.000000 ,  0.529356 
C#, cyclesort_25000.sh, 25000, 12.896667 , 6.918457 , 0.009766 , 0.000000 ,  0.521026 
C#, heapsort_25000.sh, 25000, 12.833069 , 6.844971 , 0.013916 , 0.000000 ,  0.522782 
C#, insertionsort_25000.sh, 25000, 13.018616 , 6.958984 , 0.011963 , 0.000000 ,  0.528175 
C#, mergesort_25000.sh, 25000, 13.150208 , 7.034607 , 0.016235 , 0.000000 ,  0.530882 
C#, oddevensort_25000.sh, 25000, 12.879639 , 6.909790 , 0.000000 , 0.000000 ,  0.523399 
C#, quicksort_25000.sh, 25000, 12.875000 , 6.766907 , 0.015503 , 0.000000 ,  0.530867 
C#, selectionsort_25000.sh, 25000, 12.956055 , 6.927307 , 0.002380 , 0.000000 ,  0.525499 
Go, bubblesort_25000.sh, 25000, 3.220215 , 1.441833 , 0.011597 , 0.000000 ,  0.151987 
Go, cyclesort_25000.sh, 25000, 3.688477 , 1.939026 , 0.013245 , 0.000000 ,  0.149002 
Go, heapsort_25000.sh, 25000, 3.232178 , 1.522888 , 0.008728 , 0.000000 ,  0.145501 
Go, insertionsort_25000.sh, 25000, 3.268555 , 1.620361 , 0.009521 , 0.000000 ,  0.139247 
Go, mergesort_25000.sh, 25000, 3.620422 , 1.844299 , 0.010376 , 0.000000 ,  0.152093 
Go, oddevensort_25000.sh, 25000, 3.034485 , 1.337341 , 0.010803 , 0.000000 ,  0.146604 
Go, quicksort_25000.sh, 25000, 3.503113 , 1.748657 , 0.012268 , 0.000000 ,  0.150519 
Go, selectionsort_25000.sh, 25000, 3.562866 , 1.734924 , 0.015869 , 0.000000 ,  0.156296 
Haskell, bubblesort_25000.sh, 25000, 308.442078 , 162.085388 , 0.148743 , 0.000000 ,  12.5301 
Haskell, cyclesort_25000.sh, 25000, 583.848389 , 306.579590 , 0.198242 , 0.000000 ,  23.733 
Haskell, heapsort_25000.sh, 25000, 311.717773 , 164.464966 , 0.143250 , 0.000000 ,  12.6141 
Haskell, insertionsort_25000.sh, 25000, 299.539612 , 157.519714 , 0.158386 , 0.000000 ,  12.1398 
Haskell, mergesort_25000.sh, 25000, 313.211731 , 165.362061 , 0.138062 , 0.000000 ,  12.6573 
Haskell, oddevensort_25000.sh, 25000, 286.974487 , 151.398438 , 0.128967 , 0.000000 ,  11.6038 
Haskell, quicksort_25000.sh, 25000, 300.775513 , 158.439697 , 0.135071 , 0.000000 ,  12.1853 
Haskell, selectionsort_25000.sh, 25000, 319.499939 , 168.269409 , 0.134705 , 0.000000 ,  12.934 
Rust, bubblesort_25000.sh, 25000, 224.061462 , 119.383301 , 0.104309 , 0.000000 ,  9.05185 
Rust, cyclesort_25000.sh, 25000, 229.042053 , 121.764709 , 0.094177 , 0.000000 ,  9.281 
Rust, heapsort_25000.sh, 25000, 224.501770 , 119.424988 , 0.101990 , 0.000000 ,  9.09508 
Rust, insertionsort_25000.sh, 25000, 225.748047 , 120.087158 , 0.084473 , 0.000000 ,  9.14723 
Rust, mergesort_25000.sh, 25000, 221.657227 , 118.006348 , 0.093262 , 0.000000 ,  8.96918 
Rust, oddevensort_25000.sh, 25000, 234.154663 , 124.680115 , 0.104248 , 0.000000 ,  9.47491 
Rust, quicksort_25000.sh, 25000, 219.130493 , 116.758240 , 0.083801 , 0.000000 ,  8.85966 
Rust, selectionsort_25000.sh, 25000, 230.164246 , 122.605164 , 0.081360 , 0.000000 ,  9.30697 
Swift, bubblesort_25000.sh, 25000, 344.736389 , 183.607605 , 0.118774 , 0.000000 ,  14.0586 
Swift, cyclesort_25000.sh, 25000, 352.046936 , 188.017517 , 0.119324 , 0.000000 ,  14.312 
Swift, heapsort_25000.sh, 25000, 355.853882 , 189.876770 , 0.122314 , 0.000000 ,  14.484 
Swift, insertionsort_25000.sh, 25000, 351.629578 , 187.733398 , 0.110962 , 0.000000 ,  14.3068 
Swift, mergesort_25000.sh, 25000, 365.071655 , 194.835266 , 0.137817 , 0.000000 ,  14.8526 
Swift, oddevensort_25000.sh, 25000, 350.880310 , 187.200378 , 0.122253 , 0.000000 ,  14.28 
Swift, quicksort_25000.sh, 25000, 360.726685 , 192.470520 , 0.141174 , 0.000000 ,  14.6705 
Swift, selectionsort_25000.sh, 25000, 337.195496 , 179.717896 , 0.099060 , 0.000000 ,  13.7478 
C, bubblesort_25000.sh, 25000, 2.584839 , 1.316528 , 0.016052 , 0.000000 ,  0.107392 
C, cyclesort_25000.sh, 25000, 2.335999 , 1.148438 , 0.017029 , 0.000000 ,  0.100082 
C, heapsort_25000.sh, 25000, 2.612488 , 1.338440 , 0.011230 , 0.000000 ,  0.108398 
C, insertionsort_25000.sh, 25000, 2.173706 , 1.091553 , 0.028931 , 0.000000 ,  0.090729 
C, mergesort_25000.sh, 25000, 3.078064 , 1.519226 , 0.011353 , 0.000000 ,  0.133364 
C, oddevensort_25000.sh, 25000, 2.201416 , 1.066101 , 0.014954 , 0.000000 ,  0.096581 
C, quicksort_25000.sh, 25000, 2.974854 , 1.533264 , 0.014404 , 0.000000 ,  0.124356 
C, selectionsort_25000.sh, 25000, 2.115112 , 1.037903 , 0.018005 , 0.000000 ,  0.09056 
C++, bubblesort_25000.sh, 25000, 11.487854 , 6.086731 , 0.020752 , 0.000000 ,  0.469128 
C++, cyclesort_25000.sh, 25000, 11.468811 , 6.099365 , 0.012451 , 0.000000 ,  0.468232 
C++, heapsort_25000.sh, 25000, 11.690369 , 6.241943 , 0.018616 , 0.000000 ,  0.472419 
C++, insertionsort_25000.sh, 25000, 11.625366 , 6.194214 , 0.014893 , 0.000000 ,  0.473119 
C++, mergesort_25000.sh, 25000, 13.197754 , 6.988281 , 0.022766 , 0.000000 ,  0.539478 
C++, oddevensort_25000.sh, 25000, 11.568726 , 6.143860 , 0.020081 , 0.000000 ,  0.471426 
C++, quicksort_25000.sh, 25000, 11.452087 , 6.064148 , 0.024963 , 0.000000 ,  0.467622 
C++, selectionsort_25000.sh, 25000, 11.701660 , 6.239380 , 0.018372 , 0.000000 ,  0.473256 
C#, bubblesort_25000.sh, 25000, 12.997253 , 6.851074 , 0.015137 , 0.000000 ,  0.535363 
C#, cyclesort_25000.sh, 25000, 13.189148 , 7.043091 , 0.008911 , 0.000000 ,  0.534948 
C#, heapsort_25000.sh, 25000, 12.961609 , 6.860840 , 0.009949 , 0.000000 ,  0.531889 
C#, insertionsort_25000.sh, 25000, 12.885315 , 6.913330 , 0.008545 , 0.000000 ,  0.519618 
C#, mergesort_25000.sh, 25000, 12.972656 , 6.921753 , 0.012512 , 0.000000 ,  0.527994 
C#, oddevensort_25000.sh, 25000, 13.237122 , 7.096680 , 0.009216 , 0.000000 ,  0.535134 
C#, quicksort_25000.sh, 25000, 13.025757 , 6.938477 , 0.015930 , 0.000000 ,  0.530025 
C#, selectionsort_25000.sh, 25000, 12.815430 , 6.813843 , 0.011780 , 0.000000 ,  0.524891 
Go, bubblesort_25000.sh, 25000, 3.666199 , 1.842224 , 0.010742 , 0.000000 ,  0.156131 
Go, cyclesort_25000.sh, 25000, 3.092407 , 1.298950 , 0.008362 , 0.000000 ,  0.153296 
Go, heapsort_25000.sh, 25000, 3.545105 , 1.875305 , 0.014221 , 0.000000 ,  0.142065 
Go, insertionsort_25000.sh, 25000, 3.513123 , 1.826965 , 0.002136 , 0.000000 ,  0.145507 
Go, mergesort_25000.sh, 25000, 3.609619 , 1.744019 , 0.009583 , 0.000000 ,  0.159852 
Go, oddevensort_25000.sh, 25000, 2.990417 , 1.323792 , 0.009644 , 0.000000 ,  0.143198 
Go, quicksort_25000.sh, 25000, 3.593384 , 1.838562 , 0.010559 , 0.000000 ,  0.150255 
Go, selectionsort_25000.sh, 25000, 3.374451 , 1.627991 , 0.012146 , 0.000000 ,  0.149179 
Haskell, bubblesort_25000.sh, 25000, 305.744629 , 161.297852 , 0.160400 , 0.000000 ,  12.3648 
Haskell, cyclesort_25000.sh, 25000, 589.479858 , 310.416504 , 0.244324 , 0.000000 ,  23.8626 
Haskell, heapsort_25000.sh, 25000, 306.231934 , 161.652527 , 0.123047 , 0.000000 ,  12.379 
Haskell, insertionsort_25000.sh, 25000, 307.530151 , 162.111633 , 0.123230 , 0.000000 ,  12.4489 
Haskell, mergesort_25000.sh, 25000, 312.927979 , 164.832886 , 0.137695 , 0.000000 ,  12.6678 
Haskell, oddevensort_25000.sh, 25000, 288.603333 , 152.013000 , 0.119812 , 0.000000 ,  11.6864 
Haskell, quicksort_25000.sh, 25000, 310.074707 , 163.267029 , 0.150818 , 0.000000 ,  12.5731 
Haskell, selectionsort_25000.sh, 25000, 320.667725 , 168.780640 , 0.144531 , 0.000000 ,  12.9882 
Rust, bubblesort_25000.sh, 25000, 227.814636 , 121.264099 , 0.091980 , 0.000000 ,  9.21995 
Rust, cyclesort_25000.sh, 25000, 228.027405 , 121.364502 , 0.090271 , 0.000000 ,  9.22175 
Rust, heapsort_25000.sh, 25000, 226.578186 , 120.603210 , 0.086365 , 0.000000 ,  9.16919 
Rust, insertionsort_25000.sh, 25000, 222.693237 , 118.594299 , 0.088318 , 0.000000 ,  9.00362 
Rust, mergesort_25000.sh, 25000, 223.852234 , 119.186951 , 0.107239 , 0.000000 ,  9.04862 
Rust, oddevensort_25000.sh, 25000, 225.730347 , 120.163086 , 0.079712 , 0.000000 ,  9.13457 
Rust, quicksort_25000.sh, 25000, 223.495789 , 119.029541 , 0.107727 , 0.000000 ,  9.03457 
Rust, selectionsort_25000.sh, 25000, 228.211426 , 121.458923 , 0.086365 , 0.000000 ,  9.23841 
Swift, bubblesort_25000.sh, 25000, 340.991150 , 182.344910 , 0.115601 , 0.000000 ,  13.8458 
Swift, cyclesort_25000.sh, 25000, 343.552124 , 183.570007 , 0.132324 , 0.000000 ,  13.959 
Swift, heapsort_25000.sh, 25000, 357.484375 , 190.857300 , 0.116211 , 0.000000 ,  14.5395 
Swift, insertionsort_25000.sh, 25000, 338.692566 , 181.053223 , 0.127869 , 0.000000 ,  13.7523 
Swift, mergesort_25000.sh, 25000, 359.994568 , 192.330750 , 0.126282 , 0.000000 ,  14.6254 
Swift, oddevensort_25000.sh, 25000, 350.705566 , 187.195190 , 0.132202 , 0.000000 ,  14.2693 
Swift, quicksort_25000.sh, 25000, 375.897949 , 200.872314 , 0.154419 , 0.000000 ,  15.2705 
Swift, selectionsort_25000.sh, 25000, 343.372253 , 183.529480 , 0.124695 , 0.000000 ,  13.948 
C, bubblesort_25000.sh, 25000, 2.648560 , 1.159180 , 0.016663 , 0.000000 ,  0.128001 
C, cyclesort_25000.sh, 25000, 2.323120 , 1.099304 , 0.016541 , 0.000000 ,  0.106621 
C, heapsort_25000.sh, 25000, 2.531921 , 1.246887 , 0.019287 , 0.000000 ,  0.108332 
C, insertionsort_25000.sh, 25000, 2.129211 , 1.080505 , 0.016174 , 0.000000 ,  0.090171 
C, mergesort_25000.sh, 25000, 2.881592 , 1.447937 , 0.012085 , 0.000000 ,  0.122733 
C, oddevensort_25000.sh, 25000, 2.340149 , 1.170654 , 0.016785 , 0.000000 ,  0.099854 
C, quicksort_25000.sh, 25000, 2.916321 , 1.362549 , 0.011841 , 0.000000 ,  0.132422 
C, selectionsort_25000.sh, 25000, 2.167114 , 1.103760 , 0.017944 , 0.000000 ,  0.091061 
C++, bubblesort_25000.sh, 25000, 11.379822 , 5.879761 , 0.018188 , 0.000000 ,  0.476559 
C++, cyclesort_25000.sh, 25000, 11.806091 , 6.165222 , 0.017273 , 0.000000 ,  0.487347 
C++, heapsort_25000.sh, 25000, 11.859741 , 6.312256 , 0.015747 , 0.000000 ,  0.483505 
C++, insertionsort_25000.sh, 25000, 11.539124 , 6.117310 , 0.013489 , 0.000000 ,  0.470796 
C++, mergesort_25000.sh, 25000, 12.610901 , 6.735046 , 0.018677 , 0.000000 ,  0.511501 
C++, oddevensort_25000.sh, 25000, 11.423340 , 6.080872 , 0.013367 , 0.000000 ,  0.466941 
C++, quicksort_25000.sh, 25000, 11.721375 , 6.202271 , 0.020325 , 0.000000 ,  0.479165 
C++, selectionsort_25000.sh, 25000, 11.635071 , 6.216064 , 0.015137 , 0.000000 ,  0.471031 
C#, bubblesort_25000.sh, 25000, 13.082520 , 6.947327 , 0.010925 , 0.000000 ,  0.533708 
C#, cyclesort_25000.sh, 25000, 13.037109 , 6.991272 , 0.008667 , 0.000000 ,  0.528114 
C#, heapsort_25000.sh, 25000, 12.867554 , 6.881348 , 0.016968 , 0.000000 ,  0.522924 
C#, insertionsort_25000.sh, 25000, 12.800720 , 6.892883 , 0.008667 , 0.000000 ,  0.516403 
C#, mergesort_25000.sh, 25000, 12.932251 , 6.947083 , 0.015320 , 0.000000 ,  0.521141 
C#, oddevensort_25000.sh, 25000, 12.990295 , 7.011658 , 0.002502 , 0.000000 ,  0.52328 
C#, quicksort_25000.sh, 25000, 12.943970 , 6.874512 , 0.024963 , 0.000000 ,  0.527239 
C#, selectionsort_25000.sh, 25000, 12.832397 , 6.797485 , 0.016052 , 0.000000 ,  0.527816 
Go, bubblesort_25000.sh, 25000, 3.707336 , 1.914185 , 0.013611 , 0.000000 ,  0.151578 
Go, cyclesort_25000.sh, 25000, 3.061218 , 1.500427 , 0.009338 , 0.000000 ,  0.134506 
Go, heapsort_25000.sh, 25000, 3.420410 , 1.796326 , 0.009583 , 0.000000 ,  0.137319 
Go, insertionsort_25000.sh, 25000, 3.468567 , 1.658752 , 0.011780 , 0.000000 ,  0.153496 
Go, mergesort_25000.sh, 25000, 3.086121 , 1.453125 , 0.010193 , 0.000000 ,  0.138389 
Go, oddevensort_25000.sh, 25000, 3.618225 , 1.795471 , 0.009216 , 0.000000 ,  0.155787 
Go, quicksort_25000.sh, 25000, 3.297546 , 1.505371 , 0.015198 , 0.000000 ,  0.154621 
Go, selectionsort_25000.sh, 25000, 3.126526 , 1.470947 , 0.009399 , 0.000000 ,  0.142132 
Haskell, bubblesort_25000.sh, 25000, 308.417114 , 162.488953 , 0.147034 , 0.000000 ,  12.4885 
Haskell, cyclesort_25000.sh, 25000, 585.294128 , 308.123291 , 0.235840 , 0.000000 ,  23.7032 
Haskell, heapsort_25000.sh, 25000, 306.587097 , 161.920837 , 0.123169 , 0.000000 ,  12.3884 
Haskell, insertionsort_25000.sh, 25000, 303.679260 , 160.092163 , 0.128967 , 0.000000 ,  12.2834 
Haskell, mergesort_25000.sh, 25000, 308.421143 , 162.739380 , 0.137695 , 0.000000 ,  12.4631 
Haskell, oddevensort_25000.sh, 25000, 285.103516 , 150.211487 , 0.146240 , 0.000000 ,  11.527 
Haskell, quicksort_25000.sh, 25000, 306.624695 , 161.587769 , 0.128723 , 0.000000 ,  12.4186 
Haskell, selectionsort_25000.sh, 25000, 322.128113 , 169.914185 , 0.132629 , 0.000000 ,  13.0166 
Rust, bubblesort_25000.sh, 25000, 235.676208 , 125.353638 , 0.104919 , 0.000000 ,  9.53936 
Rust, cyclesort_25000.sh, 25000, 227.219177 , 121.018555 , 0.106689 , 0.000000 ,  9.18302 
Rust, heapsort_25000.sh, 25000, 226.556152 , 120.658569 , 0.083435 , 0.000000 ,  9.16057 
Rust, insertionsort_25000.sh, 25000, 233.479065 , 124.166565 , 0.088135 , 0.000000 ,  9.45776 
Rust, mergesort_25000.sh, 25000, 219.958557 , 117.126953 , 0.100891 , 0.000000 ,  8.89567 
Rust, oddevensort_25000.sh, 25000, 226.337891 , 120.478333 , 0.105164 , 0.000000 ,  9.15738 
Rust, quicksort_25000.sh, 25000, 220.914673 , 117.720154 , 0.106934 , 0.000000 ,  8.92669 
Rust, selectionsort_25000.sh, 25000, 228.576538 , 121.688599 , 0.106140 , 0.000000 ,  9.24716 
Swift, bubblesort_25000.sh, 25000, 338.452026 , 180.576965 , 0.109192 , 0.000000 ,  13.7835 
Swift, cyclesort_25000.sh, 25000, 342.765076 , 183.079468 , 0.107483 , 0.000000 ,  13.9334 
Swift, heapsort_25000.sh, 25000, 364.454224 , 194.684631 , 0.112183 , 0.000000 ,  14.8112 
Swift, insertionsort_25000.sh, 25000, 352.664307 , 188.065796 , 0.129089 , 0.000000 ,  14.3646 
Swift, mergesort_25000.sh, 25000, 365.897095 , 195.334961 , 0.124878 , 0.000000 ,  14.8822 
Swift, oddevensort_25000.sh, 25000, 336.994873 , 179.925171 , 0.113342 , 0.000000 ,  13.7049 
Swift, quicksort_25000.sh, 25000, 355.910400 , 189.623718 , 0.147705 , 0.000000 ,  14.4979 
Swift, selectionsort_25000.sh, 25000, 340.277771 , 181.913269 , 0.118469 , 0.000000 ,  13.827 
C, bubblesort_25000.sh, 25000, 2.648560 , 1.159180 , 0.016663 , 0.000000 ,  0.128001 
C, bubblesort_50000.sh, 50000, 7.418762 , 2.024536 , 0.028503 , 0.000000 ,  0.467124 
C, cyclesort_25000.sh, 25000, 2.323120 , 1.099304 , 0.016541 , 0.000000 ,  0.106621 
C, cyclesort_50000.sh, 50000, 3.411682 , 1.754150 , 0.022827 , 0.000000 ,  0.141891 
C, heapsort_25000.sh, 25000, 2.531921 , 1.246887 , 0.019287 , 0.000000 ,  0.108332 
C, heapsort_50000.sh, 50000, 3.960327 , 2.010498 , 0.017761 , 0.000000 ,  0.168025 
C, insertionsort_25000.sh, 25000, 2.129211 , 1.080505 , 0.016174 , 0.000000 ,  0.090171 
C, insertionsort_50000.sh, 50000, 3.259644 , 1.695374 , 0.018433 , 0.000000 ,  0.13403 
C, mergesort_25000.sh, 25000, 2.881592 , 1.447937 , 0.012085 , 0.000000 ,  0.122733 
C, mergesort_50000.sh, 50000, 4.464111 , 1.824829 , 0.021912 , 0.000000 ,  0.228374 
C, oddevensort_25000.sh, 25000, 2.340149 , 1.170654 , 0.016785 , 0.000000 ,  0.099854 
C, oddevensort_50000.sh, 50000, 3.230408 , 1.705078 , 0.015076 , 0.000000 ,  0.132493 
C, quicksort_25000.sh, 25000, 2.916321 , 1.362549 , 0.011841 , 0.000000 ,  0.132422 
C, quicksort_50000.sh, 50000, 3.830994 , 1.979736 , 0.012146 , 0.000000 ,  0.161857 
C, selectionsort_25000.sh, 25000, 2.167114 , 1.103760 , 0.017944 , 0.000000 ,  0.091061 
C, selectionsort_50000.sh, 50000, 3.839661 , 1.618347 , 0.020630 , 0.000000 ,  0.192519 
C++, bubblesort_25000.sh, 25000, 11.379822 , 5.879761 , 0.018188 , 0.000000 ,  0.476559 
C++, bubblesort_50000.sh, 50000, 13.205200 , 6.526489 , 0.023865 , 0.000000 ,  0.580599 
C++, cyclesort_25000.sh, 25000, 11.806091 , 6.165222 , 0.017273 , 0.000000 ,  0.487347 
C++, cyclesort_50000.sh, 50000, 13.147156 , 7.015015 , 0.012695 , 0.000000 ,  0.532888 
C++, heapsort_25000.sh, 25000, 11.859741 , 6.312256 , 0.015747 , 0.000000 ,  0.483505 
C++, heapsort_50000.sh, 50000, 13.328735 , 6.819946 , 0.023682 , 0.000000 ,  0.56666 
C++, insertionsort_25000.sh, 25000, 11.539124 , 6.117310 , 0.013489 , 0.000000 ,  0.470796 
C++, insertionsort_50000.sh, 50000, 12.925293 , 6.898010 , 0.016174 , 0.000000 ,  0.52118 
C++, mergesort_25000.sh, 25000, 12.610901 , 6.735046 , 0.018677 , 0.000000 ,  0.511501 
C++, mergesort_50000.sh, 50000, 14.268982 , 7.612244 , 0.019897 , 0.000000 ,  0.579005 
C++, oddevensort_25000.sh, 25000, 11.423340 , 6.080872 , 0.013367 , 0.000000 ,  0.466941 
C++, oddevensort_50000.sh, 50000, 12.694580 , 6.751038 , 0.013733 , 0.000000 ,  0.515722 
C++, quicksort_25000.sh, 25000, 11.721375 , 6.202271 , 0.020325 , 0.000000 ,  0.479165 
C++, quicksort_50000.sh, 50000, 13.539612 , 6.775940 , 0.014832 , 0.000000 ,  0.588952 
C++, selectionsort_25000.sh, 25000, 11.635071 , 6.216064 , 0.015137 , 0.000000 ,  0.471031 
C++, selectionsort_50000.sh, 50000, 12.617004 , 6.769287 , 0.021423 , 0.000000 ,  0.508657 
C#, bubblesort_25000.sh, 25000, 13.082520 , 6.947327 , 0.010925 , 0.000000 ,  0.533708 
C#, bubblesort_50000.sh, 50000, 13.458435 , 7.162598 , 0.010681 , 0.000000 ,  0.549121 
C#, cyclesort_25000.sh, 25000, 13.037109 , 6.991272 , 0.008667 , 0.000000 ,  0.528114 
C#, cyclesort_50000.sh, 50000, 14.274170 , 7.153809 , 0.003784 , 0.000000 ,  0.623373 
C#, heapsort_25000.sh, 25000, 12.867554 , 6.881348 , 0.016968 , 0.000000 ,  0.522924 
C#, heapsort_50000.sh, 50000, 14.252380 , 7.534790 , 0.017639 , 0.000000 ,  0.584624 
C#, insertionsort_25000.sh, 25000, 12.800720 , 6.892883 , 0.008667 , 0.000000 ,  0.516403 
C#, insertionsort_50000.sh, 50000, 13.540466 , 7.212524 , 0.012024 , 0.000000 ,  0.552363 
C#, mergesort_25000.sh, 25000, 12.932251 , 6.947083 , 0.015320 , 0.000000 ,  0.521141 
C#, mergesort_50000.sh, 50000, 14.478943 , 7.517639 , 0.016907 , 0.000000 ,  0.606768 
C#, oddevensort_25000.sh, 25000, 12.990295 , 7.011658 , 0.002502 , 0.000000 ,  0.52328 
C#, oddevensort_50000.sh, 50000, 13.744873 , 7.342041 , 0.013550 , 0.000000 ,  0.555245 
C#, quicksort_25000.sh, 25000, 12.943970 , 6.874512 , 0.024963 , 0.000000 ,  0.527239 
C#, quicksort_50000.sh, 50000, 14.483948 , 7.337952 , 0.013916 , 0.000000 ,  0.623364 
C#, selectionsort_25000.sh, 25000, 12.832397 , 6.797485 , 0.016052 , 0.000000 ,  0.527816 
C#, selectionsort_50000.sh, 50000, 14.057983 , 7.080688 , 0.015808 , 0.000000 ,  0.606287 
Go, bubblesort_25000.sh, 25000, 3.707336 , 1.914185 , 0.013611 , 0.000000 ,  0.151578 
Go, bubblesort_50000.sh, 50000, 5.218384 , 2.008118 , 0.009705 , 0.000000 ,  0.278337 
Go, cyclesort_25000.sh, 25000, 3.061218 , 1.500427 , 0.009338 , 0.000000 ,  0.134506 
Go, cyclesort_50000.sh, 50000, 4.455505 , 1.725525 , 0.012390 , 0.000000 ,  0.234101 
Go, heapsort_25000.sh, 25000, 3.420410 , 1.796326 , 0.009583 , 0.000000 ,  0.137319 
Go, heapsort_50000.sh, 50000, 4.075745 , 1.690796 , 0.010193 , 0.000000 ,  0.206032 
Go, insertionsort_25000.sh, 25000, 3.468567 , 1.658752 , 0.011780 , 0.000000 ,  0.153496 
Go, insertionsort_50000.sh, 50000, 6.661926 , 2.370605 , 0.012085 , 0.000000 ,  0.372121 
Go, mergesort_25000.sh, 25000, 3.086121 , 1.453125 , 0.010193 , 0.000000 ,  0.138389 
Go, mergesort_50000.sh, 50000, 4.598572 , 1.699585 , 0.008362 , 0.000000 ,  0.249063 
Go, oddevensort_25000.sh, 25000, 3.618225 , 1.795471 , 0.009216 , 0.000000 ,  0.155787 
Go, oddevensort_50000.sh, 50000, 6.094727 , 1.721375 , 0.019165 , 0.000000 ,  0.379543 
Go, quicksort_25000.sh, 25000, 3.297546 , 1.505371 , 0.015198 , 0.000000 ,  0.154621 
Go, quicksort_50000.sh, 50000, 3.868896 , 1.918945 , 0.009216 , 0.000000 ,  0.168693 
Go, selectionsort_25000.sh, 25000, 3.126526 , 1.470947 , 0.009399 , 0.000000 ,  0.142132 
Go, selectionsort_50000.sh, 50000, 3.800476 , 1.668884 , 0.009277 , 0.000000 ,  0.182505 
Haskell, bubblesort_25000.sh, 25000, 308.417114 , 162.488953 , 0.147034 , 0.000000 ,  12.4885 
Haskell, bubblesort_50000.sh, 50000, 607.136536 , 319.925903 , 0.246948 , 0.000000 ,  24.5774 
Haskell, cyclesort_25000.sh, 25000, 585.294128 , 308.123291 , 0.235840 , 0.000000 ,  23.7032 
Haskell, cyclesort_50000.sh, 50000, 1197.604065 , 631.360352 , 0.382019 , 0.000000 ,  48.4661 
Haskell, heapsort_25000.sh, 25000, 306.587097 , 161.920837 , 0.123169 , 0.000000 ,  12.3884 
Haskell, heapsort_50000.sh, 50000, 621.735046 , 327.733276 , 0.240051 , 0.000000 ,  25.1629 
Haskell, insertionsort_25000.sh, 25000, 303.679260 , 160.092163 , 0.128967 , 0.000000 ,  12.2834 
Haskell, insertionsort_50000.sh, 50000, 606.155762 , 319.339905 , 0.246887 , 0.000000 ,  24.5381 
Haskell, mergesort_25000.sh, 25000, 308.421143 , 162.739380 , 0.137695 , 0.000000 ,  12.4631 
Haskell, mergesort_50000.sh, 50000, 617.987244 , 325.464783 , 0.237122 , 0.000000 ,  25.0272 
Haskell, oddevensort_25000.sh, 25000, 285.103516 , 150.211487 , 0.146240 , 0.000000 ,  11.527 
Haskell, oddevensort_50000.sh, 50000, 565.435486 , 297.872864 , 0.208496 , 0.000000 ,  22.8758 
Haskell, quicksort_25000.sh, 25000, 306.624695 , 161.587769 , 0.128723 , 0.000000 ,  12.4186 
Haskell, quicksort_50000.sh, 50000, 611.231750 , 321.625244 , 0.243042 , 0.000000 ,  24.7912 
Haskell, selectionsort_25000.sh, 25000, 322.128113 , 169.914185 , 0.132629 , 0.000000 ,  13.0166 
Haskell, selectionsort_50000.sh, 50000, 646.793274 , 340.174866 , 0.231445 , 0.000000 ,  26.2171 
Rust, bubblesort_25000.sh, 25000, 235.676208 , 125.353638 , 0.104919 , 0.000000 ,  9.53936 
Rust, bubblesort_50000.sh, 50000, 478.145325 , 254.389832 , 0.183350 , 0.000000 ,  19.3303 
Rust, cyclesort_25000.sh, 25000, 227.219177 , 121.018555 , 0.106689 , 0.000000 ,  9.18302 
Rust, cyclesort_50000.sh, 50000, 490.367371 , 260.818359 , 0.206665 , 0.000000 ,  19.8418 
Rust, heapsort_25000.sh, 25000, 226.556152 , 120.658569 , 0.083435 , 0.000000 ,  9.16057 
Rust, heapsort_50000.sh, 50000, 463.682678 , 246.469360 , 0.195190 , 0.000000 ,  18.777 
Rust, insertionsort_25000.sh, 25000, 233.479065 , 124.166565 , 0.088135 , 0.000000 ,  9.45776 
Rust, insertionsort_50000.sh, 50000, 467.759399 , 249.078003 , 0.189392 , 0.000000 ,  18.904 
Rust, mergesort_25000.sh, 25000, 219.958557 , 117.126953 , 0.100891 , 0.000000 ,  8.89567 
Rust, mergesort_50000.sh, 50000, 463.699829 , 246.687378 , 0.179199 , 0.000000 ,  18.7552 
Rust, oddevensort_25000.sh, 25000, 226.337891 , 120.478333 , 0.105164 , 0.000000 ,  9.15738 
Rust, oddevensort_50000.sh, 50000, 481.921265 , 256.132019 , 0.203247 , 0.000000 ,  19.5085 
Rust, quicksort_25000.sh, 25000, 220.914673 , 117.720154 , 0.106934 , 0.000000 ,  8.92669 
Rust, quicksort_50000.sh, 50000, 455.424561 , 242.230164 , 0.187256 , 0.000000 ,  18.4277 
Rust, selectionsort_25000.sh, 25000, 228.576538 , 121.688599 , 0.106140 , 0.000000 ,  9.24716 
Rust, selectionsort_50000.sh, 50000, 495.618164 , 263.661255 , 0.187256 , 0.000000 ,  20.0517 
Swift, bubblesort_25000.sh, 25000, 338.452026 , 180.576965 , 0.109192 , 0.000000 ,  13.7835 
Swift, bubblesort_50000.sh, 50000, 1210.744019 , 648.216064 , 0.416443 , 0.000000 ,  49.0679 
Swift, cyclesort_25000.sh, 25000, 342.765076 , 183.079468 , 0.107483 , 0.000000 ,  13.9334 
Swift, cyclesort_50000.sh, 50000, 1201.158447 , 642.997681 , 0.390564 , 0.000000 ,  48.7425 
Swift, heapsort_25000.sh, 25000, 364.454224 , 194.684631 , 0.112183 , 0.000000 ,  14.8112 
Swift, heapsort_50000.sh, 50000, 1305.574585 , 698.514954 , 0.459351 , 0.000000 ,  52.9581 
Swift, insertionsort_25000.sh, 25000, 352.664307 , 188.065796 , 0.129089 , 0.000000 ,  14.3646 
Swift, insertionsort_50000.sh, 50000, 1220.704895 , 654.388611 , 0.425232 , 0.000000 ,  49.4686 
Swift, mergesort_25000.sh, 25000, 365.897095 , 195.334961 , 0.124878 , 0.000000 ,  14.8822 
Swift, mergesort_50000.sh, 50000, 1240.825989 , 664.584656 , 0.404785 , 0.000000 ,  50.3585 
Swift, oddevensort_25000.sh, 25000, 336.994873 , 179.925171 , 0.113342 , 0.000000 ,  13.7049 
Swift, oddevensort_50000.sh, 50000, 7.022522 , 3.204590 , 0.014709 , 0.000000 ,  0.332377 
Swift, quicksort_25000.sh, 25000, 355.910400 , 189.623718 , 0.147705 , 0.000000 ,  14.4979 
Swift, quicksort_50000.sh, 50000, 1282.126465 , 685.921692 , 0.425110 , 0.000000 ,  52.0616 
Swift, selectionsort_25000.sh, 25000, 340.277771 , 181.913269 , 0.118469 , 0.000000 ,  13.827 
Swift, selectionsort_50000.sh, 50000, 1225.691345 , 656.764465 , 0.415283 , 0.000000 ,  49.7046 
C, bubblesort_50000.sh, 50000, 3.472778 , 1.763306 , 0.016479 , 0.000000 ,  0.146761 
C, cyclesort_50000.sh, 50000, 3.445190 , 1.812073 , 0.017212 , 0.000000 ,  0.139438 
C, heapsort_50000.sh, 50000, 3.278687 , 1.711121 , 0.011963 , 0.000000 ,  0.134787 
C, insertionsort_50000.sh, 50000, 3.486145 , 1.679382 , 0.017151 , 0.000000 ,  0.156439 
C, mergesort_50000.sh, 50000, 3.411499 , 1.742920 , 0.016235 , 0.000000 ,  0.14424 
C, oddevensort_50000.sh, 50000, 3.500183 , 1.846619 , 0.018372 , 0.000000 ,  0.141977 
C, quicksort_50000.sh, 50000, 3.810425 , 2.001953 , 0.014709 , 0.000000 ,  0.156168 
C, selectionsort_50000.sh, 50000, 2.960205 , 1.528870 , 0.017822 , 0.000000 ,  0.12286 
C++, bubblesort_50000.sh, 50000, 12.604248 , 6.735596 , 0.016541 , 0.000000 ,  0.511251 
C++, cyclesort_50000.sh, 50000, 13.156128 , 7.081726 , 0.014282 , 0.000000 ,  0.529731 
C++, heapsort_50000.sh, 50000, 13.300842 , 7.066956 , 0.030212 , 0.000000 ,  0.539983 
C++, insertionsort_50000.sh, 50000, 12.384949 , 6.586304 , 0.014221 , 0.000000 ,  0.502312 
C++, mergesort_50000.sh, 50000, 13.795044 , 7.417786 , 0.026062 , 0.000000 ,  0.553109 
C++, oddevensort_50000.sh, 50000, 13.199829 , 7.030457 , 0.015015 , 0.000000 ,  0.53601 
C++, quicksort_50000.sh, 50000, 12.885193 , 6.912476 , 0.025024 , 0.000000 ,  0.519913 
C++, selectionsort_50000.sh, 50000, 12.612732 , 6.651611 , 0.018127 , 0.000000 ,  0.518202 
C#, bubblesort_50000.sh, 50000, 13.628540 , 7.344055 , 0.010986 , 0.000000 ,  0.548602 
C#, cyclesort_50000.sh, 50000, 14.047119 , 7.504639 , 0.013916 , 0.000000 ,  0.569101 
C#, heapsort_50000.sh, 50000, 13.669800 , 7.311768 , 0.005310 , 0.000000 ,  0.555177 
C#, insertionsort_50000.sh, 50000, 14.141174 , 7.537048 , 0.023071 , 0.000000 ,  0.574197 
C#, mergesort_50000.sh, 50000, 13.699463 , 7.339905 , 0.020996 , 0.000000 ,  0.55466 
C#, oddevensort_50000.sh, 50000, 14.118896 , 7.584045 , 0.017822 , 0.000000 ,  0.569515 
C#, quicksort_50000.sh, 50000, 13.625793 , 7.329163 , 0.004639 , 0.000000 ,  0.551856 
C#, selectionsort_50000.sh, 50000, 13.525146 , 7.116882 , 0.020752 , 0.000000 ,  0.556879 
Go, bubblesort_50000.sh, 50000, 3.372620 , 1.796204 , 0.000000 , 0.000000 ,  0.137323 
Go, cyclesort_50000.sh, 50000, 3.689575 , 1.848328 , 0.015503 , 0.000000 ,  0.155212 
Go, heapsort_50000.sh, 50000, 3.187988 , 1.363770 , 0.008972 , 0.000000 ,  0.157328 
Go, insertionsort_50000.sh, 50000, 3.467834 , 1.816467 , 0.009644 , 0.000000 ,  0.140743 
Go, mergesort_50000.sh, 50000, 3.674744 , 1.830200 , 0.016418 , 0.000000 ,  0.157082 
Go, oddevensort_50000.sh, 50000, 2.973816 , 1.305176 , 0.009216 , 0.000000 ,  0.142705 
Go, quicksort_50000.sh, 50000, 3.587219 , 1.728882 , 0.009277 , 0.000000 ,  0.158978 
Go, selectionsort_50000.sh, 50000, 3.644348 , 1.698853 , 0.014343 , 0.000000 ,  0.165298 
Haskell, bubblesort_50000.sh, 50000, 614.630554 , 323.897522 , 0.236755 , 0.000000 ,  24.8762 
Haskell, cyclesort_50000.sh, 50000, 1180.305176 , 622.322693 , 0.422546 , 0.000000 ,  47.7072 
Haskell, heapsort_50000.sh, 50000, 619.802185 , 326.324890 , 0.225037 , 0.000000 ,  25.114 
Haskell, insertionsort_50000.sh, 50000, 602.684998 , 317.449829 , 0.235596 , 0.000000 ,  24.3828 
Haskell, mergesort_50000.sh, 50000, 623.864929 , 328.851685 , 0.221375 , 0.000000 ,  25.2501 
Haskell, oddevensort_50000.sh, 50000, 576.577759 , 303.416199 , 0.255981 , 0.000000 ,  23.3543 
Haskell, quicksort_50000.sh, 50000, 607.327637 , 320.297058 , 0.219299 , 0.000000 ,  24.5608 
Haskell, selectionsort_50000.sh, 50000, 648.877747 , 342.231628 , 0.247986 , 0.000000 ,  26.2232 
Rust, bubblesort_50000.sh, 50000, 481.578491 , 256.265564 , 0.190186 , 0.000000 ,  19.4703 
Rust, cyclesort_50000.sh, 50000, 481.528687 , 255.917480 , 0.205017 , 0.000000 ,  19.4908 
Rust, heapsort_50000.sh, 50000, 483.029907 , 257.017334 , 0.188232 , 0.000000 ,  19.5421 
Rust, insertionsort_50000.sh, 50000, 475.082703 , 252.998596 , 0.175110 , 0.000000 ,  19.2115 
Rust, mergesort_50000.sh, 50000, 461.003174 , 245.433838 , 0.169861 , 0.000000 ,  18.6298 
Rust, oddevensort_50000.sh, 50000, 477.393250 , 254.063477 , 0.188171 , 0.000000 ,  19.2808 
Rust, quicksort_50000.sh, 50000, 478.734558 , 254.809937 , 0.191101 , 0.000000 ,  19.3611 
Rust, selectionsort_50000.sh, 50000, 467.317993 , 248.484680 , 0.184448 , 0.000000 ,  18.91 
Swift, bubblesort_50000.sh, 50000, 1215.546265 , 650.480713 , 0.382141 , 0.000000 ,  49.3065 
Swift, cyclesort_50000.sh, 50000, 1213.453430 , 649.811951 , 0.389404 , 0.000000 ,  49.2584 
Swift, heapsort_50000.sh, 50000, 1269.228088 , 678.577026 , 0.432251 , 0.000000 ,  51.5073 
Swift, insertionsort_50000.sh, 50000, 1203.256165 , 644.805725 , 0.397644 , 0.000000 ,  48.7568 
Swift, mergesort_50000.sh, 50000, 1235.981934 , 661.758423 , 0.393921 , 0.000000 ,  50.1585 
Swift, oddevensort_50000.sh, 50000, 6.671631 , 3.377563 , 0.002197 , 0.000000 ,  0.285732 
Swift, quicksort_50000.sh, 50000, 1232.797058 , 658.203674 , 0.361511 , 0.000000 ,  50.1935 
Swift, selectionsort_50000.sh, 50000, 1170.899109 , 626.723572 , 0.409241 , 0.000000 ,  47.5324 
C, bubblesort_50000.sh, 50000, 2.973999 , 1.402344 , 0.019531 , 0.000000 ,  0.134769 
C, cyclesort_50000.sh, 50000, 3.661621 , 1.881897 , 0.016724 , 0.000000 ,  0.153016 
C, heapsort_50000.sh, 50000, 3.684204 , 1.758789 , 0.016357 , 0.000000 ,  0.167919 
C, insertionsort_50000.sh, 50000, 2.869202 , 1.445129 , 0.011780 , 0.000000 ,  0.122472 
C, mergesort_50000.sh, 50000, 3.998047 , 2.094971 , 0.019653 , 0.000000 ,  0.164206 
C, oddevensort_50000.sh, 50000, 3.587463 , 1.771851 , 0.021912 , 0.000000 ,  0.156798 
C, quicksort_50000.sh, 50000, 3.301086 , 1.604126 , 0.016479 , 0.000000 ,  0.147277 
C, selectionsort_50000.sh, 50000, 2.895447 , 1.512329 , 0.007019 , 0.000000 ,  0.120007 
C++, bubblesort_50000.sh, 50000, 13.054871 , 6.944153 , 0.019287 , 0.000000 ,  0.529818 
C++, cyclesort_50000.sh, 50000, 13.496887 , 7.246155 , 0.021118 , 0.000000 ,  0.541962 
C++, heapsort_50000.sh, 50000, 13.183716 , 7.031982 , 0.026306 , 0.000000 ,  0.534949 
C++, insertionsort_50000.sh, 50000, 12.752319 , 6.779358 , 0.017700 , 0.000000 ,  0.521685 
C++, mergesort_50000.sh, 50000, 14.012512 , 7.482483 , 0.015747 , 0.000000 ,  0.568506 
C++, oddevensort_50000.sh, 50000, 12.817993 , 6.821899 , 0.015625 , 0.000000 ,  0.521789 
C++, quicksort_50000.sh, 50000, 13.123901 , 6.979004 , 0.011841 , 0.000000 ,  0.533573 
C++, selectionsort_50000.sh, 50000, 12.987671 , 6.873718 , 0.020630 , 0.000000 ,  0.532372 
C#, bubblesort_50000.sh, 50000, 13.554077 , 7.255310 , 0.002930 , 0.000000 ,  0.549583 
C#, cyclesort_50000.sh, 50000, 13.593018 , 7.279541 , 0.017517 , 0.000000 ,  0.549299 
C#, heapsort_50000.sh, 50000, 13.951416 , 7.418213 , 0.002563 , 0.000000 ,  0.569991 
C#, insertionsort_50000.sh, 50000, 13.718079 , 7.272278 , 0.025269 , 0.000000 ,  0.55883 
C#, mergesort_50000.sh, 50000, 13.887634 , 7.443481 , 0.000000 , 0.000000 ,  0.565654 
C#, oddevensort_50000.sh, 50000, 13.719299 , 7.373779 , 0.027039 , 0.000000 ,  0.552863 
C#, quicksort_50000.sh, 50000, 13.956909 , 7.362976 , 0.024414 , 0.000000 ,  0.573165 
C#, selectionsort_50000.sh, 50000, 13.864746 , 7.422974 , 0.009460 , 0.000000 ,  0.561996 
Go, bubblesort_50000.sh, 50000, 3.604858 , 1.883911 , 0.000000 , 0.000000 ,  0.149287 
Go, cyclesort_50000.sh, 50000, 3.554749 , 1.616943 , 0.016296 , 0.000000 ,  0.164668 
Go, heapsort_50000.sh, 50000, 3.042236 , 1.381348 , 0.011780 , 0.000000 ,  0.142478 
Go, insertionsort_50000.sh, 50000, 3.600098 , 1.846069 , 0.008240 , 0.000000 ,  0.149949 
Go, mergesort_50000.sh, 50000, 3.420593 , 1.599182 , 0.011108 , 0.000000 ,  0.157668 
Go, oddevensort_50000.sh, 50000, 3.109985 , 1.442444 , 0.009399 , 0.000000 ,  0.141581 
Go, quicksort_50000.sh, 50000, 3.692383 , 1.900391 , 0.010376 , 0.000000 ,  0.152435 
Go, selectionsort_50000.sh, 50000, 3.187012 , 1.619934 , 0.006409 , 0.000000 ,  0.135135 
Haskell, bubblesort_50000.sh, 50000, 605.530151 , 319.047791 , 0.242554 , 0.000000 ,  24.522 
Haskell, cyclesort_50000.sh, 50000, 1185.574707 , 624.654724 , 0.421204 , 0.000000 ,  47.9815 
Haskell, heapsort_50000.sh, 50000, 617.819214 , 325.828491 , 0.260376 , 0.000000 ,  24.9711 
Haskell, insertionsort_50000.sh, 50000, 601.913940 , 317.085144 , 0.230530 , 0.000000 ,  24.3563 
Haskell, mergesort_50000.sh, 50000, 619.613037 , 326.710815 , 0.232422 , 0.000000 ,  25.0564 
Haskell, oddevensort_50000.sh, 50000, 567.715271 , 298.643860 , 0.233887 , 0.000000 ,  22.9942 
Haskell, quicksort_50000.sh, 50000, 596.957275 , 314.482117 , 0.243286 , 0.000000 ,  24.1591 
Haskell, selectionsort_50000.sh, 50000, 636.233337 , 335.197510 , 0.256897 , 0.000000 ,  25.7244 
Rust, bubblesort_50000.sh, 50000, 473.322083 , 251.601257 , 0.179626 , 0.000000 ,  19.1412 
Rust, cyclesort_50000.sh, 50000, 490.663757 , 261.256653 , 0.184448 , 0.000000 ,  19.8346 
Rust, heapsort_50000.sh, 50000, 469.072937 , 249.464233 , 0.179321 , 0.000000 ,  18.9801 
Rust, insertionsort_50000.sh, 50000, 485.820923 , 258.383911 , 0.198608 , 0.000000 ,  19.6595 
Rust, mergesort_50000.sh, 50000, 470.242798 , 249.857483 , 0.192383 , 0.000000 ,  19.0421 
Rust, oddevensort_50000.sh, 50000, 478.353943 , 254.160889 , 0.190735 , 0.000000 ,  19.3603 
Rust, quicksort_50000.sh, 50000, 466.782959 , 248.331482 , 0.191162 , 0.000000 ,  18.881 
Rust, selectionsort_50000.sh, 50000, 476.606995 , 253.140991 , 0.174316 , 0.000000 ,  19.3047 
Swift, bubblesort_50000.sh, 50000, 1171.036865 , 627.835632 , 0.401489 , 0.000000 ,  47.444 
Swift, cyclesort_50000.sh, 50000, 1180.075684 , 632.300903 , 0.391785 , 0.000000 ,  47.8277 
Swift, heapsort_50000.sh, 50000, 1275.559326 , 682.791626 , 0.409607 , 0.000000 ,  51.7766 
Swift, insertionsort_50000.sh, 50000, 1192.126587 , 638.644653 , 0.383789 , 0.000000 ,  48.3414 
Swift, mergesort_50000.sh, 50000, 1246.224915 , 667.730225 , 0.377380 , 0.000000 ,  50.5209 
Swift, oddevensort_50000.sh, 50000, 6.448242 , 3.299072 , 0.006165 , 0.000000 ,  0.273877 
Swift, quicksort_50000.sh, 50000, 1247.651306 , 668.206238 , 0.414429 , 0.000000 ,  50.6016 
Swift, selectionsort_50000.sh, 50000, 1215.283142 , 651.382935 , 0.382935 , 0.000000 ,  49.2792 
C, bubblesort_50000.sh, 50000, 3.336426 , 1.709961 , 0.012817 , 0.000000 ,  0.139351 
C, cyclesort_50000.sh, 50000, 3.240417 , 1.677979 , 0.014771 , 0.000000 ,  0.135198 
C, heapsort_50000.sh, 50000, 3.724243 , 1.937622 , 0.016541 , 0.000000 ,  0.152394 
C, insertionsort_50000.sh, 50000, 2.905518 , 1.507507 , 0.014709 , 0.000000 ,  0.119939 
C, mergesort_50000.sh, 50000, 3.986511 , 2.088806 , 0.017395 , 0.000000 ,  0.162353 
C, oddevensort_50000.sh, 50000, 3.558044 , 1.874756 , 0.018433 , 0.000000 ,  0.145393 
C, quicksort_50000.sh, 50000, 3.325012 , 1.751343 , 0.016541 , 0.000000 ,  0.134573 
C, selectionsort_50000.sh, 50000, 2.920227 , 1.537354 , 0.007446 , 0.000000 ,  0.119968 
C++, bubblesort_50000.sh, 50000, 12.601624 , 6.722900 , 0.031677 , 0.000000 ,  0.509007 
C++, cyclesort_50000.sh, 50000, 13.486084 , 7.179993 , 0.016235 , 0.000000 ,  0.549237 
C++, heapsort_50000.sh, 50000, 13.017700 , 6.950684 , 0.014771 , 0.000000 ,  0.528633 
C++, insertionsort_50000.sh, 50000, 12.385376 , 6.544495 , 0.021118 , 0.000000 ,  0.508671 
C++, mergesort_50000.sh, 50000, 13.856079 , 7.369690 , 0.010925 , 0.000000 ,  0.562704 
C++, oddevensort_50000.sh, 50000, 12.850891 , 6.815430 , 0.030579 , 0.000000 ,  0.523505 
C++, quicksort_50000.sh, 50000, 12.695251 , 6.609558 , 0.015808 , 0.000000 ,  0.52746 
C++, selectionsort_50000.sh, 50000, 12.879272 , 6.861755 , 0.022156 , 0.000000 ,  0.521722 
C#, bubblesort_50000.sh, 50000, 13.926880 , 7.512085 , 0.002502 , 0.000000 ,  0.5616 
C#, cyclesort_50000.sh, 50000, 13.710083 , 7.302795 , 0.027954 , 0.000000 ,  0.5561 
C#, heapsort_50000.sh, 50000, 14.056458 , 7.549377 , 0.007385 , 0.000000 ,  0.56837 
C#, insertionsort_50000.sh, 50000, 13.571106 , 7.214722 , 0.012573 , 0.000000 ,  0.552445 
C#, mergesort_50000.sh, 50000, 13.606934 , 7.264648 , 0.016479 , 0.000000 ,  0.552378 
C#, oddevensort_50000.sh, 50000, 13.956238 , 7.393982 , 0.012939 , 0.000000 ,  0.569454 
C#, quicksort_50000.sh, 50000, 14.095154 , 7.541626 , 0.006470 , 0.000000 ,  0.570605 
C#, selectionsort_50000.sh, 50000, 13.500183 , 7.222534 , 0.015076 , 0.000000 ,  0.546312 
Go, bubblesort_50000.sh, 50000, 3.672668 , 1.750610 , 0.013977 , 0.000000 ,  0.164249 
Go, cyclesort_50000.sh, 50000, 3.107910 , 1.300476 , 0.008789 , 0.000000 ,  0.154649 
Go, heapsort_50000.sh, 50000, 3.446289 , 1.776428 , 0.009827 , 0.000000 ,  0.143181 
Go, insertionsort_50000.sh, 50000, 3.593811 , 1.721985 , 0.014832 , 0.000000 ,  0.160293 
Go, mergesort_50000.sh, 50000, 3.082092 , 1.366577 , 0.009521 , 0.000000 ,  0.146462 
Go, oddevensort_50000.sh, 50000, 3.560486 , 1.839478 , 0.010315 , 0.000000 ,  0.14711 
Go, quicksort_50000.sh, 50000, 3.559265 , 1.653625 , 0.023071 , 0.000000 ,  0.162495 
Go, selectionsort_50000.sh, 50000, 3.064697 , 1.508850 , 0.009644 , 0.000000 ,  0.133302 
Haskell, bubblesort_50000.sh, 50000, 620.765320 , 327.432739 , 0.231934 , 0.000000 ,  25.1137 
Haskell, cyclesort_50000.sh, 50000, 1179.955750 , 621.386536 , 0.401184 , 0.000000 ,  47.7725 
Haskell, heapsort_50000.sh, 50000, 614.578735 , 324.134705 , 0.270630 , 0.000000 ,  24.8509 
Haskell, insertionsort_50000.sh, 50000, 620.167053 , 327.151611 , 0.245361 , 0.000000 ,  25.074 
Haskell, mergesort_50000.sh, 50000, 619.172974 , 326.370605 , 0.251282 , 0.000000 ,  25.0407 
Haskell, oddevensort_50000.sh, 50000, 579.722656 , 305.408325 , 0.230835 , 0.000000 ,  23.4587 
Haskell, quicksort_50000.sh, 50000, 616.414062 , 325.035767 , 0.231445 , 0.000000 ,  24.9509 
Haskell, selectionsort_50000.sh, 50000, 643.380188 , 338.787292 , 0.258118 , 0.000000 ,  26.0515 
Rust, bubblesort_50000.sh, 50000, 470.119934 , 250.096191 , 0.169006 , 0.000000 ,  19.0157 
Rust, cyclesort_50000.sh, 50000, 469.351990 , 248.414612 , 0.177551 , 0.000000 ,  19.0911 
Rust, heapsort_50000.sh, 50000, 467.928467 , 247.651550 , 0.190796 , 0.000000 ,  19.0411 
Rust, insertionsort_50000.sh, 50000, 467.110474 , 247.599854 , 0.190857 , 0.000000 ,  18.9794 
Rust, mergesort_50000.sh, 50000, 468.014954 , 247.835876 , 0.221008 , 0.000000 ,  19.0176 
Rust, oddevensort_50000.sh, 50000, 485.699402 , 258.158875 , 0.208923 , 0.000000 ,  19.6492 
Rust, quicksort_50000.sh, 50000, 475.294189 , 253.063049 , 0.191528 , 0.000000 ,  19.2214 
Rust, selectionsort_50000.sh, 50000, 477.574402 , 254.212830 , 0.176453 , 0.000000 ,  19.3124 
Swift, bubblesort_50000.sh, 50000, 1203.423706 , 644.403748 , 0.414795 , 0.000000 ,  48.8139 
Swift, cyclesort_50000.sh, 50000, 1220.647034 , 653.365112 , 0.378906 , 0.000000 ,  49.5483 
Swift, heapsort_50000.sh, 50000, 1275.161377 , 682.776855 , 0.396729 , 0.000000 ,  51.777 
Swift, insertionsort_50000.sh, 50000, 1213.627686 , 649.672363 , 0.349426 , 0.000000 ,  49.2295 
Swift, mergesort_50000.sh, 50000, 1252.660767 , 670.933411 , 0.411438 , 0.000000 ,  50.7894 
Swift, oddevensort_50000.sh, 50000, 6.698608 , 3.437500 , 0.010864 , 0.000000 ,  0.28213 
Swift, quicksort_50000.sh, 50000, 1269.533081 , 679.449158 , 0.406799 , 0.000000 ,  51.512 
Swift, selectionsort_50000.sh, 50000, 1217.127197 , 652.119507 , 0.390381 , 0.000000 ,  49.3785 
C, bubblesort_50000.sh, 50000, 2.932251 , 1.456970 , 0.012878 , 0.000000 ,  0.126704 
C, cyclesort_50000.sh, 50000, 3.626526 , 1.872253 , 0.015808 , 0.000000 ,  0.150766 
C, heapsort_50000.sh, 50000, 3.706848 , 1.953857 , 0.019531 , 0.000000 ,  0.149444 
C, insertionsort_50000.sh, 50000, 2.876221 , 1.525574 , 0.010986 , 0.000000 ,  0.117362 
C, mergesort_50000.sh, 50000, 4.009827 , 2.083923 , 0.017090 , 0.000000 ,  0.164245 
C, oddevensort_50000.sh, 50000, 3.250000 , 1.697144 , 0.030151 , 0.000000 ,  0.132116 
C, quicksort_50000.sh, 50000, 3.585327 , 1.871033 , 0.015808 , 0.000000 ,  0.146677 
C, selectionsort_50000.sh, 50000, 3.433472 , 1.673096 , 0.014832 , 0.000000 ,  0.150546 
C++, bubblesort_50000.sh, 50000, 12.533386 , 6.666016 , 0.017456 , 0.000000 ,  0.510085 
C++, cyclesort_50000.sh, 50000, 12.634277 , 6.742859 , 0.028198 , 0.000000 ,  0.509346 
C++, heapsort_50000.sh, 50000, 12.778564 , 6.893372 , 0.013855 , 0.000000 ,  0.511776 
C++, insertionsort_50000.sh, 50000, 12.705200 , 6.780884 , 0.022705 , 0.000000 ,  0.514004 
C++, mergesort_50000.sh, 50000, 13.909058 , 7.403870 , 0.013916 , 0.000000 ,  0.565767 
C++, oddevensort_50000.sh, 50000, 12.852783 , 6.916748 , 0.022217 , 0.000000 ,  0.516085 
C++, quicksort_50000.sh, 50000, 13.295227 , 7.082397 , 0.023376 , 0.000000 ,  0.538056 
C++, selectionsort_50000.sh, 50000, 12.512695 , 6.612915 , 0.016418 , 0.000000 ,  0.51233 
C#, bubblesort_50000.sh, 50000, 13.577393 , 7.261841 , 0.007141 , 0.000000 ,  0.550857 
C#, cyclesort_50000.sh, 50000, 13.812866 , 7.404236 , 0.015320 , 0.000000 ,  0.55828 
C#, heapsort_50000.sh, 50000, 13.871399 , 7.428711 , 0.012817 , 0.000000 ,  0.562677 
C#, insertionsort_50000.sh, 50000, 13.551025 , 7.245361 , 0.013306 , 0.000000 ,  0.548894 
C#, mergesort_50000.sh, 50000, 13.798889 , 7.444763 , 0.002197 , 0.000000 ,  0.556501 
C#, oddevensort_50000.sh, 50000, 13.618713 , 7.302490 , 0.030945 , 0.000000 ,  0.546831 
C#, quicksort_50000.sh, 50000, 13.676208 , 7.339233 , 0.015381 , 0.000000 ,  0.552187 
C#, selectionsort_50000.sh, 50000, 14.003540 , 7.418030 , 0.026733 , 0.000000 ,  0.570678 
Go, bubblesort_50000.sh, 50000, 3.586853 , 1.795410 , 0.000000 , 0.000000 ,  0.155119 
Go, cyclesort_50000.sh, 50000, 3.626709 , 1.691467 , 0.009399 , 0.000000 ,  0.16592 
Go, heapsort_50000.sh, 50000, 3.149719 , 1.280212 , 0.021301 , 0.000000 ,  0.158704 
Go, insertionsort_50000.sh, 50000, 3.494080 , 1.749390 , 0.009521 , 0.000000 ,  0.147491 
Go, mergesort_50000.sh, 50000, 3.576721 , 1.695435 , 0.012207 , 0.000000 ,  0.161151 
Go, oddevensort_50000.sh, 50000, 3.015259 , 1.405273 , 0.009827 , 0.000000 ,  0.136285 
Go, quicksort_50000.sh, 50000, 3.655518 , 1.851440 , 0.010071 , 0.000000 ,  0.15373 
Go, selectionsort_50000.sh, 50000, 3.481873 , 1.522766 , 0.012634 , 0.000000 ,  0.167901 
Haskell, bubblesort_50000.sh, 50000, 621.509155 , 327.453186 , 0.263123 , 0.000000 ,  25.1675 
Haskell, cyclesort_50000.sh, 50000, 1181.046631 , 623.004639 , 0.407227 , 0.000000 ,  47.7371 
Haskell, heapsort_50000.sh, 50000, 608.620605 , 320.812561 , 0.233887 , 0.000000 ,  24.6265 
Haskell, insertionsort_50000.sh, 50000, 616.906433 , 325.290894 , 0.240173 , 0.000000 ,  24.9471 
Haskell, mergesort_50000.sh, 50000, 610.192078 , 321.815063 , 0.236084 , 0.000000 ,  24.6468 
Haskell, oddevensort_50000.sh, 50000, 569.817627 , 300.436462 , 0.222473 , 0.000000 ,  23.033 
Haskell, quicksort_50000.sh, 50000, 614.326294 , 324.288879 , 0.233704 , 0.000000 ,  24.8132 
Haskell, selectionsort_50000.sh, 50000, 635.638611 , 334.599060 , 0.269531 , 0.000000 ,  25.7191 
Rust, bubblesort_50000.sh, 50000, 473.212524 , 251.303467 , 0.189453 , 0.000000 ,  19.1601 
Rust, cyclesort_50000.sh, 50000, 467.623413 , 248.711487 , 0.188049 , 0.000000 ,  18.9227 
Rust, heapsort_50000.sh, 50000, 457.896057 , 243.818176 , 0.180908 , 0.000000 ,  18.5182 
Rust, insertionsort_50000.sh, 50000, 474.780884 , 252.845825 , 0.199280 , 0.000000 ,  19.1934 
Rust, mergesort_50000.sh, 50000, 459.953857 , 244.949524 , 0.174133 , 0.000000 ,  18.5897 
Rust, oddevensort_50000.sh, 50000, 483.051880 , 257.047546 , 0.200195 , 0.000000 ,  19.5162 
Rust, quicksort_50000.sh, 50000, 478.783203 , 254.959473 , 0.193665 , 0.000000 ,  19.3482 
Rust, selectionsort_50000.sh, 50000, 468.727783 , 249.322144 , 0.168762 , 0.000000 ,  18.9487 
Swift, bubblesort_50000.sh, 50000, 1215.061646 , 650.603333 , 0.408447 , 0.000000 ,  49.2626 
Swift, cyclesort_50000.sh, 50000, 1170.897644 , 626.756470 , 0.389282 , 0.000000 ,  47.5172 
Swift, heapsort_50000.sh, 50000, 1268.406677 , 677.976379 , 0.447327 , 0.000000 ,  51.5036 
Swift, insertionsort_50000.sh, 50000, 1198.622925 , 641.067749 , 0.420898 , 0.000000 ,  48.6733 
Swift, mergesort_50000.sh, 50000, 1271.944397 , 681.254089 , 0.408447 , 0.000000 ,  51.5659 
Swift, oddevensort_50000.sh, 50000, 6.963379 , 3.585205 , 0.025940 , 0.000000 ,  0.291179 
Swift, quicksort_50000.sh, 50000, 1215.860657 , 651.040649 , 0.353943 , 0.000000 ,  49.3713 
Swift, selectionsort_50000.sh, 50000, 1217.622498 , 652.166809 , 0.365723 , 0.000000 ,  49.415 
C, bubblesort_50000.sh, 50000, 2.932251 , 1.456970 , 0.012878 , 0.000000 ,  0.126704 
C, bubblesort_100000.sh, 100000, 5.671387 , 2.530579 , 0.019165 , 0.000000 ,  0.273309 
C, cyclesort_50000.sh, 50000, 3.626526 , 1.872253 , 0.015808 , 0.000000 ,  0.150766 
C, cyclesort_100000.sh, 100000, 5.607910 , 2.795288 , 0.022278 , 0.000000 ,  0.243252 
C, heapsort_50000.sh, 50000, 3.706848 , 1.953857 , 0.019531 , 0.000000 ,  0.149444 
C, heapsort_100000.sh, 100000, 5.581726 , 2.819153 , 0.017822 , 0.000000 ,  0.238577 
C, insertionsort_50000.sh, 50000, 2.876221 , 1.525574 , 0.010986 , 0.000000 ,  0.117362 
C, insertionsort_100000.sh, 100000, 5.195984 , 2.735168 , 0.018860 , 0.000000 ,  0.21329 
C, mergesort_50000.sh, 50000, 4.009827 , 2.083923 , 0.017090 , 0.000000 ,  0.164245 
C, mergesort_100000.sh, 100000, 6.278687 , 3.262878 , 0.011047 , 0.000000 ,  0.261903 
C, oddevensort_50000.sh, 50000, 3.250000 , 1.697144 , 0.030151 , 0.000000 ,  0.132116 
C, oddevensort_100000.sh, 100000, 5.062317 , 2.670471 , 0.019531 , 0.000000 ,  0.207037 
C, quicksort_50000.sh, 50000, 3.585327 , 1.871033 , 0.015808 , 0.000000 ,  0.146677 
C, quicksort_100000.sh, 100000, 5.391296 , 2.861938 , 0.013184 , 0.000000 ,  0.218784 
C, selectionsort_50000.sh, 50000, 3.433472 , 1.673096 , 0.014832 , 0.000000 ,  0.150546 
C, selectionsort_100000.sh, 100000, 5.022156 , 2.590820 , 0.016602 , 0.000000 ,  0.209584 
C++, bubblesort_50000.sh, 50000, 12.533386 , 6.666016 , 0.017456 , 0.000000 ,  0.510085 
C++, bubblesort_100000.sh, 100000, 15.688538 , 8.261719 , 0.033081 , 0.000000 ,  0.643452 
C++, cyclesort_50000.sh, 50000, 12.634277 , 6.742859 , 0.028198 , 0.000000 ,  0.509346 
C++, cyclesort_100000.sh, 100000, 16.151062 , 8.673279 , 0.013672 , 0.000000 ,  0.651292 
C++, heapsort_50000.sh, 50000, 12.778564 , 6.893372 , 0.013855 , 0.000000 ,  0.511776 
C++, heapsort_100000.sh, 100000, 15.288513 , 7.996338 , 0.020325 , 0.000000 ,  0.63395 
C++, insertionsort_50000.sh, 50000, 12.705200 , 6.780884 , 0.022705 , 0.000000 ,  0.514004 
C++, insertionsort_100000.sh, 100000, 15.084900 , 8.030579 , 0.023376 , 0.000000 ,  0.61184 
C++, mergesort_50000.sh, 50000, 13.909058 , 7.403870 , 0.013916 , 0.000000 ,  0.565767 
C++, mergesort_100000.sh, 100000, 16.697571 , 8.854797 , 0.016357 , 0.000000 ,  0.683237 
C++, oddevensort_50000.sh, 50000, 12.852783 , 6.916748 , 0.022217 , 0.000000 ,  0.516085 
C++, oddevensort_100000.sh, 100000, 15.245483 , 8.063232 , 0.010437 , 0.000000 ,  0.625152 
C++, quicksort_50000.sh, 50000, 13.295227 , 7.082397 , 0.023376 , 0.000000 ,  0.538056 
C++, quicksort_100000.sh, 100000, 16.326965 , 8.485229 , 0.032654 , 0.000000 ,  0.680532 
C++, selectionsort_50000.sh, 50000, 12.512695 , 6.612915 , 0.016418 , 0.000000 ,  0.51233 
C++, selectionsort_100000.sh, 100000, 15.341614 , 8.110413 , 0.017883 , 0.000000 ,  0.62899 
C#, bubblesort_50000.sh, 50000, 13.577393 , 7.261841 , 0.007141 , 0.000000 ,  0.550857 
C#, bubblesort_100000.sh, 100000, 14.809448 , 7.839417 , 0.014282 , 0.000000 ,  0.607416 
C#, cyclesort_50000.sh, 50000, 13.812866 , 7.404236 , 0.015320 , 0.000000 ,  0.55828 
C#, cyclesort_100000.sh, 100000, 15.351013 , 8.111206 , 0.006165 , 0.000000 ,  0.633783 
C#, heapsort_50000.sh, 50000, 13.871399 , 7.428711 , 0.012817 , 0.000000 ,  0.562677 
C#, heapsort_100000.sh, 100000, 15.216431 , 8.132019 , 0.014038 , 0.000000 ,  0.6187 
C#, insertionsort_50000.sh, 50000, 13.551025 , 7.245361 , 0.013306 , 0.000000 ,  0.548894 
C#, insertionsort_100000.sh, 100000, 15.271057 , 8.190308 , 0.004883 , 0.000000 ,  0.618846 
C#, mergesort_50000.sh, 50000, 13.798889 , 7.444763 , 0.002197 , 0.000000 ,  0.556501 
C#, mergesort_100000.sh, 100000, 14.936279 , 8.006836 , 0.022156 , 0.000000 ,  0.602982 
C#, oddevensort_50000.sh, 50000, 13.618713 , 7.302490 , 0.030945 , 0.000000 ,  0.546831 
C#, oddevensort_100000.sh, 100000, 15.779480 , 8.429016 , 0.015076 , 0.000000 ,  0.640044 
C#, quicksort_50000.sh, 50000, 13.676208 , 7.339233 , 0.015381 , 0.000000 ,  0.552187 
C#, quicksort_100000.sh, 100000, 15.274658 , 8.154602 , 0.028503 , 0.000000 ,  0.617975 
C#, selectionsort_50000.sh, 50000, 14.003540 , 7.418030 , 0.026733 , 0.000000 ,  0.570678 
C#, selectionsort_100000.sh, 100000, 15.640503 , 7.985901 , 0.013367 , 0.000000 ,  0.668453 
Go, bubblesort_50000.sh, 50000, 3.586853 , 1.795410 , 0.000000 , 0.000000 ,  0.155119 
Go, bubblesort_100000.sh, 100000, 4.762573 , 1.737732 , 0.014160 , 0.000000 ,  0.259966 
Go, cyclesort_50000.sh, 50000, 3.626709 , 1.691467 , 0.009399 , 0.000000 ,  0.16592 
Go, cyclesort_100000.sh, 100000, 3.810913 , 1.624329 , 0.010254 , 0.000000 ,  0.187692 
Go, heapsort_50000.sh, 50000, 3.149719 , 1.280212 , 0.021301 , 0.000000 ,  0.158704 
Go, heapsort_100000.sh, 100000, 3.662964 , 1.853088 , 0.009644 , 0.000000 ,  0.155321 
Go, insertionsort_50000.sh, 50000, 3.494080 , 1.749390 , 0.009521 , 0.000000 ,  0.147491 
Go, insertionsort_100000.sh, 100000, 4.482239 , 1.817810 , 0.013428 , 0.000000 ,  0.229087 
Go, mergesort_50000.sh, 50000, 3.576721 , 1.695435 , 0.012207 , 0.000000 ,  0.161151 
Go, mergesort_100000.sh, 100000, 3.932617 , 1.682678 , 0.011658 , 0.000000 ,  0.192855 
Go, oddevensort_50000.sh, 50000, 3.015259 , 1.405273 , 0.009827 , 0.000000 ,  0.136285 
Go, oddevensort_100000.sh, 100000, 3.817871 , 1.538025 , 0.010864 , 0.000000 ,  0.196312 
Go, quicksort_50000.sh, 50000, 3.655518 , 1.851440 , 0.010071 , 0.000000 ,  0.15373 
Go, quicksort_100000.sh, 100000, 3.503235 , 1.659912 , 0.008179 , 0.000000 ,  0.157761 
Go, selectionsort_50000.sh, 50000, 3.481873 , 1.522766 , 0.012634 , 0.000000 ,  0.167901 
Go, selectionsort_100000.sh, 100000, 4.136047 , 2.082947 , 0.011475 , 0.000000 ,  0.176106 
Haskell, bubblesort_50000.sh, 50000, 621.509155 , 327.453186 , 0.263123 , 0.000000 ,  25.1675 
Haskell, bubblesort_100000.sh, 100000, 1205.781128 , 634.922729 , 0.476257 , 0.000000 ,  48.8123 
Haskell, cyclesort_50000.sh, 50000, 1181.046631 , 623.004639 , 0.407227 , 0.000000 ,  47.7371 
Haskell, cyclesort_100000.sh, 100000, 2475.040100 , 1303.429199 , 0.843445 , 0.000000 ,  100.215 
Haskell, heapsort_50000.sh, 50000, 608.620605 , 320.812561 , 0.233887 , 0.000000 ,  24.6265 
Haskell, heapsort_100000.sh, 100000, 1238.778931 , 652.747314 , 0.407043 , 0.000000 ,  50.1563 
Haskell, insertionsort_50000.sh, 50000, 616.906433 , 325.290894 , 0.240173 , 0.000000 ,  24.9471 
Haskell, insertionsort_100000.sh, 100000, 1239.225281 , 653.709961 , 0.465576 , 0.000000 ,  50.0986 
Haskell, mergesort_50000.sh, 50000, 610.192078 , 321.815063 , 0.236084 , 0.000000 ,  24.6468 
Haskell, mergesort_100000.sh, 100000, 1243.761230 , 655.313660 , 0.442444 , 0.000000 ,  50.3308 
Haskell, oddevensort_50000.sh, 50000, 569.817627 , 300.436462 , 0.222473 , 0.000000 ,  23.033 
Haskell, oddevensort_100000.sh, 100000, 1144.255859 , 602.541931 , 0.414185 , 0.000000 ,  46.317 
Haskell, quicksort_50000.sh, 50000, 614.326294 , 324.288879 , 0.233704 , 0.000000 ,  24.8132 
Haskell, quicksort_100000.sh, 100000, 1212.379639 , 638.871887 , 0.442566 , 0.000000 ,  49.0546 
Haskell, selectionsort_50000.sh, 50000, 635.638611 , 334.599060 , 0.269531 , 0.000000 ,  25.7191 
Haskell, selectionsort_100000.sh, 100000, 1310.673584 , 689.990234 , 0.478333 , 0.000000 ,  53.0817 
Rust, bubblesort_50000.sh, 50000, 473.212524 , 251.303467 , 0.189453 , 0.000000 ,  19.1601 
Rust, bubblesort_100000.sh, 100000, 1014.967529 , 539.608032 , 0.375427 , 0.000000 ,  41.1002 
Rust, cyclesort_50000.sh, 50000, 467.623413 , 248.711487 , 0.188049 , 0.000000 ,  18.9227 
Rust, cyclesort_100000.sh, 100000, 966.417053 , 514.013611 , 0.387329 , 0.000000 ,  39.0906 
Rust, heapsort_50000.sh, 50000, 457.896057 , 243.818176 , 0.180908 , 0.000000 ,  18.5182 
Rust, heapsort_100000.sh, 100000, 943.860229 , 501.799438 , 0.353149 , 0.000000 ,  38.1718 
Rust, insertionsort_50000.sh, 50000, 474.780884 , 252.845825 , 0.199280 , 0.000000 ,  19.1934 
Rust, insertionsort_100000.sh, 100000, 989.209412 , 526.443787 , 0.348022 , 0.000000 ,  40.0212 
Rust, mergesort_50000.sh, 50000, 459.953857 , 244.949524 , 0.174133 , 0.000000 ,  18.5897 
Rust, mergesort_100000.sh, 100000, 948.042786 , 503.200073 , 0.378784 , 0.000000 ,  38.4201 
Rust, oddevensort_50000.sh, 50000, 483.051880 , 257.047546 , 0.200195 , 0.000000 ,  19.5162 
Rust, oddevensort_100000.sh, 100000, 967.179199 , 513.753235 , 0.363647 , 0.000000 ,  39.1599 
Rust, quicksort_50000.sh, 50000, 478.783203 , 254.959473 , 0.193665 , 0.000000 ,  19.3482 
Rust, quicksort_100000.sh, 100000, 913.353821 , 485.736572 , 0.334595 , 0.000000 ,  36.9684 
Rust, selectionsort_50000.sh, 50000, 468.727783 , 249.322144 , 0.168762 , 0.000000 ,  18.9487 
Rust, selectionsort_100000.sh, 100000, 964.384338 , 512.754822 , 0.374512 , 0.000000 ,  39.0235 
Swift, bubblesort_50000.sh, 50000, 1215.061646 , 650.603333 , 0.408447 , 0.000000 ,  49.2626 
Swift, bubblesort_100000.sh, 100000, 318.698242 , 163.298523 , 0.124451 , 0.000000 ,  13.3629 
Swift, cyclesort_50000.sh, 50000, 1170.897644 , 626.756470 , 0.389282 , 0.000000 ,  47.5172 
Swift, cyclesort_100000.sh, 100000, 317.949585 , 163.189026 , 0.117126 , 0.000000 ,  13.3057 
Swift, heapsort_50000.sh, 50000, 1268.406677 , 677.976379 , 0.447327 , 0.000000 ,  51.5036 
Swift, heapsort_100000.sh, 100000, 352.379211 , 180.675171 , 0.140381 , 0.000000 ,  14.7615 
Swift, insertionsort_50000.sh, 50000, 1198.622925 , 641.067749 , 0.420898 , 0.000000 ,  48.6733 
Swift, insertionsort_100000.sh, 100000, 323.874146 , 166.325562 , 0.110596 , 0.000000 ,  13.5575 
Swift, mergesort_50000.sh, 50000, 1271.944397 , 681.254089 , 0.408447 , 0.000000 ,  51.5659 
Swift, mergesort_100000.sh, 100000, 350.915710 , 180.589172 , 0.148987 , 0.000000 ,  14.6398 
Swift, oddevensort_50000.sh, 50000, 6.963379 , 3.585205 , 0.025940 , 0.000000 ,  0.291179 
Swift, oddevensort_100000.sh, 100000, 321.383118 , 164.818970 , 0.108398 , 0.000000 ,  13.471 
Swift, quicksort_50000.sh, 50000, 1215.860657 , 651.040649 , 0.353943 , 0.000000 ,  49.3713 
Swift, quicksort_100000.sh, 100000, 355.565491 , 182.438660 , 0.130432 , 0.000000 ,  14.8934 
Swift, selectionsort_50000.sh, 50000, 1217.622498 , 652.166809 , 0.365723 , 0.000000 ,  49.415 
Swift, selectionsort_100000.sh, 100000, 315.864014 , 161.842834 , 0.128540 , 0.000000 ,  13.2431 
C, bubblesort_100000.sh, 100000, 5.107178 , 2.593750 , 0.021118 , 0.000000 ,  0.215476 
C, cyclesort_100000.sh, 100000, 5.195312 , 2.765869 , 0.028748 , 0.000000 ,  0.207471 
C, heapsort_100000.sh, 100000, 4.893311 , 2.583252 , 0.016418 , 0.000000 ,  0.19831 
C, insertionsort_100000.sh, 100000, 5.097595 , 2.684631 , 0.016235 , 0.000000 ,  0.209142 
C, mergesort_100000.sh, 100000, 5.600769 , 2.906860 , 0.017883 , 0.000000 ,  0.23295 
C, oddevensort_100000.sh, 100000, 5.266113 , 2.677307 , 0.017151 , 0.000000 ,  0.224073 
C, quicksort_100000.sh, 100000, 5.512207 , 2.830872 , 0.015625 , 0.000000 ,  0.233068 
C, selectionsort_100000.sh, 100000, 5.162415 , 2.693787 , 0.011230 , 0.000000 ,  0.215669 
C++, bubblesort_100000.sh, 100000, 15.712280 , 8.377869 , 0.031555 , 0.000000 ,  0.635398 
C++, cyclesort_100000.sh, 100000, 15.501404 , 8.254761 , 0.018372 , 0.000000 ,  0.631489 
C++, heapsort_100000.sh, 100000, 15.752319 , 8.427979 , 0.023438 , 0.000000 ,  0.638806 
C++, insertionsort_100000.sh, 100000, 15.228821 , 8.113403 , 0.024902 , 0.000000 ,  0.618431 
C++, mergesort_100000.sh, 100000, 16.392944 , 8.761719 , 0.013550 , 0.000000 ,  0.66577 
C++, oddevensort_100000.sh, 100000, 15.165100 , 8.055115 , 0.026978 , 0.000000 ,  0.616523 
C++, quicksort_100000.sh, 100000, 16.277405 , 8.698853 , 0.031982 , 0.000000 ,  0.65753 
C++, selectionsort_100000.sh, 100000, 15.407410 , 8.133850 , 0.014282 , 0.000000 ,  0.63184 
C#, bubblesort_100000.sh, 100000, 14.948181 , 7.943420 , 0.024658 , 0.000000 ,  0.609253 
C#, cyclesort_100000.sh, 100000, 15.298340 , 8.200134 , 0.007507 , 0.000000 ,  0.620726 
C#, heapsort_100000.sh, 100000, 15.068176 , 8.087158 , 0.012878 , 0.000000 ,  0.609422 
C#, insertionsort_100000.sh, 100000, 15.265625 , 8.162109 , 0.011536 , 0.000000 ,  0.619409 
C#, mergesort_100000.sh, 100000, 15.069153 , 8.067139 , 0.027771 , 0.000000 ,  0.609729 
C#, oddevensort_100000.sh, 100000, 15.048340 , 8.086060 , 0.009705 , 0.000000 ,  0.608151 
C#, quicksort_100000.sh, 100000, 15.386047 , 8.211670 , 0.027771 , 0.000000 ,  0.621562 
C#, selectionsort_100000.sh, 100000, 14.971191 , 8.035950 , 0.006104 , 0.000000 ,  0.606188 
Go, bubblesort_100000.sh, 100000, 3.705933 , 1.850220 , 0.013062 , 0.000000 ,  0.157831 
Go, cyclesort_100000.sh, 100000, 3.074585 , 1.374329 , 0.009338 , 0.000000 ,  0.146023 
Go, heapsort_100000.sh, 100000, 3.678772 , 1.877197 , 0.009521 , 0.000000 ,  0.153796 
Go, insertionsort_100000.sh, 100000, 3.449768 , 1.673218 , 0.009644 , 0.000000 ,  0.151194 
Go, mergesort_100000.sh, 100000, 3.159973 , 1.421509 , 0.009277 , 0.000000 ,  0.148952 
Go, oddevensort_100000.sh, 100000, 3.661926 , 1.836975 , 0.012024 , 0.000000 ,  0.156238 
Go, quicksort_100000.sh, 100000, 3.402649 , 1.585510 , 0.013184 , 0.000000 ,  0.154482 
Go, selectionsort_100000.sh, 100000, 3.224060 , 1.600342 , 0.009644 , 0.000000 ,  0.139304 
Haskell, bubblesort_100000.sh, 100000, 1218.123169 , 641.512756 , 0.452820 , 0.000000 ,  49.3436 
Haskell, cyclesort_100000.sh, 100000, 2442.059570 , 1286.931641 , 0.863037 , 0.000000 ,  98.7728 
Haskell, heapsort_100000.sh, 100000, 1240.696411 , 653.284302 , 0.460632 , 0.000000 ,  50.2461 
Haskell, insertionsort_100000.sh, 100000, 1234.708252 , 650.945862 , 0.479980 , 0.000000 ,  49.9306 
Haskell, mergesort_100000.sh, 100000, 1240.391357 , 653.503296 , 0.453735 , 0.000000 ,  50.1816 
Haskell, oddevensort_100000.sh, 100000, 1152.995667 , 607.634888 , 0.415649 , 0.000000 ,  46.6486 
Haskell, quicksort_100000.sh, 100000, 1200.050781 , 632.461365 , 0.461365 , 0.000000 ,  48.5314 
Haskell, selectionsort_100000.sh, 100000, 1312.547180 , 691.686768 , 0.478088 , 0.000000 ,  53.0967 
Rust, bubblesort_100000.sh, 100000, 999.292969 , 531.195923 , 0.374329 , 0.000000 ,  40.4461 
Rust, cyclesort_100000.sh, 100000, 957.930420 , 509.356934 , 0.346863 , 0.000000 ,  38.7624 
Rust, heapsort_100000.sh, 100000, 944.798401 , 502.660645 , 0.370605 , 0.000000 ,  38.2171 
Rust, insertionsort_100000.sh, 100000, 982.980591 , 522.232483 , 0.355774 , 0.000000 ,  39.8307 
Rust, mergesort_100000.sh, 100000, 966.158325 , 514.378662 , 0.338074 , 0.000000 ,  39.0969 
Rust, oddevensort_100000.sh, 100000, 998.181763 , 531.177612 , 0.337463 , 0.000000 ,  40.3948 
Rust, quicksort_100000.sh, 100000, 913.543701 , 486.028992 , 0.363098 , 0.000000 ,  36.9688 
Rust, selectionsort_100000.sh, 100000, 948.774414 , 504.633118 , 0.350647 , 0.000000 ,  38.3631 
Swift, bubblesort_100000.sh, 100000, 317.224915 , 162.187195 , 0.140686 , 0.000000 ,  13.3228 
Swift, cyclesort_100000.sh, 100000, 323.262451 , 165.447876 , 0.145203 , 0.000000 ,  13.5656 
Swift, heapsort_100000.sh, 100000, 358.595520 , 183.878357 , 0.149536 , 0.000000 ,  15.0246 
Swift, insertionsort_100000.sh, 100000, 322.171997 , 164.979004 , 0.141968 , 0.000000 ,  13.5182 
Swift, mergesort_100000.sh, 100000, 351.996826 , 180.453247 , 0.132812 , 0.000000 ,  14.7518 
Swift, oddevensort_100000.sh, 100000, 317.408264 , 163.111023 , 0.141541 , 0.000000 ,  13.2631 
Swift, quicksort_100000.sh, 100000, 355.876831 , 182.224121 , 0.149719 , 0.000000 ,  14.931 
Swift, selectionsort_100000.sh, 100000, 317.958496 , 163.162842 , 0.139526 , 0.000000 ,  13.3059 
C, bubblesort_100000.sh, 100000, 4.948120 , 2.584351 , 0.018494 , 0.000000 ,  0.204187 
C, cyclesort_100000.sh, 100000, 5.461609 , 2.859009 , 0.015503 , 0.000000 ,  0.225002 
C, heapsort_100000.sh, 100000, 5.400391 , 2.828796 , 0.024475 , 0.000000 ,  0.222043 
C, insertionsort_100000.sh, 100000, 5.121643 , 2.673279 , 0.011597 , 0.000000 ,  0.211931 
C, mergesort_100000.sh, 100000, 5.813293 , 2.914795 , 0.014648 , 0.000000 ,  0.2504 
C, oddevensort_100000.sh, 100000, 5.050415 , 2.681946 , 0.009277 , 0.000000 ,  0.206554 
C, quicksort_100000.sh, 100000, 5.483521 , 2.895813 , 0.016418 , 0.000000 ,  0.223951 
C, selectionsort_100000.sh, 100000, 5.267578 , 2.759949 , 0.021545 , 0.000000 ,  0.214017 
C++, bubblesort_100000.sh, 100000, 15.562927 , 8.224976 , 0.016846 , 0.000000 ,  0.637979 
C++, cyclesort_100000.sh, 100000, 15.929688 , 8.491699 , 0.020935 , 0.000000 ,  0.647389 
C++, heapsort_100000.sh, 100000, 15.254700 , 8.012146 , 0.018005 , 0.000000 ,  0.62756 
C++, insertionsort_100000.sh, 100000, 15.583923 , 8.292908 , 0.013611 , 0.000000 ,  0.635506 
C++, mergesort_100000.sh, 100000, 16.506714 , 8.834290 , 0.028625 , 0.000000 ,  0.666182 
C++, oddevensort_100000.sh, 100000, 15.109070 , 8.115967 , 0.013855 , 0.000000 ,  0.609537 
C++, quicksort_100000.sh, 100000, 15.536499 , 8.235779 , 0.021240 , 0.000000 ,  0.635962 
C++, selectionsort_100000.sh, 100000, 15.065369 , 8.032898 , 0.013550 , 0.000000 ,  0.611919 
C#, bubblesort_100000.sh, 100000, 15.446716 , 8.228943 , 0.013367 , 0.000000 ,  0.629575 
C#, cyclesort_100000.sh, 100000, 14.632874 , 7.812195 , 0.002075 , 0.000000 ,  0.597638 
C#, heapsort_100000.sh, 100000, 15.545471 , 8.308655 , 0.016541 , 0.000000 ,  0.628692 
C#, insertionsort_100000.sh, 100000, 14.944702 , 8.005066 , 0.006470 , 0.000000 ,  0.606407 
C#, mergesort_100000.sh, 100000, 15.149048 , 8.064087 , 0.011963 , 0.000000 ,  0.615297 
C#, oddevensort_100000.sh, 100000, 14.875305 , 7.991333 , 0.006714 , 0.000000 ,  0.602242 
C#, quicksort_100000.sh, 100000, 15.433594 , 8.238525 , 0.019470 , 0.000000 ,  0.624847 
C#, selectionsort_100000.sh, 100000, 14.601990 , 7.783752 , 0.011780 , 0.000000 ,  0.593656 
Go, bubblesort_100000.sh, 100000, 3.648254 , 1.794800 , 0.008240 , 0.000000 ,  0.156187 
Go, cyclesort_100000.sh, 100000, 3.645264 , 1.632568 , 0.016907 , 0.000000 ,  0.172346 
Go, heapsort_100000.sh, 100000, 3.066528 , 1.384827 , 0.009033 , 0.000000 ,  0.143845 
Go, insertionsort_100000.sh, 100000, 3.696167 , 1.845642 , 0.009583 , 0.000000 ,  0.157504 
Go, mergesort_100000.sh, 100000, 3.293945 , 1.542236 , 0.011597 , 0.000000 ,  0.149903 
Go, oddevensort_100000.sh, 100000, 3.240845 , 1.619324 , 0.011963 , 0.000000 ,  0.139343 
Go, quicksort_100000.sh, 100000, 3.724060 , 1.813110 , 0.010376 , 0.000000 ,  0.162419 
Go, selectionsort_100000.sh, 100000, 3.262390 , 1.428162 , 0.012878 , 0.000000 ,  0.156874 
Haskell, bubblesort_100000.sh, 100000, 1206.276978 , 636.361389 , 0.425781 , 0.000000 ,  48.7753 
Haskell, cyclesort_100000.sh, 100000, 2432.059753 , 1281.155273 , 0.857910 , 0.000000 ,  98.3946 
Haskell, heapsort_100000.sh, 100000, 1200.825134 , 632.215820 , 0.436340 , 0.000000 ,  48.6197 
Haskell, insertionsort_100000.sh, 100000, -260929.475281 , 639.864319 , 0.440857 , 0.000000 ,  49.1448 
Haskell, mergesort_100000.sh, 100000, 1248.179871 , 657.526245 , 0.464661 , 0.000000 ,  50.5063 
Haskell, oddevensort_100000.sh, 100000, 1157.612915 , 609.626404 , 0.425964 , 0.000000 ,  46.8583 
Haskell, quicksort_100000.sh, 100000, 1227.733459 , 647.134888 , 0.423767 , 0.000000 ,  49.6869 
Haskell, selectionsort_100000.sh, 100000, 1294.991638 , 681.687012 , 0.446716 , 0.000000 ,  52.4349 
Rust, bubblesort_100000.sh, 100000, 996.955200 , 530.465820 , 0.366943 , 0.000000 ,  40.3178 
Rust, cyclesort_100000.sh, 100000, 991.379333 , 527.034180 , 0.359314 , 0.000000 ,  40.1401 
Rust, heapsort_100000.sh, 100000, 931.244507 , 494.916748 , 0.321228 , 0.000000 ,  37.718 
Rust, insertionsort_100000.sh, 100000, 969.271484 , 514.928406 , 0.363159 , 0.000000 ,  39.2537 
Rust, mergesort_100000.sh, 100000, 965.374329 , 513.731323 , 0.377563 , 0.000000 ,  39.0528 
Rust, oddevensort_100000.sh, 100000, 974.924316 , 518.536316 , 0.397095 , 0.000000 ,  39.4246 
Rust, quicksort_100000.sh, 100000, 926.746826 , 493.008179 , 0.363647 , 0.000000 ,  37.4999 
Rust, selectionsort_100000.sh, 100000, 991.158142 , 527.534302 , 0.404114 , 0.000000 ,  40.0833 
Swift, bubblesort_100000.sh, 100000, 322.059875 , 165.404236 , 0.159912 , 0.000000 ,  13.4639 
Swift, cyclesort_100000.sh, 100000, 322.649841 , 164.851257 , 0.107910 , 0.000000 ,  13.5763 
Swift, heapsort_100000.sh, 100000, 351.838257 , 179.954834 , 0.128967 , 0.000000 ,  14.786 
Swift, insertionsort_100000.sh, 100000, 317.303223 , 162.490234 , 0.121399 , 0.000000 ,  13.3134 
Swift, mergesort_100000.sh, 100000, 355.655457 , 182.350098 , 0.163513 , 0.000000 ,  14.9002 
Swift, oddevensort_100000.sh, 100000, 316.041931 , 162.246033 , 0.114380 , 0.000000 ,  13.2281 
Swift, quicksort_100000.sh, 100000, 349.703247 , 179.121338 , 0.146118 , 0.000000 ,  14.6625 
Swift, selectionsort_100000.sh, 100000, 321.611511 , 165.117798 , 0.147339 , 0.000000 ,  13.4502 
C, bubblesort_100000.sh, 100000, 4.757324 , 2.449036 , 0.018616 , 0.000000 ,  0.198699 
C, cyclesort_100000.sh, 100000, 5.229858 , 2.725952 , 0.025330 , 0.000000 ,  0.214881 
C, heapsort_100000.sh, 100000, 5.183655 , 2.778076 , 0.015442 , 0.000000 ,  0.209672 
C, insertionsort_100000.sh, 100000, 5.164429 , 2.724915 , 0.014343 , 0.000000 ,  0.210876 
C, mergesort_100000.sh, 100000, 5.653320 , 2.864197 , 0.015015 , 0.000000 ,  0.240816 
C, oddevensort_100000.sh, 100000, 5.245117 , 2.783997 , 0.011536 , 0.000000 ,  0.213037 
C, quicksort_100000.sh, 100000, 5.569397 , 2.953552 , 0.017029 , 0.000000 ,  0.225374 
C, selectionsort_100000.sh, 100000, 5.182983 , 2.700867 , 0.010376 , 0.000000 ,  0.216499 
C++, bubblesort_100000.sh, 100000, 15.781860 , 8.337646 , 0.029663 , 0.000000 ,  0.646393 
C++, cyclesort_100000.sh, 100000, 15.844360 , 8.525391 , 0.009338 , 0.000000 ,  0.636667 
C++, heapsort_100000.sh, 100000, 15.740784 , 8.282471 , 0.028442 , 0.000000 ,  0.648025 
C++, insertionsort_100000.sh, 100000, 15.157654 , 8.113586 , 0.010925 , 0.000000 ,  0.612782 
C++, mergesort_100000.sh, 100000, 16.667236 , 8.759888 , 0.021606 , 0.000000 ,  0.686441 
C++, oddevensort_100000.sh, 100000, 15.610718 , 8.319763 , 0.026611 , 0.000000 ,  0.632332 
C++, quicksort_100000.sh, 100000, 15.248718 , 8.107117 , 0.018738 , 0.000000 ,  0.619647 
C++, selectionsort_100000.sh, 100000, 15.517700 , 8.336426 , 0.009705 , 0.000000 ,  0.625113 
C#, bubblesort_100000.sh, 100000, 14.917725 , 7.936279 , 0.020203 , 0.000000 ,  0.605701 
C#, cyclesort_100000.sh, 100000, 15.263428 , 8.170166 , 0.017517 , 0.000000 ,  0.615889 
C#, heapsort_100000.sh, 100000, 15.188599 , 8.076721 , 0.014954 , 0.000000 ,  0.617728 
C#, insertionsort_100000.sh, 100000, 14.672668 , 7.871887 , 0.006165 , 0.000000 ,  0.594604 
C#, mergesort_100000.sh, 100000, 15.409912 , 8.218079 , 0.014709 , 0.000000 ,  0.626429 
C#, oddevensort_100000.sh, 100000, 14.799011 , 7.965393 , 0.004456 , 0.000000 ,  0.59717 
C#, quicksort_100000.sh, 100000, 15.744690 , 8.343201 , 0.023560 , 0.000000 ,  0.641287 
C#, selectionsort_100000.sh, 100000, 15.263123 , 8.203979 , 0.006470 , 0.000000 ,  0.61777 
Go, bubblesort_100000.sh, 100000, 3.636475 , 1.763062 , 0.010925 , 0.000000 ,  0.161349 
Go, cyclesort_100000.sh, 100000, 3.148682 , 1.454041 , 0.012512 , 0.000000 ,  0.145339 
Go, heapsort_100000.sh, 100000, 3.653687 , 1.810120 , 0.009888 , 0.000000 ,  0.158536 
Go, insertionsort_100000.sh, 100000, 3.613831 , 1.695251 , 0.011414 , 0.000000 ,  0.163606 
Go, mergesort_100000.sh, 100000, 3.037903 , 1.272217 , 0.009705 , 0.000000 ,  0.152524 
Go, oddevensort_100000.sh, 100000, 3.618958 , 1.818970 , 0.015625 , 0.000000 ,  0.152677 
Go, quicksort_100000.sh, 100000, 3.455505 , 1.635437 , 0.010681 , 0.000000 ,  0.157526 
Go, selectionsort_100000.sh, 100000, 3.146912 , 1.495056 , 0.009399 , 0.000000 ,  0.140773 
Haskell, bubblesort_100000.sh, 100000, 1211.764954 , 638.439758 , 0.411743 , 0.000000 ,  49.0448 
Haskell, cyclesort_100000.sh, 100000, 2448.922729 , 1290.019775 , 0.830566 , 0.000000 ,  99.1262 
Haskell, heapsort_100000.sh, 100000, 1215.292480 , 640.649780 , 0.429993 , 0.000000 ,  49.1514 
Haskell, insertionsort_100000.sh, 100000, 1237.551941 , 651.916809 , 0.427063 , 0.000000 ,  50.0904 
Haskell, mergesort_100000.sh, 100000, 1241.726501 , 654.416748 , 0.442566 , 0.000000 ,  50.2286 
Haskell, oddevensort_100000.sh, 100000, 1158.589539 , 609.333252 , 0.414062 , 0.000000 ,  46.9579 
Haskell, quicksort_100000.sh, 100000, 1198.838379 , 631.615662 , 0.463867 , 0.000000 ,  48.4916 
Haskell, selectionsort_100000.sh, 100000, 1314.943848 , 692.602234 , 0.477722 , 0.000000 ,  53.2242 
Rust, bubblesort_100000.sh, 100000, 952.103638 , 505.951538 , 0.360107 , 0.000000 ,  38.551 
Rust, cyclesort_100000.sh, 100000, 950.590332 , 505.532288 , 0.369934 , 0.000000 ,  38.4484 
Rust, heapsort_100000.sh, 100000, 974.798462 , 519.236694 , 0.373535 , 0.000000 ,  39.406 
Rust, insertionsort_100000.sh, 100000, 937.060181 , 498.304688 , 0.378845 , 0.000000 ,  37.8957 
Rust, mergesort_100000.sh, 100000, 924.612671 , 491.684631 , 0.365234 , 0.000000 ,  37.3858 
Rust, oddevensort_100000.sh, 100000, 1000.629211 , 531.632996 , 0.380798 , 0.000000 ,  40.5229 
Rust, quicksort_100000.sh, 100000, 925.822388 , 492.388306 , 0.364563 , 0.000000 ,  37.4587 
Rust, selectionsort_100000.sh, 100000, 957.656677 , 508.449158 , 0.379333 , 0.000000 ,  38.788 
Swift, bubblesort_100000.sh, 100000, 316.220642 , 161.941833 , 0.132690 , 0.000000 ,  13.2574 
Swift, cyclesort_100000.sh, 100000, 319.559387 , 163.729919 , 0.138794 , 0.000000 ,  13.4004 
Swift, heapsort_100000.sh, 100000, 358.208191 , 184.453735 , 0.154846 , 0.000000 ,  14.9442 
Swift, insertionsort_100000.sh, 100000, 322.400574 , 165.513489 , 0.138611 , 0.000000 ,  13.496 
Swift, mergesort_100000.sh, 100000, 351.571106 , 180.867615 , 0.134521 , 0.000000 ,  14.6769 
Swift, oddevensort_100000.sh, 100000, 317.824280 , 163.235474 , 0.125916 , 0.000000 ,  13.2912 
Swift, quicksort_100000.sh, 100000, 348.295105 , 178.674011 , 0.159241 , 0.000000 ,  14.5843 
Swift, selectionsort_100000.sh, 100000, 315.633911 , 161.925598 , 0.143677 , 0.000000 ,  13.2112 
C, bubblesort_100000.sh, 100000, 5.086975 , 2.604431 , 0.019531 , 0.000000 ,  0.213859 
C, cyclesort_100000.sh, 100000, 5.092651 , 2.714417 , 0.019470 , 0.000000 ,  0.205245 
C, heapsort_100000.sh, 100000, 4.914124 , 2.593506 , 0.017090 , 0.000000 ,  0.20099 
C, insertionsort_100000.sh, 100000, 5.226501 , 2.763855 , 0.028503 , 0.000000 ,  0.212588 
C, mergesort_100000.sh, 100000, 5.615417 , 2.926880 , 0.012451 , 0.000000 ,  0.234312 
C, oddevensort_100000.sh, 100000, 5.298645 , 2.714294 , 0.019043 , 0.000000 ,  0.224098 
C, quicksort_100000.sh, 100000, 5.628418 , 2.828552 , 0.012451 , 0.000000 ,  0.242775 
C, selectionsort_100000.sh, 100000, 5.500793 , 2.878113 , 0.031128 , 0.000000 ,  0.224723 
C++, bubblesort_100000.sh, 100000, 15.499695 , 8.197144 , 0.016418 , 0.000000 ,  0.632277 
C++, cyclesort_100000.sh, 100000, 15.350647 , 8.191772 , 0.022827 , 0.000000 ,  0.622353 
C++, heapsort_100000.sh, 100000, 15.758667 , 8.391357 , 0.023499 , 0.000000 ,  0.640447 
C++, insertionsort_100000.sh, 100000, 14.920593 , 7.882935 , 0.022217 , 0.000000 ,  0.611952 
C++, mergesort_100000.sh, 100000, 16.822021 , 8.920959 , 0.028809 , 0.000000 ,  0.686432 
C++, oddevensort_100000.sh, 100000, 15.661255 , 8.369446 , 0.025879 , 0.000000 ,  0.631875 
C++, quicksort_100000.sh, 100000, 15.112366 , 7.970703 , 0.014954 , 0.000000 ,  0.621565 
C++, selectionsort_100000.sh, 100000, 15.077515 , 8.072266 , 0.021240 , 0.000000 ,  0.609637 
C#, bubblesort_100000.sh, 100000, 15.344177 , 8.252625 , 0.008484 , 0.000000 ,  0.619357 
C#, cyclesort_100000.sh, 100000, 14.781250 , 7.895142 , 0.002197 , 0.000000 ,  0.60227 
C#, heapsort_100000.sh, 100000, 15.531311 , 8.207336 , 0.027649 , 0.000000 ,  0.634574 
C#, insertionsort_100000.sh, 100000, 14.940979 , 7.956116 , 0.014832 , 0.000000 ,  0.60808 
C#, mergesort_100000.sh, 100000, 15.301086 , 8.131897 , 0.023376 , 0.000000 ,  0.623163 
C#, oddevensort_100000.sh, 100000, 14.964722 , 8.042542 , 0.006104 , 0.000000 ,  0.602924 
C#, quicksort_100000.sh, 100000, 15.278931 , 8.094543 , 0.015015 , 0.000000 ,  0.624647 
C#, selectionsort_100000.sh, 100000, 14.726501 , 7.802673 , 0.024292 , 0.000000 ,  0.600927 
Go, bubblesort_100000.sh, 100000, 3.756958 , 1.931885 , 0.012756 , 0.000000 ,  0.154502 
Go, cyclesort_100000.sh, 100000, 3.448730 , 1.594543 , 0.010498 , 0.000000 ,  0.15914 
Go, heapsort_100000.sh, 100000, 3.189087 , 1.523560 , 0.009705 , 0.000000 ,  0.141427 
Go, insertionsort_100000.sh, 100000, 3.652771 , 1.823059 , 0.013733 , 0.000000 ,  0.15585 
Go, mergesort_100000.sh, 100000, 3.101013 , 1.446655 , 0.011414 , 0.000000 ,  0.14235 
Go, oddevensort_100000.sh, 100000, 3.424377 , 1.757263 , 0.009766 , 0.000000 ,  0.143663 
Go, quicksort_100000.sh, 100000, 3.617065 , 1.727966 , 0.007996 , 0.000000 ,  0.161964 
Go, selectionsort_100000.sh, 100000, 3.124512 , 1.407837 , 0.010376 , 0.000000 ,  0.146778 
Haskell, bubblesort_100000.sh, 100000, 1239.899902 , 653.364502 , 0.471924 , 0.000000 ,  50.1947 
Haskell, cyclesort_100000.sh, 100000, 2437.952148 , 1284.135254 , 0.800598 , 0.000000 ,  98.6497 
Haskell, heapsort_100000.sh, 100000, 1225.643860 , 645.670898 , 0.439270 , 0.000000 ,  49.6167 
Haskell, insertionsort_100000.sh, 100000, 1237.744141 , 651.868286 , 0.431030 , 0.000000 ,  50.1208 
Haskell, mergesort_100000.sh, 100000, 1238.012512 , 651.995728 , 0.416565 , 0.000000 ,  50.1315 
Haskell, oddevensort_100000.sh, 100000, 1139.643311 , 600.098755 , 0.393188 , 0.000000 ,  46.1563 
Haskell, quicksort_100000.sh, 100000, 1222.284973 , 643.444214 , 0.471313 , 0.000000 ,  49.5134 
Haskell, selectionsort_100000.sh, 100000, 1313.821594 , 692.866394 , 0.520325 , 0.000000 ,  53.0935 
Rust, bubblesort_100000.sh, 100000, 948.790344 , 503.892883 , 0.354248 , 0.000000 ,  38.4188 
Rust, cyclesort_100000.sh, 100000, 948.607300 , 504.436462 , 0.369141 , 0.000000 ,  38.3546 
Rust, heapsort_100000.sh, 100000, 951.486450 , 506.252563 , 0.346313 , 0.000000 ,  38.5027 
Rust, insertionsort_100000.sh, 100000, 982.138550 , 522.409363 , 0.328430 , 0.000000 ,  39.7539 
Rust, mergesort_100000.sh, 100000, 920.926819 , 489.939331 , 0.357544 , 0.000000 ,  37.2478 
Rust, oddevensort_100000.sh, 100000, 1011.516052 , 537.967834 , 0.390442 , 0.000000 ,  40.9244 
Rust, quicksort_100000.sh, 100000, 954.430603 , 508.539124 , 0.373718 , 0.000000 ,  38.587 
Rust, selectionsort_100000.sh, 100000, 964.366150 , 512.517700 , 0.348938 , 0.000000 ,  39.0566 
Swift, bubblesort_100000.sh, 100000, 317.114502 , 162.733643 , 0.127258 , 0.000000 ,  13.2776 
Swift, cyclesort_100000.sh, 100000, 317.354370 , 163.095032 , 0.147400 , 0.000000 ,  13.2662 
Swift, heapsort_100000.sh, 100000, 353.569031 , 181.663330 , 0.147888 , 0.000000 ,  14.7787 
Swift, insertionsort_100000.sh, 100000, 316.955078 , 162.708984 , 0.131409 , 0.000000 ,  13.2602 
Swift, mergesort_100000.sh, 100000, 350.041504 , 179.172363 , 0.132507 , 0.000000 ,  14.6896 
Swift, oddevensort_100000.sh, 100000, 315.292908 , 161.662964 , 0.132690 , 0.000000 ,  13.206 
Swift, quicksort_100000.sh, 100000, 354.629211 , 181.457764 , 0.136108 , 0.000000 ,  14.8915 
Swift, selectionsort_100000.sh, 100000, 315.895569 , 161.858948 , 0.114319 , 0.000000 ,  13.2438 
