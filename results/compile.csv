Language , Program , Input Size , Package , Core(s) , GPU , DRAM? , Time (sec)
C, bubblesort_50000.sh, 50000, 3.343323 , 2.050720 , 0.062012 , 0.000000 , 42876, 0.28896 
C, cyclesort_50000.sh, 50000, 3.601624 , 2.340393 , 0.072083 , 0.000000 , 43396, 0.278547 
C, heapsort_50000.sh, 50000, 3.469482 , 2.265686 , 0.054993 , 0.000000 , 42740, 0.2688 
C, insertionsort_50000.sh, 50000, 3.256348 , 2.257874 , 0.040344 , 0.000000 , 42008, 0.223805 
C, mergesort_50000.sh, 50000, 3.730225 , 2.347229 , 0.108215 , 0.000000 , 44264, 0.299598 
C, oddevensort_50000.sh, 50000, 3.362366 , 2.332825 , 0.047729 , 0.000000 , 43356, 0.230347 
C, quicksort_50000.sh, 50000, 3.379333 , 2.322327 , 0.039429 , 0.000000 , 43024, 0.237669 
C, selectionsort_50000.sh, 50000, 3.416992 , 2.206726 , 0.050537 , 0.000000 , 42684, 0.272105 
C++, bubblesort_50000.sh, 50000, 36.087463 , 15.354187 , 0.081055 , 0.000000 , 97836, 3.60333 
C++, cyclesort_50000.sh, 50000, 16.531311 , 7.117004 , 0.056519 , 0.000000 , 98160, 0.96763 
C++, heapsort_50000.sh, 50000, 20.242249 , 8.613586 , 0.062744 , 0.000000 , 99212, 0.985998 
C++, insertionsort_50000.sh, 50000, 24.478516 , 6.498291 , 0.043396 , 0.000000 , 97656, 1.53333 
C++, mergesort_50000.sh, 50000, 38.513489 , 7.408875 , 0.060852 , 0.000000 , 101692, 2.65456 
C++, oddevensort_50000.sh, 50000, 34.583618 , 6.729187 , 0.047791 , 0.000000 , 98024, 2.3754 
C++, quicksort_50000.sh, 50000, 34.662842 , 6.740723 , 0.049133 , 0.000000 , 98404, 2.3823 
C++, selectionsort_50000.sh, 50000, 33.551880 , 6.564453 , 0.045654 , 0.000000 , 97664, 2.30177 
C#, bubblesort_50000.sh, 50000, 72.578125 , 13.502930 , 0.054749 , 0.000000 , 69424, 5.05382 
C#, cyclesort_50000.sh, 50000, 36.666077 , 7.300598 , 0.038208 , 0.000000 , 65372, 2.50793 
C#, heapsort_50000.sh, 50000, 36.735962 , 7.302673 , 0.040344 , 0.000000 , 69492, 2.51484 
C#, insertionsort_50000.sh, 50000, 36.515442 , 7.299500 , 0.039429 , 0.000000 , 65876, 2.4968 
C#, mergesort_50000.sh, 50000, 36.016052 , 7.130737 , 0.033142 , 0.000000 , 67796, 2.46972 
C#, oddevensort_50000.sh, 50000, 36.239319 , 7.194458 , 0.035156 , 0.000000 , 69444, 2.48222 
C#, quicksort_50000.sh, 50000, 37.176697 , 7.321655 , 0.033447 , 0.000000 , 63768, 2.55307 
C#, selectionsort_50000.sh, 50000, 36.149841 , 7.205139 , 0.036194 , 0.000000 , 65312, 2.47555 
Go, bubblesort_50000.sh, 50000, 66.266846 , 12.099182 , 0.049377 , 0.000000 , 55396, 4.63182 
Go, cyclesort_50000.sh, 50000, 8.564209 , 1.808899 , 0.018799 , 0.000000 , 57012, 0.573689 
Go, heapsort_50000.sh, 50000, 8.559998 , 1.819275 , 0.025696 , 0.000000 , 54988, 0.572481 
Go, insertionsort_50000.sh, 50000, 8.709900 , 1.818115 , 0.026672 , 0.000000 , 57592, 0.584688 
Go, mergesort_50000.sh, 50000, 8.116882 , 1.693054 , 0.024658 , 0.000000 , 55692, 0.544612 
Go, oddevensort_50000.sh, 50000, 9.372192 , 1.965759 , 0.024414 , 0.000000 , 56260, 0.628315 
Go, quicksort_50000.sh, 50000, 8.076294 , 1.661621 , 0.020264 , 0.000000 , 54804, 0.544772 
Go, selectionsort_50000.sh, 50000, 8.289734 , 1.763428 , 0.030396 , 0.000000 , 54156, 0.552502 
Haskell, bubblesort_50000.sh, 50000, 1486.370300 , 292.938843 , 0.435913 , 0.000000 , 972368, 101.495 
Haskell, cyclesort_50000.sh, 50000, 2618.485474 , 524.294067 , 0.675171 , 0.000000 , 1037168, 178.015 
Haskell, heapsort_50000.sh, 50000, 1395.611206 , 277.911316 , 0.383789 , 0.000000 , 1005420, 95.0574 
Haskell, insertionsort_50000.sh, 50000, 1378.365479 , 273.747375 , 0.346313 , 0.000000 , 1117444, 93.9509 
Haskell, mergesort_50000.sh, 50000, 1377.014465 , 275.141907 , 0.390259 , 0.000000 , 1085348, 94.1398 
Haskell, oddevensort_50000.sh, 50000, 1251.411804 , 253.659424 , 0.436584 , 0.000000 , 1194064, 86.6363 
Haskell, quicksort_50000.sh, 50000, 1352.423157 , 273.731812 , 0.470825 , 0.000000 , 1062792, 93.7097 
Haskell, selectionsort_50000.sh, 50000, 1388.540344 , 282.148682 , 0.459900 , 0.000000 , 1009632, 96.0661 
Rust, bubblesort_50000.sh, 50000, 1230.213013 , 245.958130 , 0.460083 , 0.000000 , 2161784, 85.4836 
Rust, cyclesort_50000.sh, 50000, 1070.758484 , 218.268127 , 0.386963 , 0.000000 , 2173344, 73.9767 
Rust, heapsort_50000.sh, 50000, 1076.738464 , 218.692871 , 0.412048 , 0.000000 , 2172764, 74.4746 
Rust, insertionsort_50000.sh, 50000, 1056.697266 , 215.633362 , 0.386292 , 0.000000 , 2174140, 72.9782 
Rust, mergesort_50000.sh, 50000, 1050.345703 , 214.306702 , 0.399597 , 0.000000 , 2213392, 72.5335 
Rust, oddevensort_50000.sh, 50000, 1059.502869 , 216.597290 , 0.386841 , 0.000000 , 2165012, 73.1497 
Rust, quicksort_50000.sh, 50000, 1047.069275 , 212.963989 , 0.387817 , 0.000000 , 2182816, 72.3843 
Rust, selectionsort_50000.sh, 50000, 1073.780762 , 218.693420 , 0.398499 , 0.000000 , 2168904, 74.2067 
Swift, bubblesort_50000.sh, 50000, 3045.926208 , 617.894470 , 1.034180 , 0.000000 , 212836, 212.042 
Swift, cyclesort_50000.sh, 50000, 2972.313660 , 602.717041 , 1.004028 , 0.000000 , 222304, 206.891 
Swift, heapsort_50000.sh, 50000, 3125.491760 , 634.361877 , 1.047058 , 0.000000 , 225880, 217.502 
Swift, insertionsort_50000.sh, 50000, 3067.297668 , 620.628845 , 1.043884 , 0.000000 , 222748, 213.405 
Swift, mergesort_50000.sh, 50000, 3178.104736 , 644.620789 , 1.035034 , 0.000000 , 224128, 221.097 
Swift, oddevensort_50000.sh, 50000, 16.228821 , 3.252380 , 0.019348 , 0.000000 , 89300, 1.1303 
Swift, quicksort_50000.sh, 50000, 3128.194031 , 635.646912 , 1.009460 , 0.000000 , 223440, 217.627 
Swift, selectionsort_50000.sh, 50000, 2974.807190 , 603.310547 , 0.965454 , 0.000000 , 223844, 207.075 
C, bubblesort_50000.sh, 50000, 7.950012 , 1.574585 , 0.017456 , 0.000000 , 43044, 0.555182 
C, cyclesort_50000.sh, 50000, 9.019165 , 1.838867 , 0.015198 , 0.000000 , 43408, 0.625595 
C, heapsort_50000.sh, 50000, 8.703125 , 1.789856 , 0.014771 , 0.000000 , 42916, 0.601475 
C, insertionsort_50000.sh, 50000, 8.344116 , 1.653503 , 0.012939 , 0.000000 , 42248, 0.58246 
C, mergesort_50000.sh, 50000, 9.594421 , 1.948669 , 0.019775 , 0.000000 , 44524, 0.664876 
C, oddevensort_50000.sh, 50000, 8.659790 , 1.779846 , 0.014648 , 0.000000 , 43452, 0.598579 
C, quicksort_50000.sh, 50000, 9.417908 , 1.912659 , 0.015442 , 0.000000 , 43144, 0.653597 
C, selectionsort_50000.sh, 50000, 8.151794 , 1.657043 , 0.013000 , 0.000000 , 42784, 0.565959 
C++, bubblesort_50000.sh, 50000, 32.991943 , 6.636108 , 0.028259 , 0.000000 , 101208, 2.29936 
C++, cyclesort_50000.sh, 50000, 33.205078 , 6.644653 , 0.034851 , 0.000000 , 101560, 2.31589 
C++, heapsort_50000.sh, 50000, 31.829163 , 6.398438 , 0.028809 , 0.000000 , 100692, 2.21804 
C++, insertionsort_50000.sh, 50000, 32.216614 , 6.467346 , 0.028137 , 0.000000 , 98664, 2.24513 
C++, mergesort_50000.sh, 50000, 35.346130 , 7.063904 , 0.032043 , 0.000000 , 104320, 2.46615 
C++, oddevensort_50000.sh, 50000, 32.552673 , 6.530212 , 0.028076 , 0.000000 , 102436, 2.27001 
C++, quicksort_50000.sh, 50000, 31.355042 , 6.320618 , 0.028809 , 0.000000 , 102640, 2.18278 
C++, selectionsort_50000.sh, 50000, 32.266724 , 6.498657 , 0.030457 , 0.000000 , 102600, 2.24659 
C#, bubblesort_50000.sh, 50000, 35.051086 , 7.015686 , 0.024597 , 0.000000 , 71760, 2.44724 
C#, cyclesort_50000.sh, 50000, 35.843628 , 7.173096 , 0.027405 , 0.000000 , 67660, 2.5025 
C#, heapsort_50000.sh, 50000, 35.697266 , 7.201355 , 0.019226 , 0.000000 , 67780, 2.4896 
C#, insertionsort_50000.sh, 50000, 35.840332 , 7.181152 , 0.027161 , 0.000000 , 65588, 2.50157 
C#, mergesort_50000.sh, 50000, 35.671875 , 7.130310 , 0.026062 , 0.000000 , 67716, 2.49176 
C#, oddevensort_50000.sh, 50000, 34.913818 , 7.072021 , 0.025391 , 0.000000 , 69684, 2.43133 
C#, quicksort_50000.sh, 50000, 35.921753 , 7.125916 , 0.024658 , 0.000000 , 67716, 2.5148 
C#, selectionsort_50000.sh, 50000, 35.504272 , 7.069580 , 0.025574 , 0.000000 , 69636, 2.48337 
Go, bubblesort_50000.sh, 50000, 7.938354 , 1.739380 , 0.008240 , 0.000000 , 56616, 0.538466 
Go, cyclesort_50000.sh, 50000, 7.566101 , 1.610474 , 0.009888 , 0.000000 , 57124, 0.518336 
Go, heapsort_50000.sh, 50000, 7.795715 , 1.679871 , 0.010803 , 0.000000 , 58616, 0.53058 
Go, insertionsort_50000.sh, 50000, 8.445862 , 1.784668 , 0.007935 , 0.000000 , 55576, 0.577952 
Go, mergesort_50000.sh, 50000, 7.761658 , 1.664185 , 0.011047 , 0.000000 , 56580, 0.528523 
Go, oddevensort_50000.sh, 50000, 7.751099 , 1.652588 , 0.007996 , 0.000000 , 54704, 0.529218 
Go, quicksort_50000.sh, 50000, 7.790405 , 1.677002 , 0.010315 , 0.000000 , 54348, 0.530412 
Go, selectionsort_50000.sh, 50000, 7.756470 , 1.678040 , 0.009277 , 0.000000 , 56712, 0.527744 
Haskell, bubblesort_50000.sh, 50000, 1323.566711 , 268.076965 , 0.468872 , 0.000000 , 1108852, 91.6337 
Haskell, cyclesort_50000.sh, 50000, 2590.283020 , 524.989990 , 0.847900 , 0.000000 , 1185348, 179.325 
Haskell, heapsort_50000.sh, 50000, 1360.467468 , 275.729309 , 0.479126 , 0.000000 , 1110092, 94.1835 
Haskell, insertionsort_50000.sh, 50000, 1337.782227 , 271.459351 , 0.473206 , 0.000000 , 1136664, 92.5734 
Haskell, mergesort_50000.sh, 50000, 1330.686646 , 269.871033 , 0.478088 , 0.000000 , 1020116, 92.0668 
Haskell, oddevensort_50000.sh, 50000, 1250.005371 , 252.647827 , 0.445068 , 0.000000 , 1115412, 86.5988 
Haskell, quicksort_50000.sh, 50000, 1337.519348 , 270.761230 , 0.487183 , 0.000000 , 1062124, 92.6333 
Haskell, selectionsort_50000.sh, 50000, 1401.859497 , 283.724609 , 0.508362 , 0.000000 , 1011004, 97.0537 
Rust, bubblesort_50000.sh, 50000, 1110.416626 , 226.252014 , 0.412842 , 0.000000 , 2173548, 76.7362 
Rust, cyclesort_50000.sh, 50000, 1068.164551 , 217.574158 , 0.386475 , 0.000000 , 2173416, 73.8148 
Rust, heapsort_50000.sh, 50000, 1051.674927 , 214.520752 , 0.396362 , 0.000000 , 2152612, 72.6142 
Rust, insertionsort_50000.sh, 50000, 1058.229309 , 215.629578 , 0.389832 , 0.000000 , 2150800, 73.1128 
Rust, mergesort_50000.sh, 50000, 1064.883057 , 217.532288 , 0.387634 , 0.000000 , 2169720, 73.5253 
Rust, oddevensort_50000.sh, 50000, 1069.277832 , 218.068298 , 0.408569 , 0.000000 , 2185676, 73.8457 
Rust, quicksort_50000.sh, 50000, 1043.616089 , 213.070740 , 0.390686 , 0.000000 , 2198324, 72.0344 
Rust, selectionsort_50000.sh, 50000, 1085.792175 , 222.021057 , 0.399902 , 0.000000 , 2170844, 74.9214 
Swift, bubblesort_50000.sh, 50000, 2955.107727 , 600.499390 , 0.957642 , 0.000000 , 246676, 205.632 
Swift, cyclesort_50000.sh, 50000, 3032.882690 , 614.931946 , 1.010864 , 0.000000 , 255376, 211.079 
Swift, heapsort_50000.sh, 50000, 3118.986328 , 633.459412 , 1.025940 , 0.000000 , 259212, 216.971 
Swift, insertionsort_50000.sh, 50000, 2977.872925 , 605.289001 , 0.975281 , 0.000000 , 255776, 207.087 
Swift, mergesort_50000.sh, 50000, 3115.744446 , 633.578857 , 1.014954 , 0.000000 , 257352, 216.697 
Swift, oddevensort_50000.sh, 50000, 15.786133 , 3.183838 , 0.018005 , 0.000000 , 118556, 1.099 
Swift, quicksort_50000.sh, 50000, 3084.725403 , 627.625244 , 1.018250 , 0.000000 , 257116, 214.58 
Swift, selectionsort_50000.sh, 50000, 2967.413879 , 602.992126 , 0.949402 , 0.000000 , 256348, 206.378 
C, bubblesort_50000.sh, 50000, 8.167847 , 1.644653 , 0.016113 , 0.000000 , 43048, 0.568201 
C, cyclesort_50000.sh, 50000, 9.061951 , 1.859192 , 0.012817 , 0.000000 , 43560, 0.627841 
C, heapsort_50000.sh, 50000, 8.942078 , 1.827454 , 0.020203 , 0.000000 , 42632, 0.618772 
C, insertionsort_50000.sh, 50000, 8.305725 , 1.642151 , 0.016602 , 0.000000 , 42244, 0.579605 
C, mergesort_50000.sh, 50000, 9.576660 , 1.908020 , 0.014221 , 0.000000 , 44400, 0.667636 
C, oddevensort_50000.sh, 50000, 9.024902 , 1.795166 , 0.020569 , 0.000000 , 43528, 0.629003 
C, quicksort_50000.sh, 50000, 9.259399 , 1.867676 , 0.015869 , 0.000000 , 43272, 0.644606 
C, selectionsort_50000.sh, 50000, 8.223450 , 1.665710 , 0.015259 , 0.000000 , 42760, 0.570938 
C++, bubblesort_50000.sh, 50000, 31.329529 , 6.252808 , 0.030090 , 0.000000 , 103688, 2.18742 
C++, cyclesort_50000.sh, 50000, 33.310120 , 6.656799 , 0.029846 , 0.000000 , 102380, 2.32346 
C++, heapsort_50000.sh, 50000, 33.026428 , 6.626465 , 0.029907 , 0.000000 , 103748, 2.3017 
C++, insertionsort_50000.sh, 50000, 31.976196 , 6.386353 , 0.031189 , 0.000000 , 102212, 2.23106 
C++, mergesort_50000.sh, 50000, 34.782104 , 6.954712 , 0.030151 , 0.000000 , 104608, 2.4264 
C++, oddevensort_50000.sh, 50000, 32.568787 , 6.550598 , 0.029968 , 0.000000 , 103812, 2.26941 
C++, quicksort_50000.sh, 50000, 32.737427 , 6.587952 , 0.031067 , 0.000000 , 102080, 2.27922 
C++, selectionsort_50000.sh, 50000, 32.429382 , 6.530762 , 0.029602 , 0.000000 , 102464, 2.25726 
C#, bubblesort_50000.sh, 50000, 34.945007 , 7.037292 , 0.023376 , 0.000000 , 67228, 2.43741 
C#, cyclesort_50000.sh, 50000, 35.622742 , 7.125549 , 0.031616 , 0.000000 , 69448, 2.4873 
C#, heapsort_50000.sh, 50000, 35.530884 , 7.132507 , 0.026550 , 0.000000 , 69736, 2.48105 
C#, insertionsort_50000.sh, 50000, 34.542419 , 6.980408 , 0.022583 , 0.000000 , 69896, 2.40744 
C#, mergesort_50000.sh, 50000, 35.129883 , 7.033813 , 0.022705 , 0.000000 , 69768, 2.45522 
C#, oddevensort_50000.sh, 50000, 35.674194 , 7.154358 , 0.031433 , 0.000000 , 65688, 2.48932 
C#, quicksort_50000.sh, 50000, 34.860657 , 7.019043 , 0.023193 , 0.000000 , 67380, 2.43135 
C#, selectionsort_50000.sh, 50000, 35.160400 , 7.145630 , 0.029175 , 0.000000 , 70092, 2.44535 
Go, bubblesort_50000.sh, 50000, 7.550842 , 1.611450 , 0.010315 , 0.000000 , 54896, 0.515373 
Go, cyclesort_50000.sh, 50000, 7.849976 , 1.690491 , 0.009949 , 0.000000 , 55588, 0.534506 
Go, heapsort_50000.sh, 50000, 7.663696 , 1.630554 , 0.016357 , 0.000000 , 53632, 0.522583 
Go, insertionsort_50000.sh, 50000, 7.652283 , 1.645569 , 0.008423 , 0.000000 , 52980, 0.521439 
Go, mergesort_50000.sh, 50000, 7.647827 , 1.630920 , 0.016663 , 0.000000 , 56972, 0.521228 
Go, oddevensort_50000.sh, 50000, 7.701538 , 1.659912 , 0.008423 , 0.000000 , 56756, 0.524952 
Go, quicksort_50000.sh, 50000, 7.655457 , 1.607361 , 0.016296 , 0.000000 , 56832, 0.524245 
Go, selectionsort_50000.sh, 50000, 7.636597 , 1.642029 , 0.008057 , 0.000000 , 54784, 0.520377 
Haskell, bubblesort_50000.sh, 50000, 1311.417297 , 265.713135 , 0.465271 , 0.000000 , 1086228, 90.7786 
Haskell, cyclesort_50000.sh, 50000, 2534.260864 , 514.709778 , 0.849915 , 0.000000 , 1307816, 175.321 
Haskell, heapsort_50000.sh, 50000, 1334.457214 , 270.729858 , 0.450256 , 0.000000 , 1007068, 92.3642 
Haskell, insertionsort_50000.sh, 50000, 1321.141663 , 268.164185 , 0.444885 , 0.000000 , 1036496, 91.4177 
Haskell, mergesort_50000.sh, 50000, 1328.339355 , 270.336792 , 0.468994 , 0.000000 , 1097028, 91.817 
Haskell, oddevensort_50000.sh, 50000, 1256.267456 , 255.883118 , 0.445496 , 0.000000 , 1180140, 86.8272 
Haskell, quicksort_50000.sh, 50000, 1329.668213 , 269.929443 , 0.468079 , 0.000000 , 974496, 92.0128 
Haskell, selectionsort_50000.sh, 50000, 1377.718140 , 280.920166 , 0.502563 , 0.000000 , 1067148, 95.1615 
Rust, bubblesort_50000.sh, 50000, 1071.263062 , 219.168457 , 0.401123 , 0.000000 , 2168164, 73.9123 
Rust, cyclesort_50000.sh, 50000, 1067.083923 , 218.067749 , 0.413940 , 0.000000 , 2162840, 73.6215 
Rust, heapsort_50000.sh, 50000, 1050.116638 , 215.004395 , 0.404785 , 0.000000 , 2156344, 72.4387 
Rust, insertionsort_50000.sh, 50000, 1072.363098 , 219.243835 , 0.420898 , 0.000000 , 2167356, 74.0021 
Rust, mergesort_50000.sh, 50000, 1051.379150 , 215.220642 , 0.413086 , 0.000000 , 2190452, 72.5108 
Rust, oddevensort_50000.sh, 50000, 1083.958252 , 222.184448 , 0.422791 , 0.000000 , 2166188, 74.742 
Rust, quicksort_50000.sh, 50000, 1065.719360 , 217.302246 , 0.424194 , 0.000000 , 2184832, 73.5904 
Rust, selectionsort_50000.sh, 50000, 1059.984131 , 216.616821 , 0.411865 , 0.000000 , 2176844, 73.1289 
Swift, bubblesort_50000.sh, 50000, 2972.176086 , 604.921143 , 1.032776 , 0.000000 , 255972, 206.621 
Swift, cyclesort_50000.sh, 50000, 2945.919495 , 599.761719 , 1.039124 , 0.000000 , 255804, 204.865 
Swift, heapsort_50000.sh, 50000, 3139.553589 , 639.016663 , 1.067688 , 0.000000 , 259284, 218.363 
Swift, insertionsort_50000.sh, 50000, 2987.354858 , 608.387878 , 0.991516 , 0.000000 , 256144, 207.562 
Swift, mergesort_50000.sh, 50000, 3129.437988 , 636.358765 , 1.052185 , 0.000000 , 257428, 217.702 
Swift, oddevensort_50000.sh, 50000, 15.532715 , 3.117615 , 0.017334 , 0.000000 , 116452, 1.08281 
Swift, quicksort_50000.sh, 50000, 3218.320190 , 652.703857 , 1.046204 , 0.000000 , 256584, 223.757 
Swift, selectionsort_50000.sh, 50000, 2981.451477 , 606.452515 , 0.957764 , 0.000000 , 255828, 207.345 
C, bubblesort_50000.sh, 50000, 7.886963 , 1.569031 , 0.017090 , 0.000000 , 42948, 0.550216 
C, cyclesort_50000.sh, 50000, 9.022522 , 1.847168 , 0.013123 , 0.000000 , 43660, 0.624652 
C, heapsort_50000.sh, 50000, 8.695374 , 1.776001 , 0.016418 , 0.000000 , 42844, 0.601983 
C, insertionsort_50000.sh, 50000, 8.004517 , 1.641052 , 0.012268 , 0.000000 , 41992, 0.555025 
C, mergesort_50000.sh, 50000, 9.750122 , 1.999207 , 0.022644 , 0.000000 , 45448, 0.674367 
C, oddevensort_50000.sh, 50000, 8.313843 , 1.706055 , 0.016602 , 0.000000 , 44040, 0.573259 
C, quicksort_50000.sh, 50000, 9.229919 , 1.875549 , 0.014404 , 0.000000 , 43780, 0.64126 
C, selectionsort_50000.sh, 50000, 8.436707 , 1.719727 , 0.021606 , 0.000000 , 43656, 0.583757 
C++, bubblesort_50000.sh, 50000, 31.966431 , 6.443176 , 0.029785 , 0.000000 , 102740, 2.22543 
C++, cyclesort_50000.sh, 50000, 32.669189 , 6.559692 , 0.032532 , 0.000000 , 103372, 2.27713 
C++, heapsort_50000.sh, 50000, 32.261963 , 6.488831 , 0.028748 , 0.000000 , 101560, 2.24736 
C++, insertionsort_50000.sh, 50000, 32.441406 , 6.520874 , 0.027039 , 0.000000 , 100880, 2.26231 
C++, mergesort_50000.sh, 50000, 35.738342 , 7.208618 , 0.031250 , 0.000000 , 103932, 2.48784 
C++, oddevensort_50000.sh, 50000, 32.523071 , 6.542969 , 0.027283 , 0.000000 , 103460, 2.26625 
C++, quicksort_50000.sh, 50000, 32.788025 , 6.615967 , 0.026184 , 0.000000 , 102280, 2.28364 
C++, selectionsort_50000.sh, 50000, 31.252380 , 6.365112 , 0.030640 , 0.000000 , 103124, 2.17009 
C#, bubblesort_50000.sh, 50000, 34.296448 , 6.890442 , 0.025696 , 0.000000 , 67644, 2.3927 
C#, cyclesort_50000.sh, 50000, 35.172607 , 7.139709 , 0.023743 , 0.000000 , 67420, 2.44751 
C#, heapsort_50000.sh, 50000, 36.355591 , 7.322937 , 0.024536 , 0.000000 , 69556, 2.53482 
C#, insertionsort_50000.sh, 50000, 34.772949 , 6.975586 , 0.024780 , 0.000000 , 67980, 2.42754 
C#, mergesort_50000.sh, 50000, 35.851135 , 7.198914 , 0.024780 , 0.000000 , 69928, 2.50153 
C#, oddevensort_50000.sh, 50000, 35.423645 , 7.078552 , 0.025757 , 0.000000 , 67568, 2.47521 
C#, quicksort_50000.sh, 50000, 34.466736 , 6.943542 , 0.024780 , 0.000000 , 69736, 2.40211 
C#, selectionsort_50000.sh, 50000, 35.058655 , 7.071594 , 0.026184 , 0.000000 , 65512, 2.444 
Go, bubblesort_50000.sh, 50000, 7.619690 , 1.612488 , 0.008362 , 0.000000 , 53196, 0.521713 
Go, cyclesort_50000.sh, 50000, 7.520325 , 1.630493 , 0.010925 , 0.000000 , 54948, 0.510959 
Go, heapsort_50000.sh, 50000, 7.598022 , 1.643372 , 0.009766 , 0.000000 , 55796, 0.515999 
Go, insertionsort_50000.sh, 50000, 7.723328 , 1.678894 , 0.009949 , 0.000000 , 56880, 0.52491 
Go, mergesort_50000.sh, 50000, 7.737488 , 1.673889 , 0.008301 , 0.000000 , 55236, 0.527181 
Go, oddevensort_50000.sh, 50000, 7.667786 , 1.633606 , 0.016602 , 0.000000 , 55220, 0.522839 
Go, quicksort_50000.sh, 50000, 7.816040 , 1.694458 , 0.008484 , 0.000000 , 54588, 0.531996 
Go, selectionsort_50000.sh, 50000, 7.686279 , 1.631470 , 0.015137 , 0.000000 , 54792, 0.524456 
Haskell, bubblesort_50000.sh, 50000, 1309.466309 , 266.887817 , 0.458008 , 0.000000 , 1004336, 90.4886 
Haskell, cyclesort_50000.sh, 50000, 2544.084839 , 517.952454 , 0.856567 , 0.000000 , 1096724, 175.847 
Haskell, heapsort_50000.sh, 50000, 1348.971558 , 273.836975 , 0.493591 , 0.000000 , 978812, 93.3383 
Haskell, insertionsort_50000.sh, 50000, 1322.414062 , 268.753784 , 0.482422 , 0.000000 , 1117444, 91.4533 
Haskell, mergesort_50000.sh, 50000, 1329.716675 , 270.887756 , 0.481018 , 0.000000 , 1085320, 91.8744 
Haskell, oddevensort_50000.sh, 50000, 1261.203674 , 256.932556 , 0.464722 , 0.000000 , 1115192, 87.1492 
Haskell, quicksort_50000.sh, 50000, 1326.700195 , 270.177856 , 0.479431 , 0.000000 , 1065560, 91.7079 
Haskell, selectionsort_50000.sh, 50000, 1395.932495 , 284.089050 , 0.500305 , 0.000000 , 1180204, 96.4899 
Rust, bubblesort_50000.sh, 50000, 1077.886902 , 220.683777 , 0.414917 , 0.000000 , 2172420, 74.3347 
Rust, cyclesort_50000.sh, 50000, 1075.425049 , 219.642334 , 0.401978 , 0.000000 , 2172164, 74.2235 
Rust, heapsort_50000.sh, 50000, 1046.273865 , 214.018860 , 0.400757 , 0.000000 , 2168220, 72.1793 
Rust, insertionsort_50000.sh, 50000, 1066.369507 , 217.210999 , 0.393860 , 0.000000 , 2161948, 73.6823 
Rust, mergesort_50000.sh, 50000, 1042.498291 , 213.304565 , 0.385498 , 0.000000 , 2194464, 71.9309 
Rust, oddevensort_50000.sh, 50000, 1085.331299 , 222.462158 , 0.399963 , 0.000000 , 2193400, 74.8475 
Rust, quicksort_50000.sh, 50000, 1031.543945 , 211.482422 , 0.390381 , 0.000000 , 2198640, 71.0984 
Rust, selectionsort_50000.sh, 50000, 1060.906982 , 216.874817 , 0.395020 , 0.000000 , 2183104, 73.2142 
Swift, bubblesort_50000.sh, 50000, 2944.091187 , 600.577515 , 1.016663 , 0.000000 , 256028, 204.576 
Swift, cyclesort_50000.sh, 50000, 2948.154663 , 600.900452 , 0.964111 , 0.000000 , 255844, 204.969 
Swift, heapsort_50000.sh, 50000, 3132.624084 , 637.934875 , 0.977356 , 0.000000 , 259468, 217.741 
Swift, insertionsort_50000.sh, 50000, 2941.345032 , 599.021240 , 0.966858 , 0.000000 , 256128, 204.566 
Swift, mergesort_50000.sh, 50000, 3147.008484 , 639.285278 , 1.007141 , 0.000000 , 257332, 218.968 
Swift, oddevensort_50000.sh, 50000, 15.513489 , 3.138489 , 0.017578 , 0.000000 , 116492, 1.07848 
Swift, quicksort_50000.sh, 50000, 3169.261536 , 644.057434 , 1.034363 , 0.000000 , 257140, 220.368 
Swift, selectionsort_50000.sh, 50000, 3007.245850 , 611.745667 , 0.987488 , 0.000000 , 255788, 208.963 
C, bubblesort_50000.sh, 50000, 8.122986 , 1.647522 , 0.014771 , 0.000000 , 43588, 0.563752 
C, cyclesort_50000.sh, 50000, 8.945068 , 1.806030 , 0.022949 , 0.000000 , 44116, 0.619556 
C, heapsort_50000.sh, 50000, 8.901794 , 1.820007 , 0.016418 , 0.000000 , 43392, 0.617192 
C, insertionsort_50000.sh, 50000, 7.806946 , 1.569885 , 0.013733 , 0.000000 , 42724, 0.542706 
C, mergesort_50000.sh, 50000, 9.395752 , 1.889038 , 0.015198 , 0.000000 , 45020, 0.653562 
C, oddevensort_50000.sh, 50000, 8.533569 , 1.746582 , 0.012024 , 0.000000 , 43984, 0.592218 
C, quicksort_50000.sh, 50000, 9.322266 , 1.922974 , 0.020630 , 0.000000 , 44076, 0.643913 
C, selectionsort_50000.sh, 50000, 7.896057 , 1.620361 , 0.015259 , 0.000000 , 43464, 0.545565 
C++, bubblesort_50000.sh, 50000, 30.406555 , 6.165710 , 0.023682 , 0.000000 , 103132, 2.11472 
C++, cyclesort_50000.sh, 50000, 33.057068 , 6.665039 , 0.028381 , 0.000000 , 102260, 2.30141 
C++, heapsort_50000.sh, 50000, 31.912354 , 6.425415 , 0.027893 , 0.000000 , 103108, 2.22339 
C++, insertionsort_50000.sh, 50000, 31.011780 , 6.220032 , 0.035278 , 0.000000 , 102020, 2.15921 
C++, mergesort_50000.sh, 50000, 34.775391 , 6.918640 , 0.030212 , 0.000000 , 104696, 2.42943 
C++, oddevensort_50000.sh, 50000, 31.690979 , 6.381287 , 0.028625 , 0.000000 , 103616, 2.20695 
C++, quicksort_50000.sh, 50000, 32.533081 , 6.559692 , 0.031433 , 0.000000 , 102232, 2.26517 
C++, selectionsort_50000.sh, 50000, 32.097839 , 6.453125 , 0.029358 , 0.000000 , 103572, 2.23551 
C#, bubblesort_50000.sh, 50000, 35.117065 , 7.086853 , 0.023621 , 0.000000 , 67524, 2.44728 
C#, cyclesort_50000.sh, 50000, 35.214417 , 7.074890 , 0.030518 , 0.000000 , 69684, 2.45579 
C#, heapsort_50000.sh, 50000, 33.556335 , 6.774597 , 0.025024 , 0.000000 , 63600, 2.33801 
C#, insertionsort_50000.sh, 50000, 34.878479 , 7.026672 , 0.027527 , 0.000000 , 69732, 2.43063 
C#, mergesort_50000.sh, 50000, 35.712952 , 7.152405 , 0.024841 , 0.000000 , 69604, 2.49428 
C#, oddevensort_50000.sh, 50000, 35.435303 , 7.120911 , 0.025879 , 0.000000 , 67356, 2.47096 
C#, quicksort_50000.sh, 50000, 35.568604 , 7.147095 , 0.024353 , 0.000000 , 71584, 2.48131 
C#, selectionsort_50000.sh, 50000, 36.237793 , 7.256775 , 0.027466 , 0.000000 , 65688, 2.53105 
Go, bubblesort_50000.sh, 50000, 7.669922 , 1.657349 , 0.009338 , 0.000000 , 58812, 0.522987 
Go, cyclesort_50000.sh, 50000, 7.842590 , 1.683472 , 0.008484 , 0.000000 , 56888, 0.534654 
Go, heapsort_50000.sh, 50000, 7.720398 , 1.643494 , 0.009521 , 0.000000 , 56356, 0.527972 
Go, insertionsort_50000.sh, 50000, 7.751099 , 1.674683 , 0.009827 , 0.000000 , 56520, 0.526542 
Go, mergesort_50000.sh, 50000, 8.018616 , 1.710266 , 0.009521 , 0.000000 , 55632, 0.547498 
Go, oddevensort_50000.sh, 50000, 7.592773 , 1.649109 , 0.008057 , 0.000000 , 55064, 0.516953 
Go, quicksort_50000.sh, 50000, 7.862610 , 1.693542 , 0.016052 , 0.000000 , 55772, 0.534143 
Go, selectionsort_50000.sh, 50000, 7.522888 , 1.638550 , 0.008606 , 0.000000 , 57212, 0.510664 
Haskell, bubblesort_50000.sh, 50000, 1324.042236 , 269.925049 , 0.458801 , 0.000000 , 1109524, 91.5058 
Haskell, cyclesort_50000.sh, 50000, 2567.015930 , 523.223816 , 0.857849 , 0.000000 , 1254984, 177.403 
Haskell, heapsort_50000.sh, 50000, 1307.472961 , 266.683960 , 0.478943 , 0.000000 , 1094652, 90.3124 
Haskell, insertionsort_50000.sh, 50000, 1290.010315 , 263.359985 , 0.461548 , 0.000000 , 1063184, 89.0888 
Haskell, mergesort_50000.sh, 50000, 1349.570374 , 274.177429 , 0.478699 , 0.000000 , 1085744, 93.3276 
Haskell, oddevensort_50000.sh, 50000, 1260.921875 , 256.499756 , 0.447876 , 0.000000 , 1134892, 87.1791 
Haskell, quicksort_50000.sh, 50000, 1329.998840 , 270.262939 , 0.458740 , 0.000000 , 1067840, 92.003 
Haskell, selectionsort_50000.sh, 50000, 1392.902771 , 283.472290 , 0.478943 , 0.000000 , 1081328, 96.2889 
Rust, bubblesort_50000.sh, 50000, 1069.495117 , 218.182617 , 0.406921 , 0.000000 , 2171888, 73.8351 
Rust, cyclesort_50000.sh, 50000, 1070.920898 , 218.793030 , 0.407043 , 0.000000 , 2173400, 73.9165 
Rust, heapsort_50000.sh, 50000, 1056.647156 , 215.906189 , 0.401001 , 0.000000 , 2177428, 72.9202 
Rust, insertionsort_50000.sh, 50000, 1047.939514 , 214.482361 , 0.401978 , 0.000000 , 2177104, 72.292 
Rust, mergesort_50000.sh, 50000, 1032.880310 , 211.624146 , 0.391052 , 0.000000 , 2195252, 71.2141 
Rust, oddevensort_50000.sh, 50000, 1095.299866 , 223.958862 , 0.410278 , 0.000000 , 2169848, 75.5971 
Rust, quicksort_50000.sh, 50000, 1042.454346 , 213.396912 , 0.401550 , 0.000000 , 2195772, 71.8812 
Rust, selectionsort_50000.sh, 50000, 1068.262207 , 217.801941 , 0.410828 , 0.000000 , 2174804, 73.7719 
Swift, bubblesort_50000.sh, 50000, 3016.266846 , 613.565613 , 1.001892 , 0.000000 , 255808, 209.591 
Swift, cyclesort_50000.sh, 50000, 2986.428284 , 606.215149 , 0.961792 , 0.000000 , 255832, 207.823 
Swift, heapsort_50000.sh, 50000, 3105.097046 , 630.420654 , 1.004944 , 0.000000 , 259496, 216.135 
Swift, insertionsort_50000.sh, 50000, 3007.542358 , 613.442261 , 0.956177 , 0.000000 , 256224, 208.923 
Swift, mergesort_50000.sh, 50000, 3356.595703 , 681.838745 , 1.062988 , 0.000000 , 257276, 233.342 
Swift, oddevensort_50000.sh, 50000, 15.468079 , 3.139709 , 0.012451 , 0.000000 , 116452, 1.07466 
Swift, quicksort_50000.sh, 50000, 3184.057007 , 647.499084 , 1.037109 , 0.000000 , 257096, 221.172 
Swift, selectionsort_50000.sh, 50000, 2933.874634 , 597.357117 , 0.959656 , 0.000000 , 256136, 204.076 
C, bubblesort_50000.sh, 50000, 8.122986 , 1.647522 , 0.014771 , 0.000000 , 43588, 0.563752 
C, bubblesort_100000.sh, 100000, 12.745117 , 2.582275 , 0.021851 , 0.000000 , 52432, 0.883862 
C, cyclesort_50000.sh, 50000, 8.945068 , 1.806030 , 0.022949 , 0.000000 , 44116, 0.619556 
C, cyclesort_100000.sh, 100000, 13.499023 , 2.750305 , 0.023499 , 0.000000 , 53032, 0.935859 
C, heapsort_50000.sh, 50000, 8.901794 , 1.820007 , 0.016418 , 0.000000 , 43392, 0.617192 
C, heapsort_100000.sh, 100000, 13.584900 , 2.729309 , 0.023560 , 0.000000 , 52852, 0.944414 
C, insertionsort_50000.sh, 50000, 7.806946 , 1.569885 , 0.013733 , 0.000000 , 42724, 0.542706 
C, insertionsort_100000.sh, 100000, 12.742371 , 2.582886 , 0.021790 , 0.000000 , 52040, 0.885028 
C, mergesort_50000.sh, 50000, 9.395752 , 1.889038 , 0.015198 , 0.000000 , 45020, 0.653562 
C, mergesort_100000.sh, 100000, 16.370605 , 3.249329 , 0.022888 , 0.000000 , 54072, 1.14416 
C, oddevensort_50000.sh, 50000, 8.533569 , 1.746582 , 0.012024 , 0.000000 , 43984, 0.592218 
C, oddevensort_100000.sh, 100000, 13.591797 , 2.772888 , 0.018311 , 0.000000 , 53200, 0.94406 
C, quicksort_50000.sh, 50000, 9.322266 , 1.922974 , 0.020630 , 0.000000 , 44076, 0.643913 
C, quicksort_100000.sh, 100000, 14.310669 , 2.917419 , 0.021545 , 0.000000 , 52936, 0.99255 
C, selectionsort_50000.sh, 50000, 7.896057 , 1.620361 , 0.015259 , 0.000000 , 43464, 0.545565 
C, selectionsort_100000.sh, 100000, 12.885803 , 2.586243 , 0.019775 , 0.000000 , 52540, 0.897696 
C++, bubblesort_50000.sh, 50000, 30.406555 , 6.165710 , 0.023682 , 0.000000 , 103132, 2.11472 
C++, bubblesort_100000.sh, 100000, 39.116455 , 7.872192 , 0.032776 , 0.000000 , 117904, 2.725 
C++, cyclesort_50000.sh, 50000, 33.057068 , 6.665039 , 0.028381 , 0.000000 , 102260, 2.30141 
C++, cyclesort_100000.sh, 100000, 40.095398 , 8.060181 , 0.034180 , 0.000000 , 118368, 2.79414 
C++, heapsort_50000.sh, 50000, 31.912354 , 6.425415 , 0.027893 , 0.000000 , 103108, 2.22339 
C++, heapsort_100000.sh, 100000, 38.869202 , 7.762390 , 0.033691 , 0.000000 , 117004, 2.71302 
C++, insertionsort_50000.sh, 50000, 31.011780 , 6.220032 , 0.035278 , 0.000000 , 102020, 2.15921 
C++, insertionsort_100000.sh, 100000, 38.907532 , 7.778137 , 0.033508 , 0.000000 , 117656, 2.71613 
C++, mergesort_50000.sh, 50000, 34.775391 , 6.918640 , 0.030212 , 0.000000 , 104696, 2.42943 
C++, mergesort_100000.sh, 100000, 42.594727 , 8.518005 , 0.033508 , 0.000000 , 118720, 2.97287 
C++, oddevensort_50000.sh, 50000, 31.690979 , 6.381287 , 0.028625 , 0.000000 , 103616, 2.20695 
C++, oddevensort_100000.sh, 100000, 38.946655 , 7.786743 , 0.031433 , 0.000000 , 117472, 2.71869 
C++, quicksort_50000.sh, 50000, 32.533081 , 6.559692 , 0.031433 , 0.000000 , 102232, 2.26517 
C++, quicksort_100000.sh, 100000, 39.793945 , 7.979248 , 0.033875 , 0.000000 , 117916, 2.77555 
C++, selectionsort_50000.sh, 50000, 32.097839 , 6.453125 , 0.029358 , 0.000000 , 103572, 2.23551 
C++, selectionsort_100000.sh, 100000, 38.881714 , 7.799744 , 0.031860 , 0.000000 , 117328, 2.71131 
C#, bubblesort_50000.sh, 50000, 35.117065 , 7.086853 , 0.023621 , 0.000000 , 67524, 2.44728 
C#, bubblesort_100000.sh, 100000, 39.027832 , 7.863281 , 0.026733 , 0.000000 , 71472, 2.72155 
C#, cyclesort_50000.sh, 50000, 35.214417 , 7.074890 , 0.030518 , 0.000000 , 69684, 2.45579 
C#, cyclesort_100000.sh, 100000, 38.509094 , 7.797058 , 0.024353 , 0.000000 , 73440, 2.68253 
C#, heapsort_50000.sh, 50000, 33.556335 , 6.774597 , 0.025024 , 0.000000 , 63600, 2.33801 
C#, heapsort_100000.sh, 100000, 38.021545 , 7.715454 , 0.027527 , 0.000000 , 73316, 2.64613 
C#, insertionsort_50000.sh, 50000, 34.878479 , 7.026672 , 0.027527 , 0.000000 , 69732, 2.43063 
C#, insertionsort_100000.sh, 100000, 37.505188 , 7.588440 , 0.025513 , 0.000000 , 73512, 2.6122 
C#, mergesort_50000.sh, 50000, 35.712952 , 7.152405 , 0.024841 , 0.000000 , 69604, 2.49428 
C#, mergesort_100000.sh, 100000, 39.060547 , 7.836670 , 0.026001 , 0.000000 , 73512, 2.72803 
C#, oddevensort_50000.sh, 50000, 35.435303 , 7.120911 , 0.025879 , 0.000000 , 67356, 2.47096 
C#, oddevensort_100000.sh, 100000, 40.128235 , 8.018738 , 0.032471 , 0.000000 , 75552, 2.80527 
C#, quicksort_50000.sh, 50000, 35.568604 , 7.147095 , 0.024353 , 0.000000 , 71584, 2.48131 
C#, quicksort_100000.sh, 100000, 39.162903 , 7.888794 , 0.027222 , 0.000000 , 73404, 2.73158 
C#, selectionsort_50000.sh, 50000, 36.237793 , 7.256775 , 0.027466 , 0.000000 , 65688, 2.53105 
C#, selectionsort_100000.sh, 100000, 38.650879 , 7.788757 , 0.026123 , 0.000000 , 73364, 2.69581 
Go, bubblesort_50000.sh, 50000, 7.669922 , 1.657349 , 0.009338 , 0.000000 , 58812, 0.522987 
Go, bubblesort_100000.sh, 100000, 8.659180 , 1.772522 , 0.008850 , 0.000000 , 57000, 0.598449 
Go, cyclesort_50000.sh, 50000, 7.842590 , 1.683472 , 0.008484 , 0.000000 , 56888, 0.534654 
Go, cyclesort_100000.sh, 100000, 8.899170 , 1.860046 , 0.014954 , 0.000000 , 57656, 0.611982 
Go, heapsort_50000.sh, 50000, 7.720398 , 1.643494 , 0.009521 , 0.000000 , 56356, 0.527972 
Go, heapsort_100000.sh, 100000, 7.820679 , 1.694824 , 0.009766 , 0.000000 , 56036, 0.531979 
Go, insertionsort_50000.sh, 50000, 7.751099 , 1.674683 , 0.009827 , 0.000000 , 56520, 0.526542 
Go, insertionsort_100000.sh, 100000, 8.568237 , 1.816528 , 0.008545 , 0.000000 , 54400, 0.586452 
Go, mergesort_50000.sh, 50000, 8.018616 , 1.710266 , 0.009521 , 0.000000 , 55632, 0.547498 
Go, mergesort_100000.sh, 100000, 8.053162 , 1.736206 , 0.009766 , 0.000000 , 56080, 0.549052 
Go, oddevensort_50000.sh, 50000, 7.592773 , 1.649109 , 0.008057 , 0.000000 , 55064, 0.516953 
Go, oddevensort_100000.sh, 100000, 7.728821 , 1.655823 , 0.009216 , 0.000000 , 58004, 0.525915 
Go, quicksort_50000.sh, 50000, 7.862610 , 1.693542 , 0.016052 , 0.000000 , 55772, 0.534143 
Go, quicksort_100000.sh, 100000, 8.272217 , 1.761169 , 0.012085 , 0.000000 , 55228, 0.565952 
Go, selectionsort_50000.sh, 50000, 7.522888 , 1.638550 , 0.008606 , 0.000000 , 57212, 0.510664 
Go, selectionsort_100000.sh, 100000, 7.763977 , 1.689697 , 0.010071 , 0.000000 , 57424, 0.526259 
Haskell, bubblesort_50000.sh, 50000, 1324.042236 , 269.925049 , 0.458801 , 0.000000 , 1109524, 91.5058 
Haskell, bubblesort_100000.sh, 100000, 2580.565674 , 524.879211 , 0.877319 , 0.000000 , 1927076, 178.441 
Haskell, cyclesort_50000.sh, 50000, 2567.015930 , 523.223816 , 0.857849 , 0.000000 , 1254984, 177.403 
Haskell, cyclesort_100000.sh, 100000, 5253.054810 , 1068.723816 , 1.708008 , 0.000000 , 2527180, 363.216 
Haskell, heapsort_50000.sh, 50000, 1307.472961 , 266.683960 , 0.478943 , 0.000000 , 1094652, 90.3124 
Haskell, heapsort_100000.sh, 100000, 2641.784302 , 536.722107 , 0.871582 , 0.000000 , 1696816, 182.745 
Haskell, insertionsort_50000.sh, 50000, 1290.010315 , 263.359985 , 0.461548 , 0.000000 , 1063184, 89.0888 
Haskell, insertionsort_100000.sh, 100000, 2684.606018 , 545.291687 , 0.897095 , 0.000000 , 2138476, 185.708 
Haskell, mergesort_50000.sh, 50000, 1349.570374 , 274.177429 , 0.478699 , 0.000000 , 1085744, 93.3276 
Haskell, mergesort_100000.sh, 100000, 2649.995789 , 538.096741 , 0.897156 , 0.000000 , 1822788, 183.297 
Haskell, oddevensort_50000.sh, 50000, 1260.921875 , 256.499756 , 0.447876 , 0.000000 , 1134892, 87.1791 
Haskell, oddevensort_100000.sh, 100000, 2442.362549 , 497.195068 , 0.826416 , 0.000000 , 1926768, 168.812 
Haskell, quicksort_50000.sh, 50000, 1329.998840 , 270.262939 , 0.458740 , 0.000000 , 1067840, 92.003 
Haskell, quicksort_100000.sh, 100000, 2617.862183 , 531.568298 , 0.889099 , 0.000000 , 1679872, 181.107 
Haskell, selectionsort_50000.sh, 50000, 1392.902771 , 283.472290 , 0.478943 , 0.000000 , 1081328, 96.2889 
Haskell, selectionsort_100000.sh, 100000, 2758.220093 , 561.162415 , 0.924561 , 0.000000 , 1752244, 190.667 
Rust, bubblesort_50000.sh, 50000, 1069.495117 , 218.182617 , 0.406921 , 0.000000 , 2171888, 73.8351 
Rust, bubblesort_100000.sh, 100000, 2089.558716 , 426.970642 , 0.757446 , 0.000000 , 4285192, 144.163 
Rust, cyclesort_50000.sh, 50000, 1070.920898 , 218.793030 , 0.407043 , 0.000000 , 2173400, 73.9165 
Rust, cyclesort_100000.sh, 100000, 2104.434692 , 431.335388 , 0.792664 , 0.000000 , 4272124, 145.01 
Rust, heapsort_50000.sh, 50000, 1056.647156 , 215.906189 , 0.401001 , 0.000000 , 2177428, 72.9202 
Rust, heapsort_100000.sh, 100000, 2075.901672 , 424.982056 , 0.764771 , 0.000000 , 4305708, 143.126 
Rust, insertionsort_50000.sh, 50000, 1047.939514 , 214.482361 , 0.401978 , 0.000000 , 2177104, 72.292 
Rust, insertionsort_100000.sh, 100000, 2087.776611 , 426.474060 , 0.771057 , 0.000000 , 4297156, 144.031 
Rust, mergesort_50000.sh, 50000, 1032.880310 , 211.624146 , 0.391052 , 0.000000 , 2195252, 71.2141 
Rust, mergesort_100000.sh, 100000, 2039.601379 , 416.978027 , 0.740417 , 0.000000 , 4330700, 140.697 
Rust, oddevensort_50000.sh, 50000, 1095.299866 , 223.958862 , 0.410278 , 0.000000 , 2169848, 75.5971 
Rust, oddevensort_100000.sh, 100000, 2139.297913 , 438.032776 , 0.803528 , 0.000000 , 4277912, 147.468 
Rust, quicksort_50000.sh, 50000, 1042.454346 , 213.396912 , 0.401550 , 0.000000 , 2195772, 71.8812 
Rust, quicksort_100000.sh, 100000, 2038.909302 , 418.087524 , 0.757507 , 0.000000 , 4354332, 140.535 
Rust, selectionsort_50000.sh, 50000, 1068.262207 , 217.801941 , 0.410828 , 0.000000 , 2174804, 73.7719 
Rust, selectionsort_100000.sh, 100000, 2092.307190 , 427.441833 , 0.810791 , 0.000000 , 4314308, 144.319 
Swift, bubblesort_50000.sh, 50000, 3016.266846 , 613.565613 , 1.001892 , 0.000000 , 255808, 209.591 
Swift, bubblesort_100000.sh, 100000, 534.063660 , 105.642029 , 0.214844 , 0.000000 , 397392, 37.1616 
Swift, cyclesort_50000.sh, 50000, 2986.428284 , 606.215149 , 0.961792 , 0.000000 , 255832, 207.823 
Swift, cyclesort_100000.sh, 100000, 539.234314 , 106.417053 , 0.200317 , 0.000000 , 397016, 37.5609 
Swift, heapsort_50000.sh, 50000, 3105.097046 , 630.420654 , 1.004944 , 0.000000 , 259496, 216.135 
Swift, heapsort_100000.sh, 100000, 588.987122 , 116.628113 , 0.217285 , 0.000000 , 400684, 40.9804 
Swift, insertionsort_50000.sh, 50000, 3007.542358 , 613.442261 , 0.956177 , 0.000000 , 256224, 208.923 
Swift, insertionsort_100000.sh, 100000, 538.491211 , 106.333496 , 0.198059 , 0.000000 , 397448, 37.5022 
Swift, mergesort_50000.sh, 50000, 3356.595703 , 681.838745 , 1.062988 , 0.000000 , 257276, 233.342 
Swift, mergesort_100000.sh, 100000, 592.743408 , 116.882751 , 0.205994 , 0.000000 , 399056, 41.2972 
Swift, oddevensort_50000.sh, 50000, 15.468079 , 3.139709 , 0.012451 , 0.000000 , 116452, 1.07466 
Swift, oddevensort_100000.sh, 100000, 529.346985 , 104.974060 , 0.198669 , 0.000000 , 396912, 36.81 
Swift, quicksort_50000.sh, 50000, 3184.057007 , 647.499084 , 1.037109 , 0.000000 , 257096, 221.172 
Swift, quicksort_100000.sh, 100000, 587.535767 , 116.016785 , 0.213623 , 0.000000 , 398552, 40.906 
Swift, selectionsort_50000.sh, 50000, 2933.874634 , 597.357117 , 0.959656 , 0.000000 , 256136, 204.076 
Swift, selectionsort_100000.sh, 100000, 542.255554 , 106.786011 , 0.194946 , 0.000000 , 397156, 37.7921 
C, bubblesort_100000.sh, 100000, 12.866211 , 2.565063 , 0.018555 , 0.000000 , 52720, 0.897143 
C, cyclesort_100000.sh, 100000, 14.280518 , 2.929016 , 0.016724 , 0.000000 , 53120, 0.990558 
C, heapsort_100000.sh, 100000, 13.551575 , 2.751221 , 0.018066 , 0.000000 , 52676, 0.940784 
C, insertionsort_100000.sh, 100000, 13.384155 , 2.682312 , 0.015320 , 0.000000 , 52080, 0.934463 
C, mergesort_100000.sh, 100000, 14.349976 , 2.880432 , 0.015808 , 0.000000 , 53896, 1.00064 
C, oddevensort_100000.sh, 100000, 13.155884 , 2.695007 , 0.016663 , 0.000000 , 53164, 0.912337 
C, quicksort_100000.sh, 100000, 14.106140 , 2.835205 , 0.018066 , 0.000000 , 52992, 0.981733 
C, selectionsort_100000.sh, 100000, 12.902954 , 2.603516 , 0.016541 , 0.000000 , 52788, 0.897681 
C++, bubblesort_100000.sh, 100000, 39.473267 , 7.927979 , 0.034058 , 0.000000 , 117472, 2.74958 
C++, cyclesort_100000.sh, 100000, 39.133240 , 7.850708 , 0.035706 , 0.000000 , 118200, 2.72752 
C++, heapsort_100000.sh, 100000, 40.708435 , 8.096130 , 0.032776 , 0.000000 , 118544, 2.84492 
C++, insertionsort_100000.sh, 100000, 39.153137 , 7.877991 , 0.033081 , 0.000000 , 118208, 2.72804 
C++, mergesort_100000.sh, 100000, 41.062500 , 8.289124 , 0.031921 , 0.000000 , 119564, 2.85866 
C++, oddevensort_100000.sh, 100000, 39.568909 , 7.958923 , 0.034607 , 0.000000 , 118416, 2.75575 
C++, quicksort_100000.sh, 100000, 38.231689 , 7.761108 , 0.029480 , 0.000000 , 117252, 2.65766 
C++, selectionsort_100000.sh, 100000, 39.325684 , 7.894531 , 0.032898 , 0.000000 , 118260, 2.7418 
C#, bubblesort_100000.sh, 100000, 39.158020 , 7.785217 , 0.029053 , 0.000000 , 69420, 2.73856 
C#, cyclesort_100000.sh, 100000, 38.858215 , 7.831482 , 0.027344 , 0.000000 , 71472, 2.70844 
C#, heapsort_100000.sh, 100000, 39.538940 , 7.988220 , 0.026367 , 0.000000 , 73288, 2.75429 
C#, insertionsort_100000.sh, 100000, 39.381897 , 7.858521 , 0.027527 , 0.000000 , 67268, 2.75322 
C#, mergesort_100000.sh, 100000, 38.472839 , 7.753601 , 0.027710 , 0.000000 , 71392, 2.68188 
C#, oddevensort_100000.sh, 100000, 39.036682 , 7.834290 , 0.027161 , 0.000000 , 69268, 2.72474 
C#, quicksort_100000.sh, 100000, 37.240662 , 7.556396 , 0.024597 , 0.000000 , 73428, 2.59281 
C#, selectionsort_100000.sh, 100000, 37.398254 , 7.548645 , 0.027039 , 0.000000 , 71552, 2.6067 
Go, bubblesort_100000.sh, 100000, 7.823914 , 1.702759 , 0.012268 , 0.000000 , 57628, 0.53105 
Go, cyclesort_100000.sh, 100000, 7.696289 , 1.641724 , 0.006531 , 0.000000 , 57956, 0.526872 
Go, heapsort_100000.sh, 100000, 7.987366 , 1.706970 , 0.012390 , 0.000000 , 57936, 0.543375 
Go, insertionsort_100000.sh, 100000, 7.307617 , 1.563171 , 0.006592 , 0.000000 , 56744, 0.499349 
Go, mergesort_100000.sh, 100000, 7.749512 , 1.684875 , 0.011108 , 0.000000 , 57528, 0.525637 
Go, oddevensort_100000.sh, 100000, 7.785278 , 1.656189 , 0.008057 , 0.000000 , 57380, 0.532612 
Go, quicksort_100000.sh, 100000, 7.612000 , 1.658203 , 0.009460 , 0.000000 , 58008, 0.516707 
Go, selectionsort_100000.sh, 100000, 7.928101 , 1.773560 , 0.009766 , 0.000000 , 57724, 0.533513 
Haskell, bubblesort_100000.sh, 100000, -259536.011902 , 530.499390 , 0.888977 , 0.000000 , 1966268, 180.322 
Haskell, cyclesort_100000.sh, 100000, 5255.381897 , 1070.237549 , 1.725159 , 0.000000 , 2231160, 363.248 
Haskell, heapsort_100000.sh, 100000, 2631.359253 , 534.780090 , 0.895569 , 0.000000 , 1694832, 181.993 
Haskell, insertionsort_100000.sh, 100000, 2561.865967 , 521.491943 , 0.866150 , 0.000000 , 1711340, 177.043 
Haskell, mergesort_100000.sh, 100000, 2698.791138 , 549.336304 , 0.911133 , 0.000000 , 2085864, 186.545 
Haskell, oddevensort_100000.sh, 100000, 2440.950806 , 496.303833 , 0.829041 , 0.000000 , 1903320, 168.753 
Haskell, quicksort_100000.sh, 100000, 2603.103027 , 528.765747 , 0.882263 , 0.000000 , 1705748, 180.069 
Haskell, selectionsort_100000.sh, 100000, 2712.100159 , 551.285645 , 0.923828 , 0.000000 , 1785572, 187.48 
Rust, bubblesort_100000.sh, 100000, 2094.907349 , 428.174194 , 0.779236 , 0.000000 , 4346844, 144.515 
Rust, cyclesort_100000.sh, 100000, 2092.163879 , 427.790710 , 0.766541 , 0.000000 , 4312696, 144.278 
Rust, heapsort_100000.sh, 100000, 2066.059814 , 422.404907 , 0.758911 , 0.000000 , 4318336, 142.509 
Rust, insertionsort_100000.sh, 100000, 2079.787231 , 425.504700 , 0.749268 , 0.000000 , 4330300, 143.423 
Rust, mergesort_100000.sh, 100000, 2095.481018 , 426.395569 , 0.783081 , 0.000000 , 4373404, 144.774 
Rust, oddevensort_100000.sh, 100000, 2099.414246 , 428.697327 , 0.774353 , 0.000000 , 4329152, 144.859 
Rust, quicksort_100000.sh, 100000, 2031.235168 , 415.681519 , 0.763428 , 0.000000 , 4347956, 140.06 
Rust, selectionsort_100000.sh, 100000, 2097.410400 , 428.019836 , 0.767334 , 0.000000 , 4322244, 144.748 
Swift, bubblesort_100000.sh, 100000, 532.471191 , 105.398621 , 0.200439 , 0.000000 , 397128, 37.0489 
Swift, cyclesort_100000.sh, 100000, 536.393860 , 106.121704 , 0.201721 , 0.000000 , 397300, 37.3368 
Swift, heapsort_100000.sh, 100000, 603.353210 , 118.876587 , 0.215393 , 0.000000 , 400960, 42.0585 
Swift, insertionsort_100000.sh, 100000, 550.938293 , 108.248779 , 0.204285 , 0.000000 , 397560, 38.4238 
Swift, mergesort_100000.sh, 100000, 595.867249 , 117.371582 , 0.214111 , 0.000000 , 399152, 41.5312 
Swift, oddevensort_100000.sh, 100000, 539.546082 , 106.397888 , 0.200623 , 0.000000 , 397032, 37.5863 
Swift, quicksort_100000.sh, 100000, 582.150085 , 115.129028 , 0.213806 , 0.000000 , 398644, 40.5123 
Swift, selectionsort_100000.sh, 100000, 534.103271 , 105.746277 , 0.191040 , 0.000000 , 397652, 37.179 
C, bubblesort_100000.sh, 100000, 13.104675 , 2.649414 , 0.024109 , 0.000000 , 52528, 0.911537 
C, cyclesort_100000.sh, 100000, 14.337585 , 2.910767 , 0.022156 , 0.000000 , 53264, 0.995899 
C, heapsort_100000.sh, 100000, 13.557373 , 2.783264 , 0.022095 , 0.000000 , 52772, 0.938684 
C, insertionsort_100000.sh, 100000, 13.163147 , 2.670959 , 0.021729 , 0.000000 , 51896, 0.914026 
C, mergesort_100000.sh, 100000, 14.445557 , 2.962952 , 0.021423 , 0.000000 , 54072, 1.00132 
C, oddevensort_100000.sh, 100000, 12.844788 , 2.612244 , 0.022034 , 0.000000 , 53120, 0.890424 
C, quicksort_100000.sh, 100000, 13.953674 , 2.816284 , 0.022827 , 0.000000 , 51796, 0.969929 
C, selectionsort_100000.sh, 100000, 12.847351 , 2.636963 , 0.021057 , 0.000000 , 54100, 0.888281 
C++, bubblesort_100000.sh, 100000, 38.297607 , 7.746094 , 0.033081 , 0.000000 , 117048, 2.66391 
C++, cyclesort_100000.sh, 100000, 39.254456 , 7.952209 , 0.032593 , 0.000000 , 118812, 2.73009 
C++, heapsort_100000.sh, 100000, 38.333130 , 7.767700 , 0.028992 , 0.000000 , 118548, 2.66837 
C++, insertionsort_100000.sh, 100000, 38.748779 , 7.807190 , 0.035339 , 0.000000 , 116804, 2.69719 
C++, mergesort_100000.sh, 100000, 41.692505 , 8.385010 , 0.034180 , 0.000000 , 119996, 2.90499 
C++, oddevensort_100000.sh, 100000, 39.140442 , 7.871704 , 0.031982 , 0.000000 , 117704, 2.7269 
C++, quicksort_100000.sh, 100000, 38.667786 , 7.766235 , 0.030884 , 0.000000 , 117248, 2.69578 
C++, selectionsort_100000.sh, 100000, 39.012146 , 7.846741 , 0.030823 , 0.000000 , 117988, 2.7186 
C#, bubblesort_100000.sh, 100000, 39.235474 , 7.868835 , 0.028992 , 0.000000 , 69476, 2.73796 
C#, cyclesort_100000.sh, 100000, 38.973083 , 7.852173 , 0.027527 , 0.000000 , 73752, 2.71615 
C#, heapsort_100000.sh, 100000, 38.390320 , 7.763123 , 0.026062 , 0.000000 , 71488, 2.67541 
C#, insertionsort_100000.sh, 100000, 38.022705 , 7.624756 , 0.026550 , 0.000000 , 71632, 2.65312 
C#, mergesort_100000.sh, 100000, 38.349792 , 7.759399 , 0.026794 , 0.000000 , 73652, 2.67029 
C#, oddevensort_100000.sh, 100000, 39.761108 , 8.019897 , 0.024597 , 0.000000 , 73508, 2.77313 
C#, quicksort_100000.sh, 100000, 38.786194 , 7.797729 , 0.027405 , 0.000000 , 73648, 2.70571 
C#, selectionsort_100000.sh, 100000, 37.664001 , 7.584412 , 0.025879 , 0.000000 , 69332, 2.62602 
Go, bubblesort_100000.sh, 100000, 7.568726 , 1.625549 , 0.009766 , 0.000000 , 57676, 0.515804 
Go, cyclesort_100000.sh, 100000, 7.773804 , 1.674744 , 0.008240 , 0.000000 , 55612, 0.530234 
Go, heapsort_100000.sh, 100000, 7.738403 , 1.639282 , 0.009644 , 0.000000 , 56972, 0.529905 
Go, insertionsort_100000.sh, 100000, 7.770081 , 1.694153 , 0.008179 , 0.000000 , 55032, 0.527946 
Go, mergesort_100000.sh, 100000, 7.335999 , 1.578003 , 0.013428 , 0.000000 , 57664, 0.499905 
Go, oddevensort_100000.sh, 100000, 7.523010 , 1.631042 , 0.010681 , 0.000000 , 57592, 0.512066 
Go, quicksort_100000.sh, 100000, 7.978394 , 1.707825 , 0.009583 , 0.000000 , 57728, 0.543787 
Go, selectionsort_100000.sh, 100000, 8.012634 , 1.717651 , 0.009583 , 0.000000 , 59084, 0.546702 
Haskell, bubblesort_100000.sh, 100000, 2620.278870 , 531.977661 , 0.869995 , 0.000000 , 1730536, 181.293 
Haskell, cyclesort_100000.sh, 100000, 5196.916992 , 1058.497681 , 1.708008 , 0.000000 , 2138684, 359.184 
Haskell, heapsort_100000.sh, 100000, 2589.472534 , 525.367798 , 0.863220 , 0.000000 , 1760840, 179.146 
Haskell, insertionsort_100000.sh, 100000, 2686.681641 , 546.424805 , 0.880310 , 0.000000 , 2145228, 185.802 
Haskell, mergesort_100000.sh, 100000, 2608.220581 , 531.049438 , 0.836548 , 0.000000 , 1755280, 180.291 
Haskell, oddevensort_100000.sh, 100000, 2440.031128 , 496.557556 , 0.815430 , 0.000000 , 1902204, 168.641 
Haskell, quicksort_100000.sh, 100000, 2596.026123 , 527.856873 , 0.887024 , 0.000000 , 1685412, 179.517 
Haskell, selectionsort_100000.sh, 100000, 2803.729065 , 568.861450 , 0.930481 , 0.000000 , 1986468, 193.974 
Rust, bubblesort_100000.sh, 100000, 2121.860901 , 433.407104 , 0.778015 , 0.000000 , 4311084, 146.396 
Rust, cyclesort_100000.sh, 100000, 2093.332397 , 427.274536 , 0.764587 , 0.000000 , 4269976, 144.463 
Rust, heapsort_100000.sh, 100000, 2053.356567 , 420.109619 , 0.753601 , 0.000000 , 4300600, 141.574 
Rust, insertionsort_100000.sh, 100000, 2078.864502 , 424.615967 , 0.769470 , 0.000000 , 4286356, 143.408 
Rust, mergesort_100000.sh, 100000, 2076.129333 , 424.171387 , 0.755859 , 0.000000 , 4321376, 143.242 
Rust, oddevensort_100000.sh, 100000, 2100.566406 , 429.209595 , 0.770996 , 0.000000 , 4286956, 144.895 
Rust, quicksort_100000.sh, 100000, 2035.478210 , 416.155029 , 0.749390 , 0.000000 , 4349316, 140.398 
Rust, selectionsort_100000.sh, 100000, 2075.128357 , 424.582153 , 0.752808 , 0.000000 , 4316784, 143.104 
Swift, bubblesort_100000.sh, 100000, 535.129700 , 105.836487 , 0.190491 , 0.000000 , 397328, 37.2448 
Swift, cyclesort_100000.sh, 100000, 537.845703 , 106.253113 , 0.193970 , 0.000000 , 397256, 37.4593 
Swift, heapsort_100000.sh, 100000, 589.190796 , 116.658936 , 0.222412 , 0.000000 , 400768, 40.9957 
Swift, insertionsort_100000.sh, 100000, 543.206604 , 107.002991 , 0.199158 , 0.000000 , 397352, 37.8583 
Swift, mergesort_100000.sh, 100000, 598.863159 , 118.037476 , 0.211914 , 0.000000 , 399284, 41.7437 
Swift, oddevensort_100000.sh, 100000, 535.527100 , 105.542053 , 0.192383 , 0.000000 , 397108, 37.3189 
Swift, quicksort_100000.sh, 100000, 590.471680 , 116.366150 , 0.206055 , 0.000000 , 398784, 41.1427 
Swift, selectionsort_100000.sh, 100000, 545.040039 , 107.694763 , 0.199219 , 0.000000 , 397780, 37.9612 
C, bubblesort_100000.sh, 100000, 13.056641 , 2.644958 , 0.023438 , 0.000000 , 54224, 0.905351 
C, cyclesort_100000.sh, 100000, 13.631958 , 2.747559 , 0.021973 , 0.000000 , 54636, 0.946946 
C, heapsort_100000.sh, 100000, 13.481445 , 2.758118 , 0.022949 , 0.000000 , 54092, 0.932485 
C, insertionsort_100000.sh, 100000, 13.374817 , 2.668884 , 0.022583 , 0.000000 , 53480, 0.931196 
C, mergesort_100000.sh, 100000, 14.401794 , 2.914001 , 0.021423 , 0.000000 , 55668, 1.00029 
C, oddevensort_100000.sh, 100000, 13.314026 , 2.689453 , 0.022583 , 0.000000 , 54628, 0.925197 
C, quicksort_100000.sh, 100000, 14.572388 , 2.974365 , 0.023010 , 0.000000 , 54572, 1.00936 
C, selectionsort_100000.sh, 100000, 13.254089 , 2.680664 , 0.023071 , 0.000000 , 54440, 0.920994 
C++, bubblesort_100000.sh, 100000, 38.789978 , 7.789856 , 0.032043 , 0.000000 , 118632, 2.70455 
C++, cyclesort_100000.sh, 100000, 39.775757 , 7.955444 , 0.029846 , 0.000000 , 117792, 2.77848 
C++, heapsort_100000.sh, 100000, 39.133301 , 7.869812 , 0.033020 , 0.000000 , 118076, 2.72781 
C++, insertionsort_100000.sh, 100000, 38.465820 , 7.727173 , 0.030273 , 0.000000 , 117648, 2.68178 
C++, mergesort_100000.sh, 100000, 41.919922 , 8.403503 , 0.031860 , 0.000000 , 119844, 2.9243 
C++, oddevensort_100000.sh, 100000, 38.599731 , 7.796570 , 0.030945 , 0.000000 , 118796, 2.68856 
C++, quicksort_100000.sh, 100000, 38.515259 , 7.793274 , 0.028076 , 0.000000 , 116712, 2.68056 
C++, selectionsort_100000.sh, 100000, 38.213440 , 7.768250 , 0.030273 , 0.000000 , 117264, 2.65644 
C#, bubblesort_100000.sh, 100000, 38.182068 , 7.706238 , 0.027222 , 0.000000 , 73500, 2.66134 
C#, cyclesort_100000.sh, 100000, 38.773071 , 7.778198 , 0.024719 , 0.000000 , 73460, 2.70683 
C#, heapsort_100000.sh, 100000, 38.227112 , 7.657593 , 0.028992 , 0.000000 , 73432, 2.67066 
C#, insertionsort_100000.sh, 100000, 38.771057 , 7.776001 , 0.025574 , 0.000000 , 69356, 2.70626 
C#, mergesort_100000.sh, 100000, 39.081543 , 7.846436 , 0.023804 , 0.000000 , 71444, 2.72914 
C#, oddevensort_100000.sh, 100000, 38.621094 , 7.845459 , 0.026550 , 0.000000 , 67488, 2.68728 
C#, quicksort_100000.sh, 100000, 39.050842 , 7.830933 , 0.026733 , 0.000000 , 69296, 2.72662 
C#, selectionsort_100000.sh, 100000, 39.412842 , 7.870117 , 0.027771 , 0.000000 , 71428, 2.75365 
Go, bubblesort_100000.sh, 100000, 7.821960 , 1.699280 , 0.009705 , 0.000000 , 57948, 0.531569 
Go, cyclesort_100000.sh, 100000, 7.856567 , 1.676331 , 0.011841 , 0.000000 , 56384, 0.535832 
Go, heapsort_100000.sh, 100000, 8.031921 , 1.743835 , 0.008240 , 0.000000 , 57408, 0.54658 
Go, insertionsort_100000.sh, 100000, 7.990234 , 1.707336 , 0.011169 , 0.000000 , 56340, 0.544324 
Go, mergesort_100000.sh, 100000, 7.740540 , 1.662354 , 0.007874 , 0.000000 , 55548, 0.52705 
Go, oddevensort_100000.sh, 100000, 7.534180 , 1.638855 , 0.009583 , 0.000000 , 55708, 0.511711 
Go, quicksort_100000.sh, 100000, 7.758362 , 1.678772 , 0.009521 , 0.000000 , 55928, 0.528601 
Go, selectionsort_100000.sh, 100000, 7.678040 , 1.649841 , 0.009705 , 0.000000 , 57612, 0.523936 
Haskell, bubblesort_100000.sh, 100000, 2596.607239 , 527.521545 , 0.872925 , 0.000000 , 1926976, 179.609 
Haskell, cyclesort_100000.sh, 100000, 5270.194397 , 1071.234863 , 1.740173 , 0.000000 , 2155320, 364.459 
Haskell, heapsort_100000.sh, 100000, 2643.176697 , 536.228149 , 0.900208 , 0.000000 , 1989112, 182.892 
Haskell, insertionsort_100000.sh, 100000, 2672.534668 , 543.915588 , 0.905579 , 0.000000 , 2142108, 184.752 
Haskell, mergesort_100000.sh, 100000, 2648.718079 , 539.349365 , 0.888306 , 0.000000 , 2059228, 183.049 
Haskell, oddevensort_100000.sh, 100000, 2440.847656 , 496.096924 , 0.809631 , 0.000000 , 1907212, 168.783 
Haskell, quicksort_100000.sh, 100000, 2632.718750 , 533.862671 , 0.874268 , 0.000000 , 1699592, 182.203 
Haskell, selectionsort_100000.sh, 100000, 2741.276489 , 557.710266 , 0.907532 , 0.000000 , 1733624, 189.489 
Rust, bubblesort_100000.sh, 100000, 2079.450317 , 424.723633 , 0.763916 , 0.000000 , 4310236, 143.449 
Rust, cyclesort_100000.sh, 100000, 2093.456482 , 426.838379 , 0.777893 , 0.000000 , 4301328, 144.51 
Rust, heapsort_100000.sh, 100000, 2089.307861 , 426.087708 , 0.759338 , 0.000000 , 4311848, 144.225 
Rust, insertionsort_100000.sh, 100000, 2070.633362 , 422.942505 , 0.741882 , 0.000000 , 4283060, 142.887 
Rust, mergesort_100000.sh, 100000, 2048.809326 , 417.848816 , 0.753540 , 0.000000 , 4330632, 141.409 
Rust, oddevensort_100000.sh, 100000, 2118.751282 , 433.676575 , 0.751404 , 0.000000 , 4338360, 146.112 
Rust, quicksort_100000.sh, 100000, 2050.954468 , 419.491150 , 0.742432 , 0.000000 , 4337040, 141.455 
Rust, selectionsort_100000.sh, 100000, 2104.728699 , 429.803955 , 0.765930 , 0.000000 , 4274456, 145.236 
Swift, bubblesort_100000.sh, 100000, 540.435852 , 106.578003 , 0.197510 , 0.000000 , 397296, 37.6562 
Swift, cyclesort_100000.sh, 100000, 536.977478 , 105.931519 , 0.192993 , 0.000000 , 397392, 37.4096 
Swift, heapsort_100000.sh, 100000, 601.230652 , 118.397217 , 0.223083 , 0.000000 , 400512, 41.9032 
Swift, insertionsort_100000.sh, 100000, 540.423584 , 106.551025 , 0.197998 , 0.000000 , 397136, 37.6543 
Swift, mergesort_100000.sh, 100000, 599.873657 , 118.185120 , 0.208801 , 0.000000 , 398984, 41.8192 
Swift, oddevensort_100000.sh, 100000, 535.349304 , 105.712585 , 0.186890 , 0.000000 , 397152, 37.2845 
Swift, quicksort_100000.sh, 100000, 596.610657 , 117.682556 , 0.204163 , 0.000000 , 399016, 41.568 
Swift, selectionsort_100000.sh, 100000, 533.758728 , 105.297852 , 0.193359 , 0.000000 , 397388, 37.1794 
C, bubblesort_100000.sh, 100000, 13.059631 , 2.700684 , 0.016296 , 0.000000 , 54116, 0.903103 
C, cyclesort_100000.sh, 100000, 14.040710 , 2.842529 , 0.017456 , 0.000000 , 54768, 0.976572 
C, heapsort_100000.sh, 100000, 13.157898 , 2.645508 , 0.020264 , 0.000000 , 54084, 0.916133 
C, insertionsort_100000.sh, 100000, 12.908325 , 2.639038 , 0.021790 , 0.000000 , 53420, 0.893715 
C, mergesort_100000.sh, 100000, 14.321533 , 2.873535 , 0.023499 , 0.000000 , 55624, 0.996803 
C, oddevensort_100000.sh, 100000, 13.433594 , 2.743347 , 0.021362 , 0.000000 , 54552, 0.930879 
C, quicksort_100000.sh, 100000, 14.273376 , 2.888184 , 0.020752 , 0.000000 , 54296, 0.99284 
C, selectionsort_100000.sh, 100000, 13.141357 , 2.659485 , 0.021484 , 0.000000 , 54172, 0.911897 
C++, bubblesort_100000.sh, 100000, 39.135681 , 7.922363 , 0.033020 , 0.000000 , 117564, 2.72188 
C++, cyclesort_100000.sh, 100000, 39.389954 , 7.948425 , 0.032837 , 0.000000 , 117416, 2.74109 
C++, heapsort_100000.sh, 100000, 39.392517 , 7.925598 , 0.033691 , 0.000000 , 118420, 2.74261 
C++, insertionsort_100000.sh, 100000, 38.114807 , 7.707642 , 0.030640 , 0.000000 , 118232, 2.65232 
C++, mergesort_100000.sh, 100000, 41.118652 , 8.317078 , 0.032471 , 0.000000 , 119420, 2.86222 
C++, oddevensort_100000.sh, 100000, 37.976929 , 7.648926 , 0.029419 , 0.000000 , 117256, 2.64538 
C++, quicksort_100000.sh, 100000, 39.444885 , 7.893311 , 0.034729 , 0.000000 , 117776, 2.75069 
C++, selectionsort_100000.sh, 100000, 38.615845 , 7.800354 , 0.030212 , 0.000000 , 117956, 2.68695 
C#, bubblesort_100000.sh, 100000, 39.096802 , 7.890259 , 0.024841 , 0.000000 , 77456, 2.72619 
C#, cyclesort_100000.sh, 100000, 39.225220 , 7.921753 , 0.027222 , 0.000000 , 73452, 2.73231 
C#, heapsort_100000.sh, 100000, 39.297668 , 7.886902 , 0.029480 , 0.000000 , 71508, 2.74179 
C#, insertionsort_100000.sh, 100000, 38.914490 , 7.827332 , 0.027039 , 0.000000 , 73544, 2.7151 
C#, mergesort_100000.sh, 100000, 38.537231 , 7.769836 , 0.024170 , 0.000000 , 73152, 2.6875 
C#, oddevensort_100000.sh, 100000, 38.929443 , 7.848694 , 0.027222 , 0.000000 , 73520, 2.71454 
C#, quicksort_100000.sh, 100000, 39.234558 , 7.948914 , 0.028503 , 0.000000 , 73460, 2.73235 
C#, selectionsort_100000.sh, 100000, 37.778015 , 7.660950 , 0.025330 , 0.000000 , 73668, 2.63063 
Go, bubblesort_100000.sh, 100000, 7.711304 , 1.626221 , 0.006836 , 0.000000 , 57284, 0.530067 
Go, cyclesort_100000.sh, 100000, 8.030762 , 1.747620 , 0.011353 , 0.000000 , 55548, 0.545101 
Go, heapsort_100000.sh, 100000, 7.540344 , 1.601074 , 0.006836 , 0.000000 , 57624, 0.517205 
Go, insertionsort_100000.sh, 100000, 8.051758 , 1.740295 , 0.010620 , 0.000000 , 56420, 0.547103 
Go, mergesort_100000.sh, 100000, 7.870178 , 1.703186 , 0.008484 , 0.000000 , 57892, 0.535467 
Go, oddevensort_100000.sh, 100000, 7.578613 , 1.640503 , 0.009460 , 0.000000 , 55720, 0.515789 
Go, quicksort_100000.sh, 100000, 7.642212 , 1.647156 , 0.008240 , 0.000000 , 56752, 0.521339 
Go, selectionsort_100000.sh, 100000, 7.770142 , 1.659546 , 0.006409 , 0.000000 , 57896, 0.532293 
Haskell, bubblesort_100000.sh, 100000, 2595.711121 , 527.970154 , 0.847839 , 0.000000 , 1906916, 179.495 
Haskell, cyclesort_100000.sh, 100000, 5260.256226 , 1068.807556 , 1.740845 , 0.000000 , 2447580, 363.843 
Haskell, heapsort_100000.sh, 100000, 2665.310425 , 541.451721 , 0.902466 , 0.000000 , 1930940, 184.376 
Haskell, insertionsort_100000.sh, 100000, 2568.319397 , 522.225525 , 0.844299 , 0.000000 , 1739844, 177.553 
Haskell, mergesort_100000.sh, 100000, 2635.044861 , 535.038391 , 0.842163 , 0.000000 , 1749792, 182.271 
Haskell, oddevensort_100000.sh, 100000, 2424.186707 , 493.114441 , 0.805725 , 0.000000 , 1749776, 167.577 
Haskell, quicksort_100000.sh, 100000, 2583.543396 , 524.835266 , 0.873169 , 0.000000 , 1690852, 178.7 
Haskell, selectionsort_100000.sh, 100000, 2736.204956 , 556.665710 , 0.918396 , 0.000000 , 1756480, 189.126 
Rust, bubblesort_100000.sh, 100000, 2088.258301 , 426.466919 , 0.753784 , 0.000000 , 4311996, 144.084 
Rust, cyclesort_100000.sh, 100000, 2085.131104 , 426.236816 , 0.744385 , 0.000000 , 4281196, 143.845 
Rust, heapsort_100000.sh, 100000, 2057.100952 , 420.190979 , 0.741272 , 0.000000 , 4294428, 141.942 
Rust, insertionsort_100000.sh, 100000, 2066.356567 , 423.108643 , 0.758850 , 0.000000 , 4311916, 142.477 
Rust, mergesort_100000.sh, 100000, 2022.806641 , 414.026184 , 0.735107 , 0.000000 , 4381180, 139.49 
Rust, oddevensort_100000.sh, 100000, 2131.511902 , 435.070007 , 0.777710 , 0.000000 , 4335720, 147.096 
Rust, quicksort_100000.sh, 100000, 2059.744507 , 421.053345 , 0.746582 , 0.000000 , 4318436, 142.085 
Rust, selectionsort_100000.sh, 100000, 2093.680298 , 428.062317 , 0.769958 , 0.000000 , 4296856, 144.39 
Swift, bubblesort_100000.sh, 100000, 545.155029 , 107.419617 , 0.196106 , 0.000000 , 397232, 37.9948 
Swift, cyclesort_100000.sh, 100000, 539.757812 , 106.641541 , 0.197754 , 0.000000 , 397080, 37.5962 
Swift, heapsort_100000.sh, 100000, 602.369141 , 118.762939 , 0.219666 , 0.000000 , 400436, 41.9779 
Swift, insertionsort_100000.sh, 100000, 533.748840 , 105.408020 , 0.190918 , 0.000000 , 397508, 37.1618 
Swift, mergesort_100000.sh, 100000, 598.445190 , 118.083679 , 0.209534 , 0.000000 , 399068, 41.7022 
Swift, oddevensort_100000.sh, 100000, 534.356140 , 105.932251 , 0.198730 , 0.000000 , 397236, 37.1658 
Swift, quicksort_100000.sh, 100000, 597.419495 , 117.585754 , 0.212708 , 0.000000 , 398608, 41.6517 
Swift, selectionsort_100000.sh, 100000, 540.470581 , 106.719910 , 0.183411 , 0.000000 , 397260, 37.6656 
